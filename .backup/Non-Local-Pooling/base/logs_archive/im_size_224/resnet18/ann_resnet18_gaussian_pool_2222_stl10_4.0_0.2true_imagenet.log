
 Run on time: 2022-06-22 17:40:39.744186

 Arguments:
	 gpu                  : True
	 log                  : True
	 seed                 : 0
	 momentum             : 0.9
	 amsgrad              : True
	 dataset              : STL10
	 batch_size           : 8
	 architecture         : RESNET18_GAUSSIAN_POOL_2222
	 im_size              : 224
	 relu_threshold       : 4.0
	 learning_rate        : 0.01
	 pretrained_backbone  : 
	 pretrained_ann       : 
	 weight_decay         : 0.0
	 test_only            : False
	 epochs               : 300
	 lr_interval          : [180, 240, 270]
	 lr_reduce            : 5
	 optimizer            : SGD
	 dropout              : 0.2
	 kernel_size          : 3
	 dont_save            : False
	 visualize            : False
	 devices              : 0,1
 DataParallel(
  (module): NetworkByName(
    (net): ResNet_v2(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pooling): GaussianPooling2d(
            kernel_size=2, stride=2, padding=0
            (ToHidden): Sequential(
              (0): AdaptiveAvgPool2d(output_size=(1, 1))
              (1): Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1))
              (2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (3): ReLU()
            )
            (ToMean): Sequential(
              (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (ToSigma): Sequential(
              (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Sigmoid()
            )
            (activation): Softplus(beta=1, threshold=20)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pooling): GaussianPooling2d(
            kernel_size=2, stride=2, padding=0
            (ToHidden): Sequential(
              (0): AdaptiveAvgPool2d(output_size=(1, 1))
              (1): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1))
              (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (3): ReLU()
            )
            (ToMean): Sequential(
              (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (ToSigma): Sequential(
              (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
              (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Sigmoid()
            )
            (activation): Softplus(beta=1, threshold=20)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer3): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pooling): GaussianPooling2d(
            kernel_size=2, stride=2, padding=0
            (ToHidden): Sequential(
              (0): AdaptiveAvgPool2d(output_size=(1, 1))
              (1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1))
              (2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (3): ReLU()
            )
            (ToMean): Sequential(
              (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (ToSigma): Sequential(
              (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Sigmoid()
            )
            (activation): Softplus(beta=1, threshold=20)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer4): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pooling): GaussianPooling2d(
            kernel_size=2, stride=2, padding=0
            (ToHidden): Sequential(
              (0): AdaptiveAvgPool2d(output_size=(1, 1))
              (1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
              (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (3): ReLU()
            )
            (ToMean): Sequential(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1))
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (ToSigma): Sequential(
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1))
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Sigmoid()
            )
            (activation): Softplus(beta=1, threshold=20)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=512, out_features=10, bias=True)
    )
  )
)
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    maximize: False
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0
)
 Epoch: 1, lr: 1.0e-02, train_loss: 2.5090, train_acc: 0.1754 test_loss: 2.0755, test_acc: 0.2041, best: 0.2041, time: 0:01:08
 Epoch: 2, lr: 1.0e-02, train_loss: 2.0391, train_acc: 0.2366 test_loss: 1.7432, test_acc: 0.3380, best: 0.3380, time: 0:00:53
 Epoch: 3, lr: 1.0e-02, train_loss: 1.9076, train_acc: 0.2728 test_loss: 17.0630, test_acc: 0.2986, best: 0.3380, time: 0:00:53
 Epoch: 4, lr: 1.0e-02, train_loss: 1.8235, train_acc: 0.3100 test_loss: 1.9222, test_acc: 0.3844, best: 0.3844, time: 0:00:56
 Epoch: 5, lr: 1.0e-02, train_loss: 1.7638, train_acc: 0.3312 test_loss: 2.3451, test_acc: 0.3736, best: 0.3844, time: 0:00:54
 Epoch: 6, lr: 1.0e-02, train_loss: 1.7175, train_acc: 0.3554 test_loss: 1.6295, test_acc: 0.4170, best: 0.4170, time: 0:00:53
 Epoch: 7, lr: 1.0e-02, train_loss: 1.6596, train_acc: 0.3812 test_loss: 1.6678, test_acc: 0.4465, best: 0.4465, time: 0:00:54
 Epoch: 8, lr: 1.0e-02, train_loss: 1.5960, train_acc: 0.3946 test_loss: 1.4840, test_acc: 0.4660, best: 0.4660, time: 0:00:54
 Epoch: 9, lr: 1.0e-02, train_loss: 1.5616, train_acc: 0.4248 test_loss: 1.4719, test_acc: 0.4873, best: 0.4873, time: 0:00:53
 Epoch: 10, lr: 1.0e-02, train_loss: 1.5237, train_acc: 0.4348 test_loss: 1.7555, test_acc: 0.4780, best: 0.4873, time: 0:00:53
 Epoch: 11, lr: 1.0e-02, train_loss: 1.4785, train_acc: 0.4552 test_loss: 1.6929, test_acc: 0.4733, best: 0.4873, time: 0:00:54
 Epoch: 12, lr: 1.0e-02, train_loss: 1.4568, train_acc: 0.4660 test_loss: 1.3929, test_acc: 0.5190, best: 0.5190, time: 0:00:54
 Epoch: 13, lr: 1.0e-02, train_loss: 1.4278, train_acc: 0.4734 test_loss: 1.5839, test_acc: 0.4886, best: 0.5190, time: 0:00:54
 Epoch: 14, lr: 1.0e-02, train_loss: 1.3627, train_acc: 0.4970 test_loss: 1.5773, test_acc: 0.5363, best: 0.5363, time: 0:00:54
 Epoch: 15, lr: 1.0e-02, train_loss: 1.3666, train_acc: 0.4954 test_loss: 1.5109, test_acc: 0.5066, best: 0.5363, time: 0:00:54
 Epoch: 16, lr: 1.0e-02, train_loss: 1.3176, train_acc: 0.5164 test_loss: 1.2664, test_acc: 0.5569, best: 0.5569, time: 0:00:54
 Epoch: 17, lr: 1.0e-02, train_loss: 1.2854, train_acc: 0.5304 test_loss: 1.1067, test_acc: 0.6011, best: 0.6011, time: 0:00:54
 Epoch: 18, lr: 1.0e-02, train_loss: 1.2554, train_acc: 0.5486 test_loss: 1.2119, test_acc: 0.5800, best: 0.6011, time: 0:00:54
 Epoch: 19, lr: 1.0e-02, train_loss: 1.2486, train_acc: 0.5484 test_loss: 1.1653, test_acc: 0.5897, best: 0.6011, time: 0:00:55
 Epoch: 20, lr: 1.0e-02, train_loss: 1.2081, train_acc: 0.5570 test_loss: 1.1607, test_acc: 0.6090, best: 0.6090, time: 0:00:54
 Epoch: 21, lr: 1.0e-02, train_loss: 1.1788, train_acc: 0.5750 test_loss: 1.0675, test_acc: 0.6289, best: 0.6289, time: 0:00:55
 Epoch: 22, lr: 1.0e-02, train_loss: 1.1488, train_acc: 0.5828 test_loss: 1.1172, test_acc: 0.6021, best: 0.6289, time: 0:00:54
 Epoch: 23, lr: 1.0e-02, train_loss: 1.1293, train_acc: 0.5882 test_loss: 1.0591, test_acc: 0.6202, best: 0.6289, time: 0:00:53
 Epoch: 24, lr: 1.0e-02, train_loss: 1.1266, train_acc: 0.5972 test_loss: 1.1514, test_acc: 0.6000, best: 0.6289, time: 0:00:54
 Epoch: 25, lr: 1.0e-02, train_loss: 1.1153, train_acc: 0.5966 test_loss: 0.9876, test_acc: 0.6448, best: 0.6448, time: 0:00:55
 Epoch: 26, lr: 1.0e-02, train_loss: 1.0955, train_acc: 0.6062 test_loss: 0.9753, test_acc: 0.6577, best: 0.6577, time: 0:00:54
 Epoch: 27, lr: 1.0e-02, train_loss: 1.0524, train_acc: 0.6142 test_loss: 1.0549, test_acc: 0.6382, best: 0.6577, time: 0:00:54
 Epoch: 28, lr: 1.0e-02, train_loss: 1.0401, train_acc: 0.6250 test_loss: 1.1016, test_acc: 0.6371, best: 0.6577, time: 0:00:54
 Epoch: 29, lr: 1.0e-02, train_loss: 1.0382, train_acc: 0.6204 test_loss: 1.0050, test_acc: 0.6607, best: 0.6607, time: 0:00:54
 Epoch: 30, lr: 1.0e-02, train_loss: 1.0077, train_acc: 0.6310 test_loss: 1.0508, test_acc: 0.6466, best: 0.6607, time: 0:00:53
 Epoch: 31, lr: 1.0e-02, train_loss: 0.9983, train_acc: 0.6472 test_loss: 1.0051, test_acc: 0.6546, best: 0.6607, time: 0:00:55
 Epoch: 32, lr: 1.0e-02, train_loss: 0.9677, train_acc: 0.6510 test_loss: 1.2096, test_acc: 0.6470, best: 0.6607, time: 0:00:53
 Epoch: 33, lr: 1.0e-02, train_loss: 0.9352, train_acc: 0.6626 test_loss: 1.1638, test_acc: 0.6425, best: 0.6607, time: 0:00:53
 Epoch: 34, lr: 1.0e-02, train_loss: 0.9513, train_acc: 0.6574 test_loss: 0.9637, test_acc: 0.6677, best: 0.6677, time: 0:00:53
 Epoch: 35, lr: 1.0e-02, train_loss: 0.9376, train_acc: 0.6638 test_loss: 0.9214, test_acc: 0.6846, best: 0.6846, time: 0:00:53
 Epoch: 36, lr: 1.0e-02, train_loss: 0.9266, train_acc: 0.6672 test_loss: 1.0800, test_acc: 0.6634, best: 0.6846, time: 0:00:54
 Epoch: 37, lr: 1.0e-02, train_loss: 0.8837, train_acc: 0.6830 test_loss: 0.9333, test_acc: 0.6876, best: 0.6876, time: 0:00:53
 Epoch: 38, lr: 1.0e-02, train_loss: 0.8770, train_acc: 0.6824 test_loss: 0.8643, test_acc: 0.7015, best: 0.7015, time: 0:00:54
 Epoch: 39, lr: 1.0e-02, train_loss: 0.8634, train_acc: 0.6988 test_loss: 1.0016, test_acc: 0.6607, best: 0.7015, time: 0:00:54
 Epoch: 40, lr: 1.0e-02, train_loss: 0.8759, train_acc: 0.6922 test_loss: 0.9066, test_acc: 0.6846, best: 0.7015, time: 0:00:53
 Epoch: 41, lr: 1.0e-02, train_loss: 0.8469, train_acc: 0.7050 test_loss: 0.9027, test_acc: 0.7053, best: 0.7053, time: 0:00:53
 Epoch: 42, lr: 1.0e-02, train_loss: 0.8433, train_acc: 0.6996 test_loss: 0.9667, test_acc: 0.6851, best: 0.7053, time: 0:00:54
 Epoch: 43, lr: 1.0e-02, train_loss: 0.8164, train_acc: 0.7048 test_loss: 0.8749, test_acc: 0.7046, best: 0.7053, time: 0:00:53
 Epoch: 44, lr: 1.0e-02, train_loss: 0.7918, train_acc: 0.7112 test_loss: 0.8975, test_acc: 0.7000, best: 0.7053, time: 0:00:54
 Epoch: 45, lr: 1.0e-02, train_loss: 0.8002, train_acc: 0.7106 test_loss: 0.8070, test_acc: 0.7196, best: 0.7196, time: 0:00:54
 Epoch: 46, lr: 1.0e-02, train_loss: 0.8014, train_acc: 0.7136 test_loss: 0.8929, test_acc: 0.7013, best: 0.7196, time: 0:00:53
 Epoch: 47, lr: 1.0e-02, train_loss: 0.7766, train_acc: 0.7202 test_loss: 0.8458, test_acc: 0.7161, best: 0.7196, time: 0:00:53
 Epoch: 48, lr: 1.0e-02, train_loss: 0.7731, train_acc: 0.7212 test_loss: 0.7923, test_acc: 0.7292, best: 0.7292, time: 0:00:54
 Epoch: 49, lr: 1.0e-02, train_loss: 0.7620, train_acc: 0.7246 test_loss: 0.7849, test_acc: 0.7332, best: 0.7332, time: 0:00:53
 Epoch: 50, lr: 1.0e-02, train_loss: 0.7382, train_acc: 0.7350 test_loss: 0.8538, test_acc: 0.7141, best: 0.7332, time: 0:00:54
 Epoch: 51, lr: 1.0e-02, train_loss: 0.7510, train_acc: 0.7332 test_loss: 0.8519, test_acc: 0.7216, best: 0.7332, time: 0:00:54
 Epoch: 52, lr: 1.0e-02, train_loss: 0.7198, train_acc: 0.7406 test_loss: 0.8961, test_acc: 0.7056, best: 0.7332, time: 0:00:54
 Epoch: 53, lr: 1.0e-02, train_loss: 0.7355, train_acc: 0.7356 test_loss: 0.8112, test_acc: 0.7309, best: 0.7332, time: 0:00:53
 Epoch: 54, lr: 1.0e-02, train_loss: 0.7084, train_acc: 0.7482 test_loss: 0.8207, test_acc: 0.7239, best: 0.7332, time: 0:00:53
 Epoch: 55, lr: 1.0e-02, train_loss: 0.6977, train_acc: 0.7510 test_loss: 0.7721, test_acc: 0.7450, best: 0.7450, time: 0:00:54
 Epoch: 56, lr: 1.0e-02, train_loss: 0.6748, train_acc: 0.7498 test_loss: 0.8147, test_acc: 0.7361, best: 0.7450, time: 0:00:54
 Epoch: 57, lr: 1.0e-02, train_loss: 0.6636, train_acc: 0.7640 test_loss: 0.8872, test_acc: 0.7179, best: 0.7450, time: 0:00:53
 Epoch: 58, lr: 1.0e-02, train_loss: 0.6676, train_acc: 0.7666 test_loss: 0.8695, test_acc: 0.7364, best: 0.7450, time: 0:00:54
 Epoch: 59, lr: 1.0e-02, train_loss: 0.6494, train_acc: 0.7614 test_loss: 0.8503, test_acc: 0.7205, best: 0.7450, time: 0:00:54
 Epoch: 60, lr: 1.0e-02, train_loss: 0.6529, train_acc: 0.7730 test_loss: 1.0420, test_acc: 0.6987, best: 0.7450, time: 0:00:53
 Epoch: 61, lr: 1.0e-02, train_loss: 0.6364, train_acc: 0.7738 test_loss: 0.8679, test_acc: 0.7219, best: 0.7450, time: 0:00:53
 Epoch: 62, lr: 1.0e-02, train_loss: 0.6219, train_acc: 0.7768 test_loss: 0.8233, test_acc: 0.7321, best: 0.7450, time: 0:00:54
 Epoch: 63, lr: 1.0e-02, train_loss: 0.6316, train_acc: 0.7780 test_loss: 0.8727, test_acc: 0.7289, best: 0.7450, time: 0:00:53
 Epoch: 64, lr: 1.0e-02, train_loss: 0.6320, train_acc: 0.7778 test_loss: 0.8474, test_acc: 0.7206, best: 0.7450, time: 0:00:53
 Epoch: 65, lr: 1.0e-02, train_loss: 0.6303, train_acc: 0.7762 test_loss: 0.9012, test_acc: 0.7137, best: 0.7450, time: 0:00:54
 Epoch: 66, lr: 1.0e-02, train_loss: 0.5779, train_acc: 0.7984 test_loss: 0.8143, test_acc: 0.7481, best: 0.7481, time: 0:00:53
 Epoch: 67, lr: 1.0e-02, train_loss: 0.5869, train_acc: 0.7954 test_loss: 0.7916, test_acc: 0.7486, best: 0.7486, time: 0:00:54
 Epoch: 68, lr: 1.0e-02, train_loss: 0.5979, train_acc: 0.7902 test_loss: 0.8064, test_acc: 0.7450, best: 0.7486, time: 0:00:54
 Epoch: 69, lr: 1.0e-02, train_loss: 0.6033, train_acc: 0.7836 test_loss: 0.7801, test_acc: 0.7485, best: 0.7486, time: 0:00:53
 Epoch: 70, lr: 1.0e-02, train_loss: 0.5827, train_acc: 0.7910 test_loss: 0.7866, test_acc: 0.7422, best: 0.7486, time: 0:00:53
 Epoch: 71, lr: 1.0e-02, train_loss: 0.5870, train_acc: 0.7940 test_loss: 0.8615, test_acc: 0.7398, best: 0.7486, time: 0:00:53
 Epoch: 72, lr: 1.0e-02, train_loss: 0.5801, train_acc: 0.7964 test_loss: 0.9935, test_acc: 0.7228, best: 0.7486, time: 0:00:54
 Epoch: 73, lr: 1.0e-02, train_loss: 0.5640, train_acc: 0.8028 test_loss: 0.8705, test_acc: 0.7370, best: 0.7486, time: 0:00:53
 Epoch: 74, lr: 1.0e-02, train_loss: 0.5401, train_acc: 0.8082 test_loss: 0.8632, test_acc: 0.7380, best: 0.7486, time: 0:00:53
 Epoch: 75, lr: 1.0e-02, train_loss: 0.5467, train_acc: 0.8030 test_loss: 0.7869, test_acc: 0.7488, best: 0.7488, time: 0:00:54
 Epoch: 76, lr: 1.0e-02, train_loss: 0.5426, train_acc: 0.8054 test_loss: 0.8080, test_acc: 0.7368, best: 0.7488, time: 0:00:54
 Epoch: 77, lr: 1.0e-02, train_loss: 0.5087, train_acc: 0.8186 test_loss: 0.8434, test_acc: 0.7419, best: 0.7488, time: 0:00:53
 Epoch: 78, lr: 1.0e-02, train_loss: 0.5457, train_acc: 0.8082 test_loss: 0.7947, test_acc: 0.7566, best: 0.7566, time: 0:00:53
 Epoch: 79, lr: 1.0e-02, train_loss: 0.5249, train_acc: 0.8082 test_loss: 0.8676, test_acc: 0.7434, best: 0.7566, time: 0:00:53
 Epoch: 80, lr: 1.0e-02, train_loss: 0.5113, train_acc: 0.8212 test_loss: 0.7873, test_acc: 0.7576, best: 0.7576, time: 0:00:55
 Epoch: 81, lr: 1.0e-02, train_loss: 0.4897, train_acc: 0.8308 test_loss: 0.8239, test_acc: 0.7479, best: 0.7576, time: 0:00:53
 Epoch: 82, lr: 1.0e-02, train_loss: 0.5040, train_acc: 0.8200 test_loss: 0.8252, test_acc: 0.7418, best: 0.7576, time: 0:00:55
 Epoch: 83, lr: 1.0e-02, train_loss: 0.4829, train_acc: 0.8294 test_loss: 0.9237, test_acc: 0.7298, best: 0.7576, time: 0:00:53
 Epoch: 84, lr: 1.0e-02, train_loss: 0.4832, train_acc: 0.8298 test_loss: 0.7511, test_acc: 0.7715, best: 0.7715, time: 0:00:53
 Epoch: 85, lr: 1.0e-02, train_loss: 0.5270, train_acc: 0.8160 test_loss: 0.8271, test_acc: 0.7618, best: 0.7715, time: 0:00:53
 Epoch: 86, lr: 1.0e-02, train_loss: 0.4829, train_acc: 0.8282 test_loss: 0.8419, test_acc: 0.7495, best: 0.7715, time: 0:00:53
 Epoch: 87, lr: 1.0e-02, train_loss: 0.4423, train_acc: 0.8416 test_loss: 0.8719, test_acc: 0.7501, best: 0.7715, time: 0:00:54
 Epoch: 88, lr: 1.0e-02, train_loss: 0.4789, train_acc: 0.8314 test_loss: 0.8238, test_acc: 0.7610, best: 0.7715, time: 0:00:53
 Epoch: 89, lr: 1.0e-02, train_loss: 0.4811, train_acc: 0.8308 test_loss: 0.9191, test_acc: 0.7414, best: 0.7715, time: 0:00:53
 Epoch: 90, lr: 1.0e-02, train_loss: 0.4705, train_acc: 0.8344 test_loss: 0.8013, test_acc: 0.7536, best: 0.7715, time: 0:00:53
 Epoch: 91, lr: 1.0e-02, train_loss: 0.4727, train_acc: 0.8392 test_loss: 0.7995, test_acc: 0.7630, best: 0.7715, time: 0:00:54
 Epoch: 92, lr: 1.0e-02, train_loss: 0.4497, train_acc: 0.8408 test_loss: 0.7707, test_acc: 0.7709, best: 0.7715, time: 0:00:53
 Epoch: 93, lr: 1.0e-02, train_loss: 0.4558, train_acc: 0.8404 test_loss: 0.8295, test_acc: 0.7614, best: 0.7715, time: 0:00:54
 Epoch: 94, lr: 1.0e-02, train_loss: 0.4434, train_acc: 0.8480 test_loss: 0.8634, test_acc: 0.7560, best: 0.7715, time: 0:00:52
 Epoch: 95, lr: 1.0e-02, train_loss: 0.4784, train_acc: 0.8294 test_loss: 0.8922, test_acc: 0.7456, best: 0.7715, time: 0:00:54
 Epoch: 96, lr: 1.0e-02, train_loss: 0.4263, train_acc: 0.8486 test_loss: 0.8192, test_acc: 0.7616, best: 0.7715, time: 0:00:54
 Epoch: 97, lr: 1.0e-02, train_loss: 0.4554, train_acc: 0.8398 test_loss: 0.7955, test_acc: 0.7644, best: 0.7715, time: 0:00:53
 Epoch: 98, lr: 1.0e-02, train_loss: 0.4351, train_acc: 0.8464 test_loss: 0.8148, test_acc: 0.7676, best: 0.7715, time: 0:00:54
 Epoch: 99, lr: 1.0e-02, train_loss: 0.4435, train_acc: 0.8452 test_loss: 0.8905, test_acc: 0.7376, best: 0.7715, time: 0:00:55
 Epoch: 100, lr: 1.0e-02, train_loss: 0.4188, train_acc: 0.8572 test_loss: 0.8095, test_acc: 0.7728, best: 0.7728, time: 0:00:54
 Epoch: 101, lr: 1.0e-02, train_loss: 0.4244, train_acc: 0.8550 test_loss: 0.8092, test_acc: 0.7629, best: 0.7728, time: 0:00:54
 Epoch: 102, lr: 1.0e-02, train_loss: 0.4147, train_acc: 0.8536 test_loss: 0.8714, test_acc: 0.7499, best: 0.7728, time: 0:00:53
 Epoch: 103, lr: 1.0e-02, train_loss: 0.4179, train_acc: 0.8542 test_loss: 0.7685, test_acc: 0.7710, best: 0.7728, time: 0:00:53
 Epoch: 104, lr: 1.0e-02, train_loss: 0.4267, train_acc: 0.8542 test_loss: 0.7401, test_acc: 0.7805, best: 0.7805, time: 0:00:54
 Epoch: 105, lr: 1.0e-02, train_loss: 0.3967, train_acc: 0.8610 test_loss: 0.7860, test_acc: 0.7682, best: 0.7805, time: 0:00:54
 Epoch: 106, lr: 1.0e-02, train_loss: 0.4008, train_acc: 0.8602 test_loss: 0.8373, test_acc: 0.7679, best: 0.7805, time: 0:00:54
 Epoch: 107, lr: 1.0e-02, train_loss: 0.3896, train_acc: 0.8682 test_loss: 0.8105, test_acc: 0.7714, best: 0.7805, time: 0:00:54
 Epoch: 108, lr: 1.0e-02, train_loss: 0.3776, train_acc: 0.8740 test_loss: 0.8258, test_acc: 0.7628, best: 0.7805, time: 0:00:54
 Epoch: 109, lr: 1.0e-02, train_loss: 0.3931, train_acc: 0.8614 test_loss: 0.8025, test_acc: 0.7718, best: 0.7805, time: 0:00:54
 Epoch: 110, lr: 1.0e-02, train_loss: 0.3789, train_acc: 0.8688 test_loss: 0.7865, test_acc: 0.7764, best: 0.7805, time: 0:00:53
 Epoch: 111, lr: 1.0e-02, train_loss: 0.3795, train_acc: 0.8638 test_loss: 0.8416, test_acc: 0.7650, best: 0.7805, time: 0:00:54
 Epoch: 112, lr: 1.0e-02, train_loss: 0.3893, train_acc: 0.8618 test_loss: 0.8188, test_acc: 0.7798, best: 0.7805, time: 0:00:54
 Epoch: 113, lr: 1.0e-02, train_loss: 0.3932, train_acc: 0.8630 test_loss: 0.8849, test_acc: 0.7618, best: 0.7805, time: 0:00:53
 Epoch: 114, lr: 1.0e-02, train_loss: 0.3750, train_acc: 0.8676 test_loss: 0.8313, test_acc: 0.7751, best: 0.7805, time: 0:00:53
 Epoch: 115, lr: 1.0e-02, train_loss: 0.3627, train_acc: 0.8774 test_loss: 0.8378, test_acc: 0.7648, best: 0.7805, time: 0:00:53
 Epoch: 116, lr: 1.0e-02, train_loss: 0.3848, train_acc: 0.8684 test_loss: 0.7503, test_acc: 0.7714, best: 0.7805, time: 0:00:54
 Epoch: 117, lr: 1.0e-02, train_loss: 0.3620, train_acc: 0.8754 test_loss: 0.8134, test_acc: 0.7724, best: 0.7805, time: 0:00:53
 Epoch: 118, lr: 1.0e-02, train_loss: 0.3709, train_acc: 0.8700 test_loss: 0.8726, test_acc: 0.7680, best: 0.7805, time: 0:00:53
 Epoch: 119, lr: 1.0e-02, train_loss: 0.3748, train_acc: 0.8750 test_loss: 0.8720, test_acc: 0.7698, best: 0.7805, time: 0:00:54
 Epoch: 120, lr: 1.0e-02, train_loss: 0.3389, train_acc: 0.8824 test_loss: 0.9108, test_acc: 0.7601, best: 0.7805, time: 0:00:53
 Epoch: 121, lr: 1.0e-02, train_loss: 0.3692, train_acc: 0.8768 test_loss: 0.7658, test_acc: 0.7780, best: 0.7805, time: 0:00:53
 Epoch: 122, lr: 1.0e-02, train_loss: 0.3547, train_acc: 0.8804 test_loss: 0.8177, test_acc: 0.7662, best: 0.7805, time: 0:00:54
 Epoch: 123, lr: 1.0e-02, train_loss: 0.3605, train_acc: 0.8762 test_loss: 0.8199, test_acc: 0.7725, best: 0.7805, time: 0:00:53
 Epoch: 124, lr: 1.0e-02, train_loss: 0.3508, train_acc: 0.8824 test_loss: 0.8384, test_acc: 0.7688, best: 0.7805, time: 0:00:54
 Epoch: 125, lr: 1.0e-02, train_loss: 0.3445, train_acc: 0.8772 test_loss: 0.9645, test_acc: 0.7535, best: 0.7805, time: 0:00:53
 Epoch: 126, lr: 1.0e-02, train_loss: 0.3468, train_acc: 0.8786 test_loss: 0.8312, test_acc: 0.7769, best: 0.7805, time: 0:00:53
 Epoch: 127, lr: 1.0e-02, train_loss: 0.3384, train_acc: 0.8810 test_loss: 0.8310, test_acc: 0.7739, best: 0.7805, time: 0:00:53
 Epoch: 128, lr: 1.0e-02, train_loss: 0.3386, train_acc: 0.8860 test_loss: 0.9088, test_acc: 0.7690, best: 0.7805, time: 0:00:54
 Epoch: 129, lr: 1.0e-02, train_loss: 0.3448, train_acc: 0.8798 test_loss: 0.8429, test_acc: 0.7741, best: 0.7805, time: 0:00:53
 Epoch: 130, lr: 1.0e-02, train_loss: 0.3215, train_acc: 0.8892 test_loss: 0.7675, test_acc: 0.7891, best: 0.7891, time: 0:00:53
 Epoch: 131, lr: 1.0e-02, train_loss: 0.3332, train_acc: 0.8844 test_loss: 0.8274, test_acc: 0.7801, best: 0.7891, time: 0:00:55
 Epoch: 132, lr: 1.0e-02, train_loss: 0.3440, train_acc: 0.8826 test_loss: 0.8432, test_acc: 0.7718, best: 0.7891, time: 0:00:54
 Epoch: 133, lr: 1.0e-02, train_loss: 0.3472, train_acc: 0.8820 test_loss: 0.8885, test_acc: 0.7690, best: 0.7891, time: 0:00:54
 Epoch: 134, lr: 1.0e-02, train_loss: 0.3254, train_acc: 0.8868 test_loss: 0.8758, test_acc: 0.7739, best: 0.7891, time: 0:00:53
 Epoch: 135, lr: 1.0e-02, train_loss: 0.3475, train_acc: 0.8778 test_loss: 0.8440, test_acc: 0.7817, best: 0.7891, time: 0:00:53
 Epoch: 136, lr: 1.0e-02, train_loss: 0.3196, train_acc: 0.8828 test_loss: 0.8344, test_acc: 0.7829, best: 0.7891, time: 0:00:53
 Epoch: 137, lr: 1.0e-02, train_loss: 0.3193, train_acc: 0.8914 test_loss: 0.8151, test_acc: 0.7776, best: 0.7891, time: 0:00:53
 Epoch: 138, lr: 1.0e-02, train_loss: 0.3170, train_acc: 0.8926 test_loss: 0.7830, test_acc: 0.7876, best: 0.7891, time: 0:00:53
 Epoch: 139, lr: 1.0e-02, train_loss: 0.3328, train_acc: 0.8830 test_loss: 0.8082, test_acc: 0.7899, best: 0.7899, time: 0:00:54
 Epoch: 140, lr: 1.0e-02, train_loss: 0.3084, train_acc: 0.8930 test_loss: 0.8511, test_acc: 0.7780, best: 0.7899, time: 0:00:54
 Epoch: 141, lr: 1.0e-02, train_loss: 0.3082, train_acc: 0.8948 test_loss: 0.8478, test_acc: 0.7771, best: 0.7899, time: 0:00:52
 Epoch: 142, lr: 1.0e-02, train_loss: 0.3043, train_acc: 0.8962 test_loss: 0.8393, test_acc: 0.7724, best: 0.7899, time: 0:00:53
 Epoch: 143, lr: 1.0e-02, train_loss: 0.2934, train_acc: 0.8974 test_loss: 0.9325, test_acc: 0.7596, best: 0.7899, time: 0:00:52
 Epoch: 144, lr: 1.0e-02, train_loss: 0.3016, train_acc: 0.8962 test_loss: 0.9042, test_acc: 0.7679, best: 0.7899, time: 0:00:54
 Epoch: 145, lr: 1.0e-02, train_loss: 0.3059, train_acc: 0.8946 test_loss: 0.8193, test_acc: 0.7861, best: 0.7899, time: 0:00:53
 Epoch: 146, lr: 1.0e-02, train_loss: 0.3136, train_acc: 0.8966 test_loss: 0.9379, test_acc: 0.7754, best: 0.7899, time: 0:00:52
 Epoch: 147, lr: 1.0e-02, train_loss: 0.3109, train_acc: 0.8934 test_loss: 0.8556, test_acc: 0.7789, best: 0.7899, time: 0:00:53
 Epoch: 148, lr: 1.0e-02, train_loss: 0.3144, train_acc: 0.8890 test_loss: 0.8150, test_acc: 0.7814, best: 0.7899, time: 0:00:54
 Epoch: 149, lr: 1.0e-02, train_loss: 0.3214, train_acc: 0.8876 test_loss: 0.8676, test_acc: 0.7621, best: 0.7899, time: 0:00:54
 Epoch: 150, lr: 1.0e-02, train_loss: 0.2888, train_acc: 0.9038 test_loss: 0.8488, test_acc: 0.7789, best: 0.7899, time: 0:00:53
 Epoch: 151, lr: 1.0e-02, train_loss: 0.2935, train_acc: 0.9022 test_loss: 0.8836, test_acc: 0.7869, best: 0.7899, time: 0:00:53
 Epoch: 152, lr: 1.0e-02, train_loss: 0.2873, train_acc: 0.9028 test_loss: 0.8590, test_acc: 0.7792, best: 0.7899, time: 0:00:54
 Epoch: 153, lr: 1.0e-02, train_loss: 0.2972, train_acc: 0.8976 test_loss: 0.8126, test_acc: 0.7895, best: 0.7899, time: 0:00:54
 Epoch: 154, lr: 1.0e-02, train_loss: 0.2982, train_acc: 0.8978 test_loss: 0.8531, test_acc: 0.7788, best: 0.7899, time: 0:00:54
 Epoch: 155, lr: 1.0e-02, train_loss: 0.2868, train_acc: 0.9004 test_loss: 0.8336, test_acc: 0.7904, best: 0.7904, time: 0:00:55
 Epoch: 156, lr: 1.0e-02, train_loss: 0.2800, train_acc: 0.9046 test_loss: 0.9288, test_acc: 0.7695, best: 0.7904, time: 0:00:53
 Epoch: 157, lr: 1.0e-02, train_loss: 0.2927, train_acc: 0.9006 test_loss: 0.8256, test_acc: 0.7816, best: 0.7904, time: 0:00:54
 Epoch: 158, lr: 1.0e-02, train_loss: 0.2864, train_acc: 0.8996 test_loss: 0.8089, test_acc: 0.7816, best: 0.7904, time: 0:00:54
 Epoch: 159, lr: 1.0e-02, train_loss: 0.2871, train_acc: 0.9030 test_loss: 0.8630, test_acc: 0.7871, best: 0.7904, time: 0:00:54
 Epoch: 160, lr: 1.0e-02, train_loss: 0.2912, train_acc: 0.8970 test_loss: 0.7990, test_acc: 0.7863, best: 0.7904, time: 0:00:54
 Epoch: 161, lr: 1.0e-02, train_loss: 0.2667, train_acc: 0.9090 test_loss: 0.8267, test_acc: 0.7869, best: 0.7904, time: 0:00:53
 Epoch: 162, lr: 1.0e-02, train_loss: 0.2834, train_acc: 0.9020 test_loss: 0.9531, test_acc: 0.7674, best: 0.7904, time: 0:00:53
 Epoch: 163, lr: 1.0e-02, train_loss: 0.2802, train_acc: 0.9040 test_loss: 0.8651, test_acc: 0.7804, best: 0.7904, time: 0:00:53
 Epoch: 164, lr: 1.0e-02, train_loss: 0.2751, train_acc: 0.9074 test_loss: 0.8614, test_acc: 0.7865, best: 0.7904, time: 0:00:54
 Epoch: 165, lr: 1.0e-02, train_loss: 0.2966, train_acc: 0.8950 test_loss: 0.9050, test_acc: 0.7788, best: 0.7904, time: 0:00:53
 Epoch: 166, lr: 1.0e-02, train_loss: 0.2745, train_acc: 0.9040 test_loss: 0.8194, test_acc: 0.7865, best: 0.7904, time: 0:00:55
 Epoch: 167, lr: 1.0e-02, train_loss: 0.2738, train_acc: 0.9074 test_loss: 0.8694, test_acc: 0.7812, best: 0.7904, time: 0:00:53
 Epoch: 168, lr: 1.0e-02, train_loss: 0.2810, train_acc: 0.9060 test_loss: 0.8077, test_acc: 0.7801, best: 0.7904, time: 0:00:55
 Epoch: 169, lr: 1.0e-02, train_loss: 0.2654, train_acc: 0.9078 test_loss: 0.8252, test_acc: 0.7896, best: 0.7904, time: 0:00:53
 Epoch: 170, lr: 1.0e-02, train_loss: 0.2807, train_acc: 0.9016 test_loss: 0.8789, test_acc: 0.7817, best: 0.7904, time: 0:00:54
 Epoch: 171, lr: 1.0e-02, train_loss: 0.2829, train_acc: 0.8998 test_loss: 0.8158, test_acc: 0.7900, best: 0.7904, time: 0:00:53
 Epoch: 172, lr: 1.0e-02, train_loss: 0.2581, train_acc: 0.9116 test_loss: 0.8405, test_acc: 0.7903, best: 0.7904, time: 0:00:54
 Epoch: 173, lr: 1.0e-02, train_loss: 0.2713, train_acc: 0.9068 test_loss: 0.9596, test_acc: 0.7711, best: 0.7904, time: 0:00:53
 Epoch: 174, lr: 1.0e-02, train_loss: 0.2805, train_acc: 0.9022 test_loss: 0.8899, test_acc: 0.7901, best: 0.7904, time: 0:00:53
 Epoch: 175, lr: 1.0e-02, train_loss: 0.2768, train_acc: 0.9086 test_loss: 0.9176, test_acc: 0.7646, best: 0.7904, time: 0:00:53
 Epoch: 176, lr: 1.0e-02, train_loss: 0.2671, train_acc: 0.9122 test_loss: 0.8132, test_acc: 0.7914, best: 0.7914, time: 0:00:53
 Epoch: 177, lr: 1.0e-02, train_loss: 0.2541, train_acc: 0.9100 test_loss: 0.9470, test_acc: 0.7776, best: 0.7914, time: 0:00:54
 Epoch: 178, lr: 1.0e-02, train_loss: 0.2658, train_acc: 0.9100 test_loss: 0.9479, test_acc: 0.7730, best: 0.7914, time: 0:00:53
 Epoch: 179, lr: 1.0e-02, train_loss: 0.2390, train_acc: 0.9154 test_loss: 0.8090, test_acc: 0.7949, best: 0.7949, time: 0:00:54
 Epoch: 180, lr: 2.0e-03, train_loss: 0.2349, train_acc: 0.9160 test_loss: 0.7738, test_acc: 0.8029, best: 0.8029, time: 0:00:53
 Epoch: 181, lr: 2.0e-03, train_loss: 0.2193, train_acc: 0.9222 test_loss: 0.7835, test_acc: 0.7997, best: 0.8029, time: 0:00:54
 Epoch: 182, lr: 2.0e-03, train_loss: 0.2083, train_acc: 0.9288 test_loss: 0.8141, test_acc: 0.8016, best: 0.8029, time: 0:00:53
 Epoch: 183, lr: 2.0e-03, train_loss: 0.2240, train_acc: 0.9234 test_loss: 0.7732, test_acc: 0.8029, best: 0.8029, time: 0:00:54
 Epoch: 184, lr: 2.0e-03, train_loss: 0.1892, train_acc: 0.9340 test_loss: 0.7823, test_acc: 0.8059, best: 0.8059, time: 0:00:55
 Epoch: 185, lr: 2.0e-03, train_loss: 0.2084, train_acc: 0.9296 test_loss: 0.7786, test_acc: 0.8007, best: 0.8059, time: 0:00:53
 Epoch: 186, lr: 2.0e-03, train_loss: 0.2036, train_acc: 0.9256 test_loss: 0.7669, test_acc: 0.8067, best: 0.8067, time: 0:00:55
 Epoch: 187, lr: 2.0e-03, train_loss: 0.2004, train_acc: 0.9338 test_loss: 0.7700, test_acc: 0.8077, best: 0.8077, time: 0:00:55
 Epoch: 188, lr: 2.0e-03, train_loss: 0.1819, train_acc: 0.9412 test_loss: 0.7835, test_acc: 0.8073, best: 0.8077, time: 0:00:53
 Epoch: 189, lr: 2.0e-03, train_loss: 0.1805, train_acc: 0.9364 test_loss: 0.8138, test_acc: 0.8083, best: 0.8083, time: 0:00:53
 Epoch: 190, lr: 2.0e-03, train_loss: 0.1973, train_acc: 0.9338 test_loss: 0.8406, test_acc: 0.8029, best: 0.8083, time: 0:00:54
 Epoch: 191, lr: 2.0e-03, train_loss: 0.1847, train_acc: 0.9368 test_loss: 0.8015, test_acc: 0.8049, best: 0.8083, time: 0:00:53
 Epoch: 192, lr: 2.0e-03, train_loss: 0.1884, train_acc: 0.9362 test_loss: 0.8066, test_acc: 0.8046, best: 0.8083, time: 0:00:53
 Epoch: 193, lr: 2.0e-03, train_loss: 0.1802, train_acc: 0.9406 test_loss: 0.8131, test_acc: 0.8065, best: 0.8083, time: 0:00:53
 Epoch: 194, lr: 2.0e-03, train_loss: 0.1892, train_acc: 0.9342 test_loss: 0.8217, test_acc: 0.8067, best: 0.8083, time: 0:00:53
 Epoch: 195, lr: 2.0e-03, train_loss: 0.1862, train_acc: 0.9362 test_loss: 0.8374, test_acc: 0.7993, best: 0.8083, time: 0:00:53
 Epoch: 196, lr: 2.0e-03, train_loss: 0.1954, train_acc: 0.9356 test_loss: 0.8609, test_acc: 0.8024, best: 0.8083, time: 0:00:52
 Epoch: 197, lr: 2.0e-03, train_loss: 0.1778, train_acc: 0.9382 test_loss: 0.8241, test_acc: 0.8021, best: 0.8083, time: 0:00:53
 Epoch: 198, lr: 2.0e-03, train_loss: 0.1823, train_acc: 0.9390 test_loss: 0.8344, test_acc: 0.8067, best: 0.8083, time: 0:00:53
 Epoch: 199, lr: 2.0e-03, train_loss: 0.1803, train_acc: 0.9384 test_loss: 0.7887, test_acc: 0.8067, best: 0.8083, time: 0:00:53
 Epoch: 200, lr: 2.0e-03, train_loss: 0.1850, train_acc: 0.9358 test_loss: 0.7966, test_acc: 0.8044, best: 0.8083, time: 0:00:53
 Epoch: 201, lr: 2.0e-03, train_loss: 0.1716, train_acc: 0.9390 test_loss: 0.7877, test_acc: 0.8065, best: 0.8083, time: 0:00:52
 Epoch: 202, lr: 2.0e-03, train_loss: 0.1865, train_acc: 0.9356 test_loss: 0.8147, test_acc: 0.8053, best: 0.8083, time: 0:00:53
 Epoch: 203, lr: 2.0e-03, train_loss: 0.1825, train_acc: 0.9378 test_loss: 0.7920, test_acc: 0.8059, best: 0.8083, time: 0:00:53
 Epoch: 204, lr: 2.0e-03, train_loss: 0.1807, train_acc: 0.9372 test_loss: 0.8133, test_acc: 0.8020, best: 0.8083, time: 0:00:53
 Epoch: 205, lr: 2.0e-03, train_loss: 0.1768, train_acc: 0.9402 test_loss: 0.7970, test_acc: 0.8046, best: 0.8083, time: 0:00:51
 Epoch: 206, lr: 2.0e-03, train_loss: 0.1810, train_acc: 0.9370 test_loss: 0.8368, test_acc: 0.8027, best: 0.8083, time: 0:00:54
 Epoch: 207, lr: 2.0e-03, train_loss: 0.1756, train_acc: 0.9408 test_loss: 0.8078, test_acc: 0.8066, best: 0.8083, time: 0:00:53
 Epoch: 208, lr: 2.0e-03, train_loss: 0.1749, train_acc: 0.9378 test_loss: 0.8007, test_acc: 0.8045, best: 0.8083, time: 0:00:51
 Epoch: 209, lr: 2.0e-03, train_loss: 0.1711, train_acc: 0.9400 test_loss: 0.8232, test_acc: 0.8080, best: 0.8083, time: 0:00:51
 Epoch: 210, lr: 2.0e-03, train_loss: 0.1789, train_acc: 0.9364 test_loss: 0.8203, test_acc: 0.7995, best: 0.8083, time: 0:00:50
 Epoch: 211, lr: 2.0e-03, train_loss: 0.1816, train_acc: 0.9370 test_loss: 0.8271, test_acc: 0.8027, best: 0.8083, time: 0:00:51
 Epoch: 212, lr: 2.0e-03, train_loss: 0.1654, train_acc: 0.9456 test_loss: 0.8392, test_acc: 0.8076, best: 0.8083, time: 0:00:52
 Epoch: 213, lr: 2.0e-03, train_loss: 0.1633, train_acc: 0.9418 test_loss: 0.8153, test_acc: 0.8063, best: 0.8083, time: 0:00:51
 Epoch: 214, lr: 2.0e-03, train_loss: 0.1733, train_acc: 0.9444 test_loss: 0.8088, test_acc: 0.8075, best: 0.8083, time: 0:00:51
 Epoch: 215, lr: 2.0e-03, train_loss: 0.1736, train_acc: 0.9418 test_loss: 0.7962, test_acc: 0.8093, best: 0.8093, time: 0:00:51
 Epoch: 216, lr: 2.0e-03, train_loss: 0.1652, train_acc: 0.9424 test_loss: 0.8295, test_acc: 0.8067, best: 0.8093, time: 0:00:50
 Epoch: 217, lr: 2.0e-03, train_loss: 0.1728, train_acc: 0.9432 test_loss: 0.7894, test_acc: 0.8069, best: 0.8093, time: 0:00:51
 Epoch: 218, lr: 2.0e-03, train_loss: 0.1662, train_acc: 0.9432 test_loss: 0.7950, test_acc: 0.8101, best: 0.8101, time: 0:00:51
 Epoch: 219, lr: 2.0e-03, train_loss: 0.1628, train_acc: 0.9404 test_loss: 0.8080, test_acc: 0.8070, best: 0.8101, time: 0:00:51
 Epoch: 220, lr: 2.0e-03, train_loss: 0.1718, train_acc: 0.9432 test_loss: 0.8259, test_acc: 0.8057, best: 0.8101, time: 0:00:51
 Epoch: 221, lr: 2.0e-03, train_loss: 0.1645, train_acc: 0.9436 test_loss: 0.8020, test_acc: 0.8063, best: 0.8101, time: 0:00:51
 Epoch: 222, lr: 2.0e-03, train_loss: 0.1557, train_acc: 0.9492 test_loss: 0.8297, test_acc: 0.8045, best: 0.8101, time: 0:00:50
 Epoch: 223, lr: 2.0e-03, train_loss: 0.1750, train_acc: 0.9424 test_loss: 0.8130, test_acc: 0.8065, best: 0.8101, time: 0:00:50
 Epoch: 224, lr: 2.0e-03, train_loss: 0.1621, train_acc: 0.9456 test_loss: 0.8074, test_acc: 0.8099, best: 0.8101, time: 0:00:51
 Epoch: 225, lr: 2.0e-03, train_loss: 0.1762, train_acc: 0.9408 test_loss: 0.8288, test_acc: 0.8064, best: 0.8101, time: 0:00:50
 Epoch: 226, lr: 2.0e-03, train_loss: 0.1505, train_acc: 0.9498 test_loss: 0.8463, test_acc: 0.8051, best: 0.8101, time: 0:00:50
 Epoch: 227, lr: 2.0e-03, train_loss: 0.1549, train_acc: 0.9482 test_loss: 0.8142, test_acc: 0.8070, best: 0.8101, time: 0:00:50
 Epoch: 228, lr: 2.0e-03, train_loss: 0.1538, train_acc: 0.9506 test_loss: 0.8397, test_acc: 0.8055, best: 0.8101, time: 0:00:49
 Epoch: 229, lr: 2.0e-03, train_loss: 0.1613, train_acc: 0.9462 test_loss: 0.8259, test_acc: 0.8047, best: 0.8101, time: 0:00:50
 Epoch: 230, lr: 2.0e-03, train_loss: 0.1619, train_acc: 0.9466 test_loss: 0.8396, test_acc: 0.8030, best: 0.8101, time: 0:00:50
 Epoch: 231, lr: 2.0e-03, train_loss: 0.1596, train_acc: 0.9474 test_loss: 0.8144, test_acc: 0.8050, best: 0.8101, time: 0:00:50
 Epoch: 232, lr: 2.0e-03, train_loss: 0.1697, train_acc: 0.9418 test_loss: 0.8133, test_acc: 0.8055, best: 0.8101, time: 0:00:49
 Epoch: 233, lr: 2.0e-03, train_loss: 0.1662, train_acc: 0.9456 test_loss: 0.8160, test_acc: 0.8013, best: 0.8101, time: 0:00:50
 Epoch: 234, lr: 2.0e-03, train_loss: 0.1605, train_acc: 0.9444 test_loss: 0.8122, test_acc: 0.8060, best: 0.8101, time: 0:00:50
 Epoch: 235, lr: 2.0e-03, train_loss: 0.1706, train_acc: 0.9434 test_loss: 0.8198, test_acc: 0.8053, best: 0.8101, time: 0:00:50
 Epoch: 236, lr: 2.0e-03, train_loss: 0.1934, train_acc: 0.9346 test_loss: 0.8149, test_acc: 0.8054, best: 0.8101, time: 0:00:51
 Epoch: 237, lr: 2.0e-03, train_loss: 0.1745, train_acc: 0.9400 test_loss: 0.8068, test_acc: 0.8057, best: 0.8101, time: 0:00:50
 Epoch: 238, lr: 2.0e-03, train_loss: 0.1481, train_acc: 0.9482 test_loss: 0.8136, test_acc: 0.8061, best: 0.8101, time: 0:00:50
 Epoch: 239, lr: 2.0e-03, train_loss: 0.1715, train_acc: 0.9396 test_loss: 0.8185, test_acc: 0.8060, best: 0.8101, time: 0:00:50
 Epoch: 240, lr: 4.0e-04, train_loss: 0.1569, train_acc: 0.9454 test_loss: 0.8007, test_acc: 0.8096, best: 0.8101, time: 0:00:50
 Epoch: 241, lr: 4.0e-04, train_loss: 0.1608, train_acc: 0.9450 test_loss: 0.8028, test_acc: 0.8044, best: 0.8101, time: 0:00:50
 Epoch: 242, lr: 4.0e-04, train_loss: 0.1521, train_acc: 0.9490 test_loss: 0.7755, test_acc: 0.8095, best: 0.8101, time: 0:00:49
 Epoch: 243, lr: 4.0e-04, train_loss: 0.1722, train_acc: 0.9382 test_loss: 0.8142, test_acc: 0.8081, best: 0.8101, time: 0:00:50
 Epoch: 244, lr: 4.0e-04, train_loss: 0.1485, train_acc: 0.9476 test_loss: 0.7899, test_acc: 0.8076, best: 0.8101, time: 0:00:49
 Epoch: 245, lr: 4.0e-04, train_loss: 0.1623, train_acc: 0.9440 test_loss: 0.7991, test_acc: 0.8083, best: 0.8101, time: 0:00:50
 Epoch: 246, lr: 4.0e-04, train_loss: 0.1413, train_acc: 0.9516 test_loss: 0.7726, test_acc: 0.8113, best: 0.8113, time: 0:00:51
 Epoch: 247, lr: 4.0e-04, train_loss: 0.1514, train_acc: 0.9508 test_loss: 0.8027, test_acc: 0.8061, best: 0.8113, time: 0:00:50
 Epoch: 248, lr: 4.0e-04, train_loss: 0.1603, train_acc: 0.9410 test_loss: 0.8038, test_acc: 0.8087, best: 0.8113, time: 0:00:49
 Epoch: 249, lr: 4.0e-04, train_loss: 0.1541, train_acc: 0.9460 test_loss: 0.7972, test_acc: 0.8083, best: 0.8113, time: 0:00:50
 Epoch: 250, lr: 4.0e-04, train_loss: 0.1575, train_acc: 0.9492 test_loss: 0.7973, test_acc: 0.8106, best: 0.8113, time: 0:00:50
 Epoch: 251, lr: 4.0e-04, train_loss: 0.1515, train_acc: 0.9502 test_loss: 0.8064, test_acc: 0.8079, best: 0.8113, time: 0:00:50
 Epoch: 252, lr: 4.0e-04, train_loss: 0.1449, train_acc: 0.9496 test_loss: 0.8097, test_acc: 0.8099, best: 0.8113, time: 0:00:50
 Epoch: 253, lr: 4.0e-04, train_loss: 0.1357, train_acc: 0.9512 test_loss: 0.7831, test_acc: 0.8136, best: 0.8136, time: 0:00:51
 Epoch: 254, lr: 4.0e-04, train_loss: 0.1411, train_acc: 0.9518 test_loss: 0.8246, test_acc: 0.8079, best: 0.8136, time: 0:00:49
 Epoch: 255, lr: 4.0e-04, train_loss: 0.1478, train_acc: 0.9512 test_loss: 0.8119, test_acc: 0.8139, best: 0.8139, time: 0:00:50
 Epoch: 256, lr: 4.0e-04, train_loss: 0.1567, train_acc: 0.9442 test_loss: 0.7946, test_acc: 0.8135, best: 0.8139, time: 0:00:50
 Epoch: 257, lr: 4.0e-04, train_loss: 0.1548, train_acc: 0.9482 test_loss: 0.7923, test_acc: 0.8104, best: 0.8139, time: 0:00:49
 Epoch: 258, lr: 4.0e-04, train_loss: 0.1572, train_acc: 0.9456 test_loss: 0.7930, test_acc: 0.8099, best: 0.8139, time: 0:00:51
 Epoch: 259, lr: 4.0e-04, train_loss: 0.1601, train_acc: 0.9476 test_loss: 0.7971, test_acc: 0.8136, best: 0.8139, time: 0:00:51
 Epoch: 260, lr: 4.0e-04, train_loss: 0.1696, train_acc: 0.9416 test_loss: 0.7906, test_acc: 0.8135, best: 0.8139, time: 0:00:50
 Epoch: 261, lr: 4.0e-04, train_loss: 0.1584, train_acc: 0.9472 test_loss: 0.7803, test_acc: 0.8104, best: 0.8139, time: 0:00:50
 Epoch: 262, lr: 4.0e-04, train_loss: 0.1507, train_acc: 0.9488 test_loss: 0.7844, test_acc: 0.8099, best: 0.8139, time: 0:00:49
 Epoch: 263, lr: 4.0e-04, train_loss: 0.1525, train_acc: 0.9518 test_loss: 0.7917, test_acc: 0.8113, best: 0.8139, time: 0:00:51
 Epoch: 264, lr: 4.0e-04, train_loss: 0.1463, train_acc: 0.9494 test_loss: 0.7959, test_acc: 0.8135, best: 0.8139, time: 0:00:49
 Epoch: 265, lr: 4.0e-04, train_loss: 0.1509, train_acc: 0.9492 test_loss: 0.8210, test_acc: 0.8104, best: 0.8139, time: 0:00:50
 Epoch: 266, lr: 4.0e-04, train_loss: 0.1493, train_acc: 0.9486 test_loss: 0.8083, test_acc: 0.8085, best: 0.8139, time: 0:00:50
 Epoch: 267, lr: 4.0e-04, train_loss: 0.1355, train_acc: 0.9510 test_loss: 0.7988, test_acc: 0.8111, best: 0.8139, time: 0:00:50
 Epoch: 268, lr: 4.0e-04, train_loss: 0.1628, train_acc: 0.9470 test_loss: 0.7878, test_acc: 0.8094, best: 0.8139, time: 0:00:50
 Epoch: 269, lr: 4.0e-04, train_loss: 0.1446, train_acc: 0.9520 test_loss: 0.7841, test_acc: 0.8111, best: 0.8139, time: 0:00:50
 Epoch: 270, lr: 8.0e-05, train_loss: 0.1483, train_acc: 0.9516 test_loss: 0.7967, test_acc: 0.8105, best: 0.8139, time: 0:00:50
 Epoch: 271, lr: 8.0e-05, train_loss: 0.1559, train_acc: 0.9480 test_loss: 0.7823, test_acc: 0.8114, best: 0.8139, time: 0:00:50
 Epoch: 272, lr: 8.0e-05, train_loss: 0.1403, train_acc: 0.9520 test_loss: 0.7879, test_acc: 0.8130, best: 0.8139, time: 0:00:49
 Epoch: 273, lr: 8.0e-05, train_loss: 0.1571, train_acc: 0.9450 test_loss: 0.7957, test_acc: 0.8149, best: 0.8149, time: 0:00:50
 Epoch: 274, lr: 8.0e-05, train_loss: 0.1458, train_acc: 0.9496 test_loss: 0.7822, test_acc: 0.8097, best: 0.8149, time: 0:00:51
 Epoch: 275, lr: 8.0e-05, train_loss: 0.1341, train_acc: 0.9556 test_loss: 0.7684, test_acc: 0.8107, best: 0.8149, time: 0:00:52
 Epoch: 276, lr: 8.0e-05, train_loss: 0.1587, train_acc: 0.9478 test_loss: 0.7890, test_acc: 0.8099, best: 0.8149, time: 0:00:51
 Epoch: 277, lr: 8.0e-05, train_loss: 0.1426, train_acc: 0.9520 test_loss: 0.7749, test_acc: 0.8126, best: 0.8149, time: 0:00:49
 Epoch: 278, lr: 8.0e-05, train_loss: 0.1605, train_acc: 0.9470 test_loss: 0.7802, test_acc: 0.8147, best: 0.8149, time: 0:00:51
 Epoch: 279, lr: 8.0e-05, train_loss: 0.1607, train_acc: 0.9462 test_loss: 0.7798, test_acc: 0.8123, best: 0.8149, time: 0:00:49
 Epoch: 280, lr: 8.0e-05, train_loss: 0.1588, train_acc: 0.9438 test_loss: 0.8134, test_acc: 0.8077, best: 0.8149, time: 0:00:50
 Epoch: 281, lr: 8.0e-05, train_loss: 0.1465, train_acc: 0.9516 test_loss: 0.7875, test_acc: 0.8135, best: 0.8149, time: 0:00:50
 Epoch: 282, lr: 8.0e-05, train_loss: 0.1574, train_acc: 0.9484 test_loss: 0.7754, test_acc: 0.8106, best: 0.8149, time: 0:00:50
 Epoch: 283, lr: 8.0e-05, train_loss: 0.1422, train_acc: 0.9518 test_loss: 0.7751, test_acc: 0.8115, best: 0.8149, time: 0:00:49
 Epoch: 284, lr: 8.0e-05, train_loss: 0.1355, train_acc: 0.9538 test_loss: 0.7762, test_acc: 0.8133, best: 0.8149, time: 0:00:51
 Epoch: 285, lr: 8.0e-05, train_loss: 0.1503, train_acc: 0.9490 test_loss: 0.7759, test_acc: 0.8144, best: 0.8149, time: 0:00:50
 Epoch: 286, lr: 8.0e-05, train_loss: 0.1416, train_acc: 0.9508 test_loss: 0.7841, test_acc: 0.8137, best: 0.8149, time: 0:00:50
 Epoch: 287, lr: 8.0e-05, train_loss: 0.1452, train_acc: 0.9468 test_loss: 0.7817, test_acc: 0.8124, best: 0.8149, time: 0:00:51
 Epoch: 288, lr: 8.0e-05, train_loss: 0.1630, train_acc: 0.9438 test_loss: 0.7797, test_acc: 0.8131, best: 0.8149, time: 0:00:50
 Epoch: 289, lr: 8.0e-05, train_loss: 0.1517, train_acc: 0.9500 test_loss: 0.7987, test_acc: 0.8135, best: 0.8149, time: 0:00:49
 Epoch: 290, lr: 8.0e-05, train_loss: 0.1428, train_acc: 0.9522 test_loss: 0.7969, test_acc: 0.8115, best: 0.8149, time: 0:00:50
 Epoch: 291, lr: 8.0e-05, train_loss: 0.1422, train_acc: 0.9510 test_loss: 0.7864, test_acc: 0.8140, best: 0.8149, time: 0:00:50
 Epoch: 292, lr: 8.0e-05, train_loss: 0.1383, train_acc: 0.9510 test_loss: 0.8104, test_acc: 0.8117, best: 0.8149, time: 0:00:50
 Epoch: 293, lr: 8.0e-05, train_loss: 0.1412, train_acc: 0.9510 test_loss: 0.7786, test_acc: 0.8124, best: 0.8149, time: 0:00:50
 Epoch: 294, lr: 8.0e-05, train_loss: 0.1476, train_acc: 0.9490 test_loss: 0.8002, test_acc: 0.8085, best: 0.8149, time: 0:00:50
 Epoch: 295, lr: 8.0e-05, train_loss: 0.1529, train_acc: 0.9466 test_loss: 0.7884, test_acc: 0.8111, best: 0.8149, time: 0:00:49
 Epoch: 296, lr: 8.0e-05, train_loss: 0.1603, train_acc: 0.9420 test_loss: 0.8159, test_acc: 0.8119, best: 0.8149, time: 0:00:50
 Epoch: 297, lr: 8.0e-05, train_loss: 0.1518, train_acc: 0.9466 test_loss: 0.7852, test_acc: 0.8100, best: 0.8149, time: 0:00:50
 Epoch: 298, lr: 8.0e-05, train_loss: 0.1427, train_acc: 0.9514 test_loss: 0.7913, test_acc: 0.8117, best: 0.8149, time: 0:00:50
 Epoch: 299, lr: 8.0e-05, train_loss: 0.1510, train_acc: 0.9508 test_loss: 0.7809, test_acc: 0.8116, best: 0.8149, time: 0:00:50
 Highest accuracy: 0.8149