
 Run on time: 2022-06-23 10:16:30.739815

 Arguments:
	 gpu                  : True
	 log                  : True
	 seed                 : 0
	 momentum             : 0.9
	 amsgrad              : True
	 dataset              : STL10
	 batch_size           : 8
	 architecture         : RESNET18_LIP_4222
	 im_size              : 224
	 relu_threshold       : 4.0
	 learning_rate        : 0.01
	 pretrained_backbone  : 
	 pretrained_ann       : 
	 weight_decay         : 0.0
	 test_only            : False
	 epochs               : 300
	 lr_interval          : [180, 240, 270]
	 lr_reduce            : 5
	 optimizer            : SGD
	 dropout              : 0.2
	 kernel_size          : 3
	 dont_save            : False
	 visualize            : False
	 devices              : 0,1
 DataParallel(
  (module): NetworkByName(
    (net): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): LIP_BASE(
              (logit): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=4, stride=4, padding=0)
        )
      )
      (layer2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): LIP_BASE(
              (logit): Sequential(
                (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer3): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): LIP_BASE(
              (logit): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer4): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): LIP_BASE(
              (logit): Sequential(
                (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=512, out_features=10, bias=True)
    )
  )
)
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    maximize: False
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0
)
 Epoch: 1, lr: 1.0e-02, train_loss: 2.1315, train_acc: 0.2176 test_loss: 1.7589, test_acc: 0.3493, best: 0.3493, time: 0:01:02
 Epoch: 2, lr: 1.0e-02, train_loss: 1.9357, train_acc: 0.2732 test_loss: 1.7927, test_acc: 0.3412, best: 0.3493, time: 0:00:44
 Epoch: 3, lr: 1.0e-02, train_loss: 1.8609, train_acc: 0.2928 test_loss: 1.6563, test_acc: 0.3756, best: 0.3756, time: 0:00:44
 Epoch: 4, lr: 1.0e-02, train_loss: 1.7988, train_acc: 0.3222 test_loss: 1.7305, test_acc: 0.3598, best: 0.3756, time: 0:00:44
 Epoch: 5, lr: 1.0e-02, train_loss: 1.7351, train_acc: 0.3504 test_loss: 1.4797, test_acc: 0.4430, best: 0.4430, time: 0:00:43
 Epoch: 6, lr: 1.0e-02, train_loss: 1.6945, train_acc: 0.3714 test_loss: 1.5176, test_acc: 0.4382, best: 0.4430, time: 0:00:44
 Epoch: 7, lr: 1.0e-02, train_loss: 1.6344, train_acc: 0.3956 test_loss: 1.4205, test_acc: 0.4810, best: 0.4810, time: 0:00:44
 Epoch: 8, lr: 1.0e-02, train_loss: 1.6132, train_acc: 0.4106 test_loss: 1.4034, test_acc: 0.4875, best: 0.4875, time: 0:00:44
 Epoch: 9, lr: 1.0e-02, train_loss: 1.5504, train_acc: 0.4312 test_loss: 1.3400, test_acc: 0.5156, best: 0.5156, time: 0:00:44
 Epoch: 10, lr: 1.0e-02, train_loss: 1.5028, train_acc: 0.4466 test_loss: 1.4422, test_acc: 0.4898, best: 0.5156, time: 0:00:43
 Epoch: 11, lr: 1.0e-02, train_loss: 1.4712, train_acc: 0.4576 test_loss: 1.4323, test_acc: 0.5192, best: 0.5192, time: 0:00:43
 Epoch: 12, lr: 1.0e-02, train_loss: 1.4475, train_acc: 0.4628 test_loss: 1.3736, test_acc: 0.5228, best: 0.5228, time: 0:00:44
 Epoch: 13, lr: 1.0e-02, train_loss: 1.3851, train_acc: 0.4934 test_loss: 1.4830, test_acc: 0.5108, best: 0.5228, time: 0:00:44
 Epoch: 14, lr: 1.0e-02, train_loss: 1.3841, train_acc: 0.4900 test_loss: 1.2562, test_acc: 0.5659, best: 0.5659, time: 0:00:44
 Epoch: 15, lr: 1.0e-02, train_loss: 1.3457, train_acc: 0.5122 test_loss: 1.6075, test_acc: 0.5061, best: 0.5659, time: 0:00:44
 Epoch: 16, lr: 1.0e-02, train_loss: 1.3285, train_acc: 0.5096 test_loss: 1.1849, test_acc: 0.5579, best: 0.5659, time: 0:00:42
 Epoch: 17, lr: 1.0e-02, train_loss: 1.3021, train_acc: 0.5272 test_loss: 1.1152, test_acc: 0.6022, best: 0.6022, time: 0:00:46
 Epoch: 18, lr: 1.0e-02, train_loss: 1.2622, train_acc: 0.5412 test_loss: 1.1324, test_acc: 0.6000, best: 0.6022, time: 0:00:43
 Epoch: 19, lr: 1.0e-02, train_loss: 1.2648, train_acc: 0.5484 test_loss: 1.1500, test_acc: 0.6080, best: 0.6080, time: 0:00:44
 Epoch: 20, lr: 1.0e-02, train_loss: 1.2415, train_acc: 0.5458 test_loss: 1.1632, test_acc: 0.6055, best: 0.6080, time: 0:00:44
 Epoch: 21, lr: 1.0e-02, train_loss: 1.2061, train_acc: 0.5598 test_loss: 1.1110, test_acc: 0.6132, best: 0.6132, time: 0:00:44
 Epoch: 22, lr: 1.0e-02, train_loss: 1.1742, train_acc: 0.5848 test_loss: 1.1958, test_acc: 0.5889, best: 0.6132, time: 0:00:43
 Epoch: 23, lr: 1.0e-02, train_loss: 1.1281, train_acc: 0.5946 test_loss: 1.0561, test_acc: 0.6304, best: 0.6304, time: 0:00:44
 Epoch: 24, lr: 1.0e-02, train_loss: 1.1435, train_acc: 0.5872 test_loss: 1.0841, test_acc: 0.6286, best: 0.6304, time: 0:00:43
 Epoch: 25, lr: 1.0e-02, train_loss: 1.1364, train_acc: 0.5898 test_loss: 1.0139, test_acc: 0.6451, best: 0.6451, time: 0:00:44
 Epoch: 26, lr: 1.0e-02, train_loss: 1.0838, train_acc: 0.6010 test_loss: 1.0288, test_acc: 0.6498, best: 0.6498, time: 0:00:44
 Epoch: 27, lr: 1.0e-02, train_loss: 1.1012, train_acc: 0.5916 test_loss: 0.9230, test_acc: 0.6746, best: 0.6746, time: 0:00:43
 Epoch: 28, lr: 1.0e-02, train_loss: 1.0698, train_acc: 0.6180 test_loss: 1.0398, test_acc: 0.6464, best: 0.6746, time: 0:00:44
 Epoch: 29, lr: 1.0e-02, train_loss: 1.0579, train_acc: 0.6206 test_loss: 0.9750, test_acc: 0.6571, best: 0.6746, time: 0:00:44
 Epoch: 30, lr: 1.0e-02, train_loss: 1.0481, train_acc: 0.6246 test_loss: 0.9445, test_acc: 0.6774, best: 0.6774, time: 0:00:44
 Epoch: 31, lr: 1.0e-02, train_loss: 0.9969, train_acc: 0.6412 test_loss: 0.9885, test_acc: 0.6596, best: 0.6774, time: 0:00:43
 Epoch: 32, lr: 1.0e-02, train_loss: 1.0230, train_acc: 0.6360 test_loss: 0.9355, test_acc: 0.6825, best: 0.6825, time: 0:00:43
 Epoch: 33, lr: 1.0e-02, train_loss: 0.9805, train_acc: 0.6484 test_loss: 0.9988, test_acc: 0.6544, best: 0.6825, time: 0:00:44
 Epoch: 34, lr: 1.0e-02, train_loss: 0.9926, train_acc: 0.6458 test_loss: 1.0188, test_acc: 0.6657, best: 0.6825, time: 0:00:45
 Epoch: 35, lr: 1.0e-02, train_loss: 0.9600, train_acc: 0.6586 test_loss: 0.9889, test_acc: 0.6644, best: 0.6825, time: 0:00:43
 Epoch: 36, lr: 1.0e-02, train_loss: 0.9599, train_acc: 0.6604 test_loss: 0.9696, test_acc: 0.6714, best: 0.6825, time: 0:00:44
 Epoch: 37, lr: 1.0e-02, train_loss: 0.9284, train_acc: 0.6748 test_loss: 1.0025, test_acc: 0.6694, best: 0.6825, time: 0:00:44
 Epoch: 38, lr: 1.0e-02, train_loss: 0.9345, train_acc: 0.6612 test_loss: 0.9075, test_acc: 0.6900, best: 0.6900, time: 0:00:44
 Epoch: 39, lr: 1.0e-02, train_loss: 0.9066, train_acc: 0.6794 test_loss: 0.8572, test_acc: 0.7109, best: 0.7109, time: 0:00:43
 Epoch: 40, lr: 1.0e-02, train_loss: 0.8946, train_acc: 0.6714 test_loss: 0.9377, test_acc: 0.6926, best: 0.7109, time: 0:00:44
 Epoch: 41, lr: 1.0e-02, train_loss: 0.8928, train_acc: 0.6740 test_loss: 0.9544, test_acc: 0.6847, best: 0.7109, time: 0:00:44
 Epoch: 42, lr: 1.0e-02, train_loss: 0.8645, train_acc: 0.6868 test_loss: 0.9691, test_acc: 0.6951, best: 0.7109, time: 0:00:44
 Epoch: 43, lr: 1.0e-02, train_loss: 0.8761, train_acc: 0.6888 test_loss: 0.9974, test_acc: 0.6885, best: 0.7109, time: 0:00:44
 Epoch: 44, lr: 1.0e-02, train_loss: 0.8589, train_acc: 0.6948 test_loss: 1.0694, test_acc: 0.6567, best: 0.7109, time: 0:00:43
 Epoch: 45, lr: 1.0e-02, train_loss: 0.8424, train_acc: 0.6970 test_loss: 0.9255, test_acc: 0.7040, best: 0.7109, time: 0:00:43
 Epoch: 46, lr: 1.0e-02, train_loss: 0.8377, train_acc: 0.6988 test_loss: 0.9648, test_acc: 0.6951, best: 0.7109, time: 0:00:44
 Epoch: 47, lr: 1.0e-02, train_loss: 0.8212, train_acc: 0.7052 test_loss: 0.8473, test_acc: 0.7232, best: 0.7232, time: 0:00:43
 Epoch: 48, lr: 1.0e-02, train_loss: 0.8383, train_acc: 0.7000 test_loss: 0.9846, test_acc: 0.6909, best: 0.7232, time: 0:00:43
 Epoch: 49, lr: 1.0e-02, train_loss: 0.8302, train_acc: 0.7050 test_loss: 0.9222, test_acc: 0.6997, best: 0.7232, time: 0:00:44
 Epoch: 50, lr: 1.0e-02, train_loss: 0.8019, train_acc: 0.7126 test_loss: 0.8810, test_acc: 0.7131, best: 0.7232, time: 0:00:44
 Epoch: 51, lr: 1.0e-02, train_loss: 0.7963, train_acc: 0.7136 test_loss: 0.9580, test_acc: 0.7073, best: 0.7232, time: 0:00:43
 Epoch: 52, lr: 1.0e-02, train_loss: 0.7991, train_acc: 0.7154 test_loss: 0.8705, test_acc: 0.7160, best: 0.7232, time: 0:00:44
 Epoch: 53, lr: 1.0e-02, train_loss: 0.7801, train_acc: 0.7252 test_loss: 0.8709, test_acc: 0.7211, best: 0.7232, time: 0:00:43
 Epoch: 54, lr: 1.0e-02, train_loss: 0.7673, train_acc: 0.7352 test_loss: 0.8532, test_acc: 0.7360, best: 0.7360, time: 0:00:44
 Epoch: 55, lr: 1.0e-02, train_loss: 0.7700, train_acc: 0.7224 test_loss: 0.9395, test_acc: 0.7175, best: 0.7360, time: 0:00:43
 Epoch: 56, lr: 1.0e-02, train_loss: 0.7456, train_acc: 0.7268 test_loss: 0.8078, test_acc: 0.7418, best: 0.7418, time: 0:00:43
 Epoch: 57, lr: 1.0e-02, train_loss: 0.7444, train_acc: 0.7310 test_loss: 0.9108, test_acc: 0.7229, best: 0.7418, time: 0:00:43
 Epoch: 58, lr: 1.0e-02, train_loss: 0.7287, train_acc: 0.7458 test_loss: 0.9155, test_acc: 0.7266, best: 0.7418, time: 0:00:44
 Epoch: 59, lr: 1.0e-02, train_loss: 0.7367, train_acc: 0.7370 test_loss: 1.0102, test_acc: 0.6883, best: 0.7418, time: 0:00:44
 Epoch: 60, lr: 1.0e-02, train_loss: 0.7272, train_acc: 0.7390 test_loss: 0.8729, test_acc: 0.7280, best: 0.7418, time: 0:00:43
 Epoch: 61, lr: 1.0e-02, train_loss: 0.7057, train_acc: 0.7476 test_loss: 0.7817, test_acc: 0.7621, best: 0.7621, time: 0:00:43
 Epoch: 62, lr: 1.0e-02, train_loss: 0.6915, train_acc: 0.7532 test_loss: 0.8628, test_acc: 0.7302, best: 0.7621, time: 0:00:43
 Epoch: 63, lr: 1.0e-02, train_loss: 0.6849, train_acc: 0.7530 test_loss: 1.0008, test_acc: 0.7071, best: 0.7621, time: 0:00:44
 Epoch: 64, lr: 1.0e-02, train_loss: 0.6943, train_acc: 0.7492 test_loss: 0.9116, test_acc: 0.7205, best: 0.7621, time: 0:00:44
 Epoch: 65, lr: 1.0e-02, train_loss: 0.6845, train_acc: 0.7568 test_loss: 0.9597, test_acc: 0.7190, best: 0.7621, time: 0:00:45
 Epoch: 66, lr: 1.0e-02, train_loss: 0.6866, train_acc: 0.7540 test_loss: 0.8712, test_acc: 0.7338, best: 0.7621, time: 0:00:44
 Epoch: 67, lr: 1.0e-02, train_loss: 0.6722, train_acc: 0.7638 test_loss: 1.0048, test_acc: 0.7049, best: 0.7621, time: 0:00:44
 Epoch: 68, lr: 1.0e-02, train_loss: 0.6860, train_acc: 0.7554 test_loss: 0.8738, test_acc: 0.7315, best: 0.7621, time: 0:00:43
 Epoch: 69, lr: 1.0e-02, train_loss: 0.6560, train_acc: 0.7664 test_loss: 0.8734, test_acc: 0.7454, best: 0.7621, time: 0:00:43
 Epoch: 70, lr: 1.0e-02, train_loss: 0.6382, train_acc: 0.7704 test_loss: 0.9461, test_acc: 0.7331, best: 0.7621, time: 0:00:44
 Epoch: 71, lr: 1.0e-02, train_loss: 0.6439, train_acc: 0.7684 test_loss: 0.9272, test_acc: 0.7415, best: 0.7621, time: 0:00:44
 Epoch: 72, lr: 1.0e-02, train_loss: 0.6304, train_acc: 0.7778 test_loss: 0.8472, test_acc: 0.7550, best: 0.7621, time: 0:00:44
 Epoch: 73, lr: 1.0e-02, train_loss: 0.6138, train_acc: 0.7854 test_loss: 0.8445, test_acc: 0.7549, best: 0.7621, time: 0:00:43
 Epoch: 74, lr: 1.0e-02, train_loss: 0.6058, train_acc: 0.7816 test_loss: 0.9566, test_acc: 0.7328, best: 0.7621, time: 0:00:44
 Epoch: 75, lr: 1.0e-02, train_loss: 0.6163, train_acc: 0.7830 test_loss: 0.9444, test_acc: 0.7371, best: 0.7621, time: 0:00:44
 Epoch: 76, lr: 1.0e-02, train_loss: 0.6083, train_acc: 0.7816 test_loss: 0.9478, test_acc: 0.7414, best: 0.7621, time: 0:00:43
 Epoch: 77, lr: 1.0e-02, train_loss: 0.6156, train_acc: 0.7766 test_loss: 0.9933, test_acc: 0.7276, best: 0.7621, time: 0:00:43
 Epoch: 78, lr: 1.0e-02, train_loss: 0.6321, train_acc: 0.7780 test_loss: 1.0040, test_acc: 0.7236, best: 0.7621, time: 0:00:44
 Epoch: 79, lr: 1.0e-02, train_loss: 0.5971, train_acc: 0.7918 test_loss: 0.8680, test_acc: 0.7562, best: 0.7621, time: 0:00:44
 Epoch: 80, lr: 1.0e-02, train_loss: 0.5967, train_acc: 0.7898 test_loss: 0.9821, test_acc: 0.7418, best: 0.7621, time: 0:00:43
 Epoch: 81, lr: 1.0e-02, train_loss: 0.5756, train_acc: 0.7978 test_loss: 0.9478, test_acc: 0.7566, best: 0.7621, time: 0:00:44
 Epoch: 82, lr: 1.0e-02, train_loss: 0.6036, train_acc: 0.7852 test_loss: 0.9131, test_acc: 0.7478, best: 0.7621, time: 0:00:43
 Epoch: 83, lr: 1.0e-02, train_loss: 0.5678, train_acc: 0.7972 test_loss: 0.8516, test_acc: 0.7640, best: 0.7640, time: 0:00:44
 Epoch: 84, lr: 1.0e-02, train_loss: 0.5903, train_acc: 0.7924 test_loss: 0.8519, test_acc: 0.7702, best: 0.7702, time: 0:00:45
 Epoch: 85, lr: 1.0e-02, train_loss: 0.5823, train_acc: 0.7936 test_loss: 1.0048, test_acc: 0.7375, best: 0.7702, time: 0:00:43
 Epoch: 86, lr: 1.0e-02, train_loss: 0.5568, train_acc: 0.7984 test_loss: 1.0458, test_acc: 0.7280, best: 0.7702, time: 0:00:44
 Epoch: 87, lr: 1.0e-02, train_loss: 0.5639, train_acc: 0.8004 test_loss: 0.9862, test_acc: 0.7378, best: 0.7702, time: 0:00:43
 Epoch: 88, lr: 1.0e-02, train_loss: 0.5745, train_acc: 0.7934 test_loss: 0.9745, test_acc: 0.7449, best: 0.7702, time: 0:00:44
 Epoch: 89, lr: 1.0e-02, train_loss: 0.6020, train_acc: 0.7872 test_loss: 0.9616, test_acc: 0.7484, best: 0.7702, time: 0:00:43
 Epoch: 90, lr: 1.0e-02, train_loss: 0.5771, train_acc: 0.7972 test_loss: 0.8970, test_acc: 0.7538, best: 0.7702, time: 0:00:44
 Epoch: 91, lr: 1.0e-02, train_loss: 0.5394, train_acc: 0.8110 test_loss: 0.9207, test_acc: 0.7489, best: 0.7702, time: 0:00:44
 Epoch: 92, lr: 1.0e-02, train_loss: 0.5458, train_acc: 0.8088 test_loss: 0.9059, test_acc: 0.7612, best: 0.7702, time: 0:00:43
 Epoch: 93, lr: 1.0e-02, train_loss: 0.5356, train_acc: 0.8132 test_loss: 0.9666, test_acc: 0.7476, best: 0.7702, time: 0:00:44
 Epoch: 94, lr: 1.0e-02, train_loss: 0.5402, train_acc: 0.8112 test_loss: 0.8767, test_acc: 0.7651, best: 0.7702, time: 0:00:43
 Epoch: 95, lr: 1.0e-02, train_loss: 0.5442, train_acc: 0.8068 test_loss: 0.9620, test_acc: 0.7438, best: 0.7702, time: 0:00:43
 Epoch: 96, lr: 1.0e-02, train_loss: 0.5141, train_acc: 0.8186 test_loss: 0.9258, test_acc: 0.7578, best: 0.7702, time: 0:00:43
 Epoch: 97, lr: 1.0e-02, train_loss: 0.5191, train_acc: 0.8200 test_loss: 1.0916, test_acc: 0.7302, best: 0.7702, time: 0:00:43
 Epoch: 98, lr: 1.0e-02, train_loss: 0.5116, train_acc: 0.8174 test_loss: 1.0083, test_acc: 0.7499, best: 0.7702, time: 0:00:43
 Epoch: 99, lr: 1.0e-02, train_loss: 0.5241, train_acc: 0.8160 test_loss: 0.9009, test_acc: 0.7604, best: 0.7702, time: 0:00:44
 Epoch: 100, lr: 1.0e-02, train_loss: 0.4925, train_acc: 0.8282 test_loss: 0.8865, test_acc: 0.7629, best: 0.7702, time: 0:00:43
 Epoch: 101, lr: 1.0e-02, train_loss: 0.5110, train_acc: 0.8154 test_loss: 0.9335, test_acc: 0.7578, best: 0.7702, time: 0:00:43
 Epoch: 102, lr: 1.0e-02, train_loss: 0.4728, train_acc: 0.8382 test_loss: 0.8757, test_acc: 0.7632, best: 0.7702, time: 0:00:43
 Epoch: 103, lr: 1.0e-02, train_loss: 0.5075, train_acc: 0.8232 test_loss: 1.0534, test_acc: 0.7276, best: 0.7702, time: 0:00:43
 Epoch: 104, lr: 1.0e-02, train_loss: 0.4923, train_acc: 0.8204 test_loss: 0.9508, test_acc: 0.7502, best: 0.7702, time: 0:00:43
 Epoch: 105, lr: 1.0e-02, train_loss: 0.4801, train_acc: 0.8316 test_loss: 0.9510, test_acc: 0.7582, best: 0.7702, time: 0:00:43
 Epoch: 106, lr: 1.0e-02, train_loss: 0.4902, train_acc: 0.8264 test_loss: 0.9673, test_acc: 0.7511, best: 0.7702, time: 0:00:44
 Epoch: 107, lr: 1.0e-02, train_loss: 0.5007, train_acc: 0.8244 test_loss: 0.8850, test_acc: 0.7718, best: 0.7718, time: 0:00:44
 Epoch: 108, lr: 1.0e-02, train_loss: 0.4902, train_acc: 0.8256 test_loss: 1.1305, test_acc: 0.7326, best: 0.7718, time: 0:00:44
 Epoch: 109, lr: 1.0e-02, train_loss: 0.4647, train_acc: 0.8380 test_loss: 0.9793, test_acc: 0.7561, best: 0.7718, time: 0:00:44
 Epoch: 110, lr: 1.0e-02, train_loss: 0.4932, train_acc: 0.8288 test_loss: 0.8993, test_acc: 0.7649, best: 0.7718, time: 0:00:44
 Epoch: 111, lr: 1.0e-02, train_loss: 0.4845, train_acc: 0.8326 test_loss: 0.9046, test_acc: 0.7692, best: 0.7718, time: 0:00:44
 Epoch: 112, lr: 1.0e-02, train_loss: 0.4658, train_acc: 0.8346 test_loss: 0.9691, test_acc: 0.7515, best: 0.7718, time: 0:00:44
 Epoch: 113, lr: 1.0e-02, train_loss: 0.4580, train_acc: 0.8364 test_loss: 0.9172, test_acc: 0.7672, best: 0.7718, time: 0:00:44
 Epoch: 114, lr: 1.0e-02, train_loss: 0.4600, train_acc: 0.8430 test_loss: 1.0970, test_acc: 0.7346, best: 0.7718, time: 0:00:44
 Epoch: 115, lr: 1.0e-02, train_loss: 0.4719, train_acc: 0.8322 test_loss: 0.8809, test_acc: 0.7691, best: 0.7718, time: 0:00:44
 Epoch: 116, lr: 1.0e-02, train_loss: 0.4767, train_acc: 0.8318 test_loss: 0.9119, test_acc: 0.7660, best: 0.7718, time: 0:00:43
 Epoch: 117, lr: 1.0e-02, train_loss: 0.4538, train_acc: 0.8412 test_loss: 0.9541, test_acc: 0.7712, best: 0.7718, time: 0:00:43
 Epoch: 118, lr: 1.0e-02, train_loss: 0.4424, train_acc: 0.8480 test_loss: 0.9473, test_acc: 0.7594, best: 0.7718, time: 0:00:44
 Epoch: 119, lr: 1.0e-02, train_loss: 0.4451, train_acc: 0.8496 test_loss: 0.9172, test_acc: 0.7681, best: 0.7718, time: 0:00:44
 Epoch: 120, lr: 1.0e-02, train_loss: 0.4240, train_acc: 0.8504 test_loss: 0.9501, test_acc: 0.7706, best: 0.7718, time: 0:00:44
 Epoch: 121, lr: 1.0e-02, train_loss: 0.4342, train_acc: 0.8442 test_loss: 1.0077, test_acc: 0.7616, best: 0.7718, time: 0:00:44
 Epoch: 122, lr: 1.0e-02, train_loss: 0.4520, train_acc: 0.8378 test_loss: 0.9776, test_acc: 0.7550, best: 0.7718, time: 0:00:45
 Epoch: 123, lr: 1.0e-02, train_loss: 0.4331, train_acc: 0.8492 test_loss: 0.9722, test_acc: 0.7612, best: 0.7718, time: 0:00:44
 Epoch: 124, lr: 1.0e-02, train_loss: 0.4275, train_acc: 0.8508 test_loss: 1.0688, test_acc: 0.7484, best: 0.7718, time: 0:00:44
 Epoch: 125, lr: 1.0e-02, train_loss: 0.4399, train_acc: 0.8450 test_loss: 0.9408, test_acc: 0.7672, best: 0.7718, time: 0:00:44
 Epoch: 126, lr: 1.0e-02, train_loss: 0.4203, train_acc: 0.8528 test_loss: 0.9566, test_acc: 0.7680, best: 0.7718, time: 0:00:43
 Epoch: 127, lr: 1.0e-02, train_loss: 0.4339, train_acc: 0.8436 test_loss: 0.9436, test_acc: 0.7650, best: 0.7718, time: 0:00:44
 Epoch: 128, lr: 1.0e-02, train_loss: 0.4256, train_acc: 0.8472 test_loss: 0.9695, test_acc: 0.7595, best: 0.7718, time: 0:00:43
 Epoch: 129, lr: 1.0e-02, train_loss: 0.4341, train_acc: 0.8438 test_loss: 0.9208, test_acc: 0.7634, best: 0.7718, time: 0:00:44
 Epoch: 130, lr: 1.0e-02, train_loss: 0.4208, train_acc: 0.8490 test_loss: 0.9483, test_acc: 0.7605, best: 0.7718, time: 0:00:44
 Epoch: 131, lr: 1.0e-02, train_loss: 0.4265, train_acc: 0.8492 test_loss: 0.9032, test_acc: 0.7740, best: 0.7740, time: 0:00:44
 Epoch: 132, lr: 1.0e-02, train_loss: 0.4154, train_acc: 0.8540 test_loss: 0.9762, test_acc: 0.7724, best: 0.7740, time: 0:00:44
 Epoch: 133, lr: 1.0e-02, train_loss: 0.4217, train_acc: 0.8474 test_loss: 1.0579, test_acc: 0.7496, best: 0.7740, time: 0:00:44
 Epoch: 134, lr: 1.0e-02, train_loss: 0.4154, train_acc: 0.8560 test_loss: 0.9814, test_acc: 0.7629, best: 0.7740, time: 0:00:43
 Epoch: 135, lr: 1.0e-02, train_loss: 0.4176, train_acc: 0.8596 test_loss: 0.9795, test_acc: 0.7700, best: 0.7740, time: 0:00:44
 Epoch: 136, lr: 1.0e-02, train_loss: 0.4039, train_acc: 0.8616 test_loss: 0.9828, test_acc: 0.7718, best: 0.7740, time: 0:00:43
 Epoch: 137, lr: 1.0e-02, train_loss: 0.4278, train_acc: 0.8528 test_loss: 0.9583, test_acc: 0.7709, best: 0.7740, time: 0:00:43
 Epoch: 138, lr: 1.0e-02, train_loss: 0.4000, train_acc: 0.8626 test_loss: 0.9781, test_acc: 0.7776, best: 0.7776, time: 0:00:45
 Epoch: 139, lr: 1.0e-02, train_loss: 0.3923, train_acc: 0.8650 test_loss: 0.9355, test_acc: 0.7648, best: 0.7776, time: 0:00:43
 Epoch: 140, lr: 1.0e-02, train_loss: 0.3929, train_acc: 0.8646 test_loss: 0.8713, test_acc: 0.7826, best: 0.7826, time: 0:00:44
 Epoch: 141, lr: 1.0e-02, train_loss: 0.4077, train_acc: 0.8608 test_loss: 0.9163, test_acc: 0.7720, best: 0.7826, time: 0:00:45
 Epoch: 142, lr: 1.0e-02, train_loss: 0.3878, train_acc: 0.8666 test_loss: 1.0044, test_acc: 0.7676, best: 0.7826, time: 0:00:44
 Epoch: 143, lr: 1.0e-02, train_loss: 0.3938, train_acc: 0.8614 test_loss: 1.0206, test_acc: 0.7545, best: 0.7826, time: 0:00:44
 Epoch: 144, lr: 1.0e-02, train_loss: 0.3781, train_acc: 0.8682 test_loss: 0.9615, test_acc: 0.7685, best: 0.7826, time: 0:00:43
 Epoch: 145, lr: 1.0e-02, train_loss: 0.3872, train_acc: 0.8612 test_loss: 0.9708, test_acc: 0.7716, best: 0.7826, time: 0:00:44
 Epoch: 146, lr: 1.0e-02, train_loss: 0.4074, train_acc: 0.8592 test_loss: 0.9069, test_acc: 0.7698, best: 0.7826, time: 0:00:44
 Epoch: 147, lr: 1.0e-02, train_loss: 0.4015, train_acc: 0.8612 test_loss: 0.9911, test_acc: 0.7705, best: 0.7826, time: 0:00:44
 Epoch: 148, lr: 1.0e-02, train_loss: 0.3720, train_acc: 0.8732 test_loss: 0.9627, test_acc: 0.7745, best: 0.7826, time: 0:00:44
 Epoch: 149, lr: 1.0e-02, train_loss: 0.3796, train_acc: 0.8678 test_loss: 0.8943, test_acc: 0.7816, best: 0.7826, time: 0:00:44
 Epoch: 150, lr: 1.0e-02, train_loss: 0.3718, train_acc: 0.8680 test_loss: 1.0192, test_acc: 0.7710, best: 0.7826, time: 0:00:44
 Epoch: 151, lr: 1.0e-02, train_loss: 0.3648, train_acc: 0.8710 test_loss: 1.0542, test_acc: 0.7568, best: 0.7826, time: 0:00:44
 Epoch: 152, lr: 1.0e-02, train_loss: 0.3687, train_acc: 0.8728 test_loss: 0.9568, test_acc: 0.7804, best: 0.7826, time: 0:00:43
 Epoch: 153, lr: 1.0e-02, train_loss: 0.3623, train_acc: 0.8716 test_loss: 0.9923, test_acc: 0.7764, best: 0.7826, time: 0:00:43
 Epoch: 154, lr: 1.0e-02, train_loss: 0.3892, train_acc: 0.8604 test_loss: 0.9302, test_acc: 0.7824, best: 0.7826, time: 0:00:44
 Epoch: 155, lr: 1.0e-02, train_loss: 0.3824, train_acc: 0.8616 test_loss: 1.0014, test_acc: 0.7656, best: 0.7826, time: 0:00:44
 Epoch: 156, lr: 1.0e-02, train_loss: 0.3951, train_acc: 0.8644 test_loss: 0.8819, test_acc: 0.7854, best: 0.7854, time: 0:00:43
 Epoch: 157, lr: 1.0e-02, train_loss: 0.4000, train_acc: 0.8646 test_loss: 1.0590, test_acc: 0.7720, best: 0.7854, time: 0:00:43
 Epoch: 158, lr: 1.0e-02, train_loss: 0.3742, train_acc: 0.8646 test_loss: 0.9541, test_acc: 0.7751, best: 0.7854, time: 0:00:44
 Epoch: 159, lr: 1.0e-02, train_loss: 0.3702, train_acc: 0.8698 test_loss: 0.9308, test_acc: 0.7903, best: 0.7903, time: 0:00:45
 Epoch: 160, lr: 1.0e-02, train_loss: 0.3739, train_acc: 0.8720 test_loss: 0.8835, test_acc: 0.7897, best: 0.7903, time: 0:00:44
 Epoch: 161, lr: 1.0e-02, train_loss: 0.3797, train_acc: 0.8678 test_loss: 0.9646, test_acc: 0.7771, best: 0.7903, time: 0:00:44
 Epoch: 162, lr: 1.0e-02, train_loss: 0.3553, train_acc: 0.8766 test_loss: 0.9878, test_acc: 0.7639, best: 0.7903, time: 0:00:43
 Epoch: 163, lr: 1.0e-02, train_loss: 0.3424, train_acc: 0.8830 test_loss: 0.9186, test_acc: 0.7806, best: 0.7903, time: 0:00:45
 Epoch: 164, lr: 1.0e-02, train_loss: 0.3662, train_acc: 0.8764 test_loss: 0.9257, test_acc: 0.7834, best: 0.7903, time: 0:00:45
 Epoch: 165, lr: 1.0e-02, train_loss: 0.3505, train_acc: 0.8750 test_loss: 0.9402, test_acc: 0.7836, best: 0.7903, time: 0:00:43
 Epoch: 166, lr: 1.0e-02, train_loss: 0.3467, train_acc: 0.8798 test_loss: 1.0367, test_acc: 0.7649, best: 0.7903, time: 0:00:43
 Epoch: 167, lr: 1.0e-02, train_loss: 0.3726, train_acc: 0.8722 test_loss: 0.9421, test_acc: 0.7792, best: 0.7903, time: 0:00:43
 Epoch: 168, lr: 1.0e-02, train_loss: 0.3424, train_acc: 0.8820 test_loss: 0.9292, test_acc: 0.7847, best: 0.7903, time: 0:00:43
 Epoch: 169, lr: 1.0e-02, train_loss: 0.3569, train_acc: 0.8742 test_loss: 0.9291, test_acc: 0.7876, best: 0.7903, time: 0:00:44
 Epoch: 170, lr: 1.0e-02, train_loss: 0.3533, train_acc: 0.8788 test_loss: 0.9416, test_acc: 0.7782, best: 0.7903, time: 0:00:44
 Epoch: 171, lr: 1.0e-02, train_loss: 0.3460, train_acc: 0.8756 test_loss: 0.9462, test_acc: 0.7784, best: 0.7903, time: 0:00:43
 Epoch: 172, lr: 1.0e-02, train_loss: 0.3507, train_acc: 0.8814 test_loss: 0.9070, test_acc: 0.7825, best: 0.7903, time: 0:00:43
 Epoch: 173, lr: 1.0e-02, train_loss: 0.3442, train_acc: 0.8884 test_loss: 0.9463, test_acc: 0.7754, best: 0.7903, time: 0:00:43
 Epoch: 174, lr: 1.0e-02, train_loss: 0.3343, train_acc: 0.8830 test_loss: 0.9411, test_acc: 0.7766, best: 0.7903, time: 0:00:43
 Epoch: 175, lr: 1.0e-02, train_loss: 0.3593, train_acc: 0.8786 test_loss: 0.9522, test_acc: 0.7759, best: 0.7903, time: 0:00:44
 Epoch: 176, lr: 1.0e-02, train_loss: 0.3441, train_acc: 0.8792 test_loss: 1.0230, test_acc: 0.7631, best: 0.7903, time: 0:00:43
 Epoch: 177, lr: 1.0e-02, train_loss: 0.3491, train_acc: 0.8818 test_loss: 1.0040, test_acc: 0.7741, best: 0.7903, time: 0:00:43
 Epoch: 178, lr: 1.0e-02, train_loss: 0.3512, train_acc: 0.8736 test_loss: 0.9903, test_acc: 0.7751, best: 0.7903, time: 0:00:43
 Epoch: 179, lr: 1.0e-02, train_loss: 0.3597, train_acc: 0.8702 test_loss: 1.0301, test_acc: 0.7805, best: 0.7903, time: 0:00:43
 Epoch: 180, lr: 2.0e-03, train_loss: 0.2997, train_acc: 0.8938 test_loss: 0.9529, test_acc: 0.7937, best: 0.7937, time: 0:00:44
 Epoch: 181, lr: 2.0e-03, train_loss: 0.2839, train_acc: 0.9026 test_loss: 0.9395, test_acc: 0.7923, best: 0.7937, time: 0:00:43
 Epoch: 182, lr: 2.0e-03, train_loss: 0.3092, train_acc: 0.8932 test_loss: 0.9003, test_acc: 0.7955, best: 0.7955, time: 0:00:44
 Epoch: 183, lr: 2.0e-03, train_loss: 0.2701, train_acc: 0.9094 test_loss: 0.9448, test_acc: 0.7906, best: 0.7955, time: 0:00:44
 Epoch: 184, lr: 2.0e-03, train_loss: 0.2781, train_acc: 0.9066 test_loss: 0.9058, test_acc: 0.7930, best: 0.7955, time: 0:00:44
 Epoch: 185, lr: 2.0e-03, train_loss: 0.2656, train_acc: 0.9064 test_loss: 0.9151, test_acc: 0.7944, best: 0.7955, time: 0:00:44
 Epoch: 186, lr: 2.0e-03, train_loss: 0.2543, train_acc: 0.9132 test_loss: 0.8854, test_acc: 0.8000, best: 0.8000, time: 0:00:45
 Epoch: 187, lr: 2.0e-03, train_loss: 0.2651, train_acc: 0.9060 test_loss: 0.9385, test_acc: 0.7967, best: 0.8000, time: 0:00:44
 Epoch: 188, lr: 2.0e-03, train_loss: 0.2624, train_acc: 0.9090 test_loss: 0.9310, test_acc: 0.7916, best: 0.8000, time: 0:00:43
 Epoch: 189, lr: 2.0e-03, train_loss: 0.2350, train_acc: 0.9186 test_loss: 0.9178, test_acc: 0.7911, best: 0.8000, time: 0:00:44
 Epoch: 190, lr: 2.0e-03, train_loss: 0.2558, train_acc: 0.9090 test_loss: 0.9272, test_acc: 0.7961, best: 0.8000, time: 0:00:44
 Epoch: 191, lr: 2.0e-03, train_loss: 0.2423, train_acc: 0.9172 test_loss: 0.9113, test_acc: 0.7963, best: 0.8000, time: 0:00:44
 Epoch: 192, lr: 2.0e-03, train_loss: 0.2650, train_acc: 0.9078 test_loss: 0.9331, test_acc: 0.7943, best: 0.8000, time: 0:00:44
 Epoch: 193, lr: 2.0e-03, train_loss: 0.2312, train_acc: 0.9204 test_loss: 0.9195, test_acc: 0.8001, best: 0.8001, time: 0:00:44
 Epoch: 194, lr: 2.0e-03, train_loss: 0.2232, train_acc: 0.9250 test_loss: 0.9368, test_acc: 0.7946, best: 0.8001, time: 0:00:44
 Epoch: 195, lr: 2.0e-03, train_loss: 0.2452, train_acc: 0.9152 test_loss: 0.9305, test_acc: 0.7967, best: 0.8001, time: 0:00:43
 Epoch: 196, lr: 2.0e-03, train_loss: 0.2523, train_acc: 0.9116 test_loss: 0.9438, test_acc: 0.7993, best: 0.8001, time: 0:00:43
 Epoch: 197, lr: 2.0e-03, train_loss: 0.2339, train_acc: 0.9206 test_loss: 0.9087, test_acc: 0.7981, best: 0.8001, time: 0:00:42
 Epoch: 198, lr: 2.0e-03, train_loss: 0.2238, train_acc: 0.9262 test_loss: 0.9455, test_acc: 0.7951, best: 0.8001, time: 0:00:45
 Epoch: 199, lr: 2.0e-03, train_loss: 0.2399, train_acc: 0.9198 test_loss: 0.9033, test_acc: 0.7941, best: 0.8001, time: 0:00:43
 Epoch: 200, lr: 2.0e-03, train_loss: 0.2478, train_acc: 0.9198 test_loss: 0.9142, test_acc: 0.7987, best: 0.8001, time: 0:00:43
 Epoch: 201, lr: 2.0e-03, train_loss: 0.2279, train_acc: 0.9204 test_loss: 0.9229, test_acc: 0.7953, best: 0.8001, time: 0:00:44
 Epoch: 202, lr: 2.0e-03, train_loss: 0.2297, train_acc: 0.9204 test_loss: 0.8996, test_acc: 0.8005, best: 0.8005, time: 0:00:45
 Epoch: 203, lr: 2.0e-03, train_loss: 0.2302, train_acc: 0.9146 test_loss: 0.8987, test_acc: 0.7986, best: 0.8005, time: 0:00:44
 Epoch: 204, lr: 2.0e-03, train_loss: 0.2347, train_acc: 0.9162 test_loss: 0.9344, test_acc: 0.7934, best: 0.8005, time: 0:00:44
 Epoch: 205, lr: 2.0e-03, train_loss: 0.2388, train_acc: 0.9138 test_loss: 0.9051, test_acc: 0.7947, best: 0.8005, time: 0:00:44
 Epoch: 206, lr: 2.0e-03, train_loss: 0.2156, train_acc: 0.9210 test_loss: 0.9576, test_acc: 0.7940, best: 0.8005, time: 0:00:43
 Epoch: 207, lr: 2.0e-03, train_loss: 0.2340, train_acc: 0.9152 test_loss: 0.9242, test_acc: 0.7917, best: 0.8005, time: 0:00:44
 Epoch: 208, lr: 2.0e-03, train_loss: 0.2233, train_acc: 0.9258 test_loss: 0.9261, test_acc: 0.7971, best: 0.8005, time: 0:00:43
 Epoch: 209, lr: 2.0e-03, train_loss: 0.2332, train_acc: 0.9184 test_loss: 0.9441, test_acc: 0.7926, best: 0.8005, time: 0:00:44
 Epoch: 210, lr: 2.0e-03, train_loss: 0.2398, train_acc: 0.9170 test_loss: 0.9219, test_acc: 0.7974, best: 0.8005, time: 0:00:43
 Epoch: 211, lr: 2.0e-03, train_loss: 0.2126, train_acc: 0.9272 test_loss: 0.9445, test_acc: 0.8014, best: 0.8014, time: 0:00:44
 Epoch: 212, lr: 2.0e-03, train_loss: 0.2288, train_acc: 0.9230 test_loss: 0.9690, test_acc: 0.7954, best: 0.8014, time: 0:00:43
 Epoch: 213, lr: 2.0e-03, train_loss: 0.2218, train_acc: 0.9218 test_loss: 0.9500, test_acc: 0.8000, best: 0.8014, time: 0:00:43
 Epoch: 214, lr: 2.0e-03, train_loss: 0.2367, train_acc: 0.9216 test_loss: 0.9641, test_acc: 0.7964, best: 0.8014, time: 0:00:43
 Epoch: 215, lr: 2.0e-03, train_loss: 0.2320, train_acc: 0.9168 test_loss: 0.9213, test_acc: 0.8037, best: 0.8037, time: 0:00:44
 Epoch: 216, lr: 2.0e-03, train_loss: 0.2220, train_acc: 0.9260 test_loss: 0.9767, test_acc: 0.7923, best: 0.8037, time: 0:00:43
 Epoch: 217, lr: 2.0e-03, train_loss: 0.2317, train_acc: 0.9214 test_loss: 0.9576, test_acc: 0.7975, best: 0.8037, time: 0:00:44
 Epoch: 218, lr: 2.0e-03, train_loss: 0.2220, train_acc: 0.9236 test_loss: 0.9710, test_acc: 0.8025, best: 0.8037, time: 0:00:45
 Epoch: 219, lr: 2.0e-03, train_loss: 0.2167, train_acc: 0.9226 test_loss: 0.9713, test_acc: 0.7977, best: 0.8037, time: 0:00:43
 Epoch: 220, lr: 2.0e-03, train_loss: 0.2336, train_acc: 0.9174 test_loss: 0.9725, test_acc: 0.7989, best: 0.8037, time: 0:00:43
 Epoch: 221, lr: 2.0e-03, train_loss: 0.2281, train_acc: 0.9178 test_loss: 0.9282, test_acc: 0.8029, best: 0.8037, time: 0:00:44
 Epoch: 222, lr: 2.0e-03, train_loss: 0.2248, train_acc: 0.9202 test_loss: 0.9481, test_acc: 0.8045, best: 0.8045, time: 0:00:45
 Epoch: 223, lr: 2.0e-03, train_loss: 0.2270, train_acc: 0.9198 test_loss: 0.9376, test_acc: 0.7959, best: 0.8045, time: 0:00:45
 Epoch: 224, lr: 2.0e-03, train_loss: 0.2110, train_acc: 0.9324 test_loss: 0.9725, test_acc: 0.8009, best: 0.8045, time: 0:00:43
 Epoch: 225, lr: 2.0e-03, train_loss: 0.2196, train_acc: 0.9224 test_loss: 0.9542, test_acc: 0.7967, best: 0.8045, time: 0:00:44
 Epoch: 226, lr: 2.0e-03, train_loss: 0.2027, train_acc: 0.9276 test_loss: 0.9355, test_acc: 0.8021, best: 0.8045, time: 0:00:44
 Epoch: 227, lr: 2.0e-03, train_loss: 0.2115, train_acc: 0.9268 test_loss: 0.9673, test_acc: 0.7946, best: 0.8045, time: 0:00:44
 Epoch: 228, lr: 2.0e-03, train_loss: 0.2264, train_acc: 0.9238 test_loss: 0.9451, test_acc: 0.8007, best: 0.8045, time: 0:00:43
 Epoch: 229, lr: 2.0e-03, train_loss: 0.2095, train_acc: 0.9282 test_loss: 0.9609, test_acc: 0.7975, best: 0.8045, time: 0:00:43
 Epoch: 230, lr: 2.0e-03, train_loss: 0.2188, train_acc: 0.9204 test_loss: 1.0281, test_acc: 0.7884, best: 0.8045, time: 0:00:44
 Epoch: 231, lr: 2.0e-03, train_loss: 0.2117, train_acc: 0.9248 test_loss: 0.9568, test_acc: 0.7935, best: 0.8045, time: 0:00:44
 Epoch: 232, lr: 2.0e-03, train_loss: 0.2268, train_acc: 0.9208 test_loss: 0.9709, test_acc: 0.7965, best: 0.8045, time: 0:00:44
 Epoch: 233, lr: 2.0e-03, train_loss: 0.2160, train_acc: 0.9296 test_loss: 0.9795, test_acc: 0.7923, best: 0.8045, time: 0:00:43
 Epoch: 234, lr: 2.0e-03, train_loss: 0.2133, train_acc: 0.9262 test_loss: 0.9361, test_acc: 0.7950, best: 0.8045, time: 0:00:43
 Epoch: 235, lr: 2.0e-03, train_loss: 0.2122, train_acc: 0.9282 test_loss: 0.9873, test_acc: 0.7916, best: 0.8045, time: 0:00:43
 Epoch: 236, lr: 2.0e-03, train_loss: 0.2160, train_acc: 0.9246 test_loss: 0.9548, test_acc: 0.7960, best: 0.8045, time: 0:00:43
 Epoch: 237, lr: 2.0e-03, train_loss: 0.2303, train_acc: 0.9190 test_loss: 0.9656, test_acc: 0.7914, best: 0.8045, time: 0:00:43
 Epoch: 238, lr: 2.0e-03, train_loss: 0.2075, train_acc: 0.9294 test_loss: 0.9611, test_acc: 0.7934, best: 0.8045, time: 0:00:43
 Epoch: 239, lr: 2.0e-03, train_loss: 0.2065, train_acc: 0.9298 test_loss: 0.9665, test_acc: 0.7933, best: 0.8045, time: 0:00:43
 Epoch: 240, lr: 4.0e-04, train_loss: 0.2076, train_acc: 0.9300 test_loss: 0.9633, test_acc: 0.7947, best: 0.8045, time: 0:00:43
 Epoch: 241, lr: 4.0e-04, train_loss: 0.2054, train_acc: 0.9270 test_loss: 0.9480, test_acc: 0.7965, best: 0.8045, time: 0:00:44
 Epoch: 242, lr: 4.0e-04, train_loss: 0.2036, train_acc: 0.9284 test_loss: 0.9671, test_acc: 0.7990, best: 0.8045, time: 0:00:43
 Epoch: 243, lr: 4.0e-04, train_loss: 0.1938, train_acc: 0.9310 test_loss: 0.9901, test_acc: 0.7973, best: 0.8045, time: 0:00:44
 Epoch: 244, lr: 4.0e-04, train_loss: 0.2041, train_acc: 0.9326 test_loss: 0.9611, test_acc: 0.7991, best: 0.8045, time: 0:00:45
 Epoch: 245, lr: 4.0e-04, train_loss: 0.2036, train_acc: 0.9266 test_loss: 0.9669, test_acc: 0.7994, best: 0.8045, time: 0:00:44
 Epoch: 246, lr: 4.0e-04, train_loss: 0.2086, train_acc: 0.9266 test_loss: 0.9472, test_acc: 0.7985, best: 0.8045, time: 0:00:43
 Epoch: 247, lr: 4.0e-04, train_loss: 0.1973, train_acc: 0.9294 test_loss: 0.9817, test_acc: 0.7955, best: 0.8045, time: 0:00:43
 Epoch: 248, lr: 4.0e-04, train_loss: 0.2126, train_acc: 0.9296 test_loss: 0.9601, test_acc: 0.7971, best: 0.8045, time: 0:00:43
 Epoch: 249, lr: 4.0e-04, train_loss: 0.2086, train_acc: 0.9240 test_loss: 0.9580, test_acc: 0.8004, best: 0.8045, time: 0:00:43
 Epoch: 250, lr: 4.0e-04, train_loss: 0.2227, train_acc: 0.9224 test_loss: 0.9509, test_acc: 0.7974, best: 0.8045, time: 0:00:44
 Epoch: 251, lr: 4.0e-04, train_loss: 0.2075, train_acc: 0.9288 test_loss: 0.9510, test_acc: 0.7994, best: 0.8045, time: 0:00:44
 Epoch: 252, lr: 4.0e-04, train_loss: 0.1999, train_acc: 0.9302 test_loss: 0.9682, test_acc: 0.7964, best: 0.8045, time: 0:00:43
 Epoch: 253, lr: 4.0e-04, train_loss: 0.2071, train_acc: 0.9264 test_loss: 0.9494, test_acc: 0.8023, best: 0.8045, time: 0:00:43
 Epoch: 254, lr: 4.0e-04, train_loss: 0.2042, train_acc: 0.9328 test_loss: 0.9451, test_acc: 0.7980, best: 0.8045, time: 0:00:43
 Epoch: 255, lr: 4.0e-04, train_loss: 0.2020, train_acc: 0.9258 test_loss: 0.9692, test_acc: 0.8004, best: 0.8045, time: 0:00:44
 Epoch: 256, lr: 4.0e-04, train_loss: 0.2010, train_acc: 0.9292 test_loss: 0.9557, test_acc: 0.8000, best: 0.8045, time: 0:00:43
 Epoch: 257, lr: 4.0e-04, train_loss: 0.1962, train_acc: 0.9292 test_loss: 0.9796, test_acc: 0.8031, best: 0.8045, time: 0:00:44
 Epoch: 258, lr: 4.0e-04, train_loss: 0.1962, train_acc: 0.9308 test_loss: 0.9556, test_acc: 0.8016, best: 0.8045, time: 0:00:43
 Epoch: 259, lr: 4.0e-04, train_loss: 0.1991, train_acc: 0.9300 test_loss: 0.9360, test_acc: 0.8004, best: 0.8045, time: 0:00:43
 Epoch: 260, lr: 4.0e-04, train_loss: 0.1935, train_acc: 0.9330 test_loss: 0.9781, test_acc: 0.7991, best: 0.8045, time: 0:00:44
 Epoch: 261, lr: 4.0e-04, train_loss: 0.2165, train_acc: 0.9240 test_loss: 0.9516, test_acc: 0.7975, best: 0.8045, time: 0:00:43
 Epoch: 262, lr: 4.0e-04, train_loss: 0.2041, train_acc: 0.9300 test_loss: 0.9563, test_acc: 0.7974, best: 0.8045, time: 0:00:43
 Epoch: 263, lr: 4.0e-04, train_loss: 0.2077, train_acc: 0.9290 test_loss: 0.9599, test_acc: 0.7991, best: 0.8045, time: 0:00:44
 Epoch: 264, lr: 4.0e-04, train_loss: 0.2049, train_acc: 0.9278 test_loss: 0.9520, test_acc: 0.7967, best: 0.8045, time: 0:00:44
 Epoch: 265, lr: 4.0e-04, train_loss: 0.2033, train_acc: 0.9290 test_loss: 0.9780, test_acc: 0.7987, best: 0.8045, time: 0:00:44
 Epoch: 266, lr: 4.0e-04, train_loss: 0.2046, train_acc: 0.9302 test_loss: 0.9554, test_acc: 0.8000, best: 0.8045, time: 0:00:44
 Epoch: 267, lr: 4.0e-04, train_loss: 0.1932, train_acc: 0.9330 test_loss: 0.9529, test_acc: 0.7989, best: 0.8045, time: 0:00:44
 Epoch: 268, lr: 4.0e-04, train_loss: 0.1951, train_acc: 0.9302 test_loss: 0.9084, test_acc: 0.8047, best: 0.8047, time: 0:00:44
 Epoch: 269, lr: 4.0e-04, train_loss: 0.1925, train_acc: 0.9326 test_loss: 0.9595, test_acc: 0.8013, best: 0.8047, time: 0:00:43
 Epoch: 270, lr: 8.0e-05, train_loss: 0.1990, train_acc: 0.9304 test_loss: 0.9636, test_acc: 0.8005, best: 0.8047, time: 0:00:44
 Epoch: 271, lr: 8.0e-05, train_loss: 0.2085, train_acc: 0.9272 test_loss: 0.9544, test_acc: 0.7996, best: 0.8047, time: 0:00:44
 Epoch: 272, lr: 8.0e-05, train_loss: 0.2032, train_acc: 0.9276 test_loss: 0.9871, test_acc: 0.7967, best: 0.8047, time: 0:00:44
 Epoch: 273, lr: 8.0e-05, train_loss: 0.2055, train_acc: 0.9276 test_loss: 0.9944, test_acc: 0.7966, best: 0.8047, time: 0:00:43
 Epoch: 274, lr: 8.0e-05, train_loss: 0.1927, train_acc: 0.9358 test_loss: 0.9866, test_acc: 0.8001, best: 0.8047, time: 0:00:44
 Epoch: 275, lr: 8.0e-05, train_loss: 0.1962, train_acc: 0.9322 test_loss: 0.9467, test_acc: 0.8025, best: 0.8047, time: 0:00:43
 Epoch: 276, lr: 8.0e-05, train_loss: 0.2021, train_acc: 0.9280 test_loss: 0.9495, test_acc: 0.7995, best: 0.8047, time: 0:00:44
 Epoch: 277, lr: 8.0e-05, train_loss: 0.1964, train_acc: 0.9302 test_loss: 0.9581, test_acc: 0.8011, best: 0.8047, time: 0:00:44
 Epoch: 278, lr: 8.0e-05, train_loss: 0.1867, train_acc: 0.9396 test_loss: 0.9680, test_acc: 0.8015, best: 0.8047, time: 0:00:44
 Epoch: 279, lr: 8.0e-05, train_loss: 0.1960, train_acc: 0.9336 test_loss: 0.9387, test_acc: 0.8025, best: 0.8047, time: 0:00:43
 Epoch: 280, lr: 8.0e-05, train_loss: 0.1921, train_acc: 0.9346 test_loss: 0.9832, test_acc: 0.8037, best: 0.8047, time: 0:00:44
 Epoch: 281, lr: 8.0e-05, train_loss: 0.1943, train_acc: 0.9304 test_loss: 0.9490, test_acc: 0.8040, best: 0.8047, time: 0:00:44
 Epoch: 282, lr: 8.0e-05, train_loss: 0.2160, train_acc: 0.9252 test_loss: 0.9570, test_acc: 0.8060, best: 0.8060, time: 0:00:43
 Epoch: 283, lr: 8.0e-05, train_loss: 0.1922, train_acc: 0.9328 test_loss: 0.9939, test_acc: 0.7974, best: 0.8060, time: 0:00:44
 Epoch: 284, lr: 8.0e-05, train_loss: 0.2035, train_acc: 0.9292 test_loss: 0.9446, test_acc: 0.8040, best: 0.8060, time: 0:00:43
 Epoch: 285, lr: 8.0e-05, train_loss: 0.2052, train_acc: 0.9256 test_loss: 0.9662, test_acc: 0.7991, best: 0.8060, time: 0:00:44
 Epoch: 286, lr: 8.0e-05, train_loss: 0.1944, train_acc: 0.9308 test_loss: 0.9421, test_acc: 0.7999, best: 0.8060, time: 0:00:44
 Epoch: 287, lr: 8.0e-05, train_loss: 0.1902, train_acc: 0.9350 test_loss: 0.9637, test_acc: 0.7999, best: 0.8060, time: 0:00:43
 Epoch: 288, lr: 8.0e-05, train_loss: 0.1889, train_acc: 0.9330 test_loss: 0.9614, test_acc: 0.7976, best: 0.8060, time: 0:00:43
 Epoch: 289, lr: 8.0e-05, train_loss: 0.1871, train_acc: 0.9336 test_loss: 0.9550, test_acc: 0.8024, best: 0.8060, time: 0:00:43
 Epoch: 290, lr: 8.0e-05, train_loss: 0.1935, train_acc: 0.9344 test_loss: 0.9645, test_acc: 0.7991, best: 0.8060, time: 0:00:45
 Epoch: 291, lr: 8.0e-05, train_loss: 0.2124, train_acc: 0.9230 test_loss: 0.9810, test_acc: 0.7973, best: 0.8060, time: 0:00:44
 Epoch: 292, lr: 8.0e-05, train_loss: 0.1983, train_acc: 0.9342 test_loss: 0.9837, test_acc: 0.7975, best: 0.8060, time: 0:00:43
 Epoch: 293, lr: 8.0e-05, train_loss: 0.2095, train_acc: 0.9266 test_loss: 0.9605, test_acc: 0.8024, best: 0.8060, time: 0:00:44
 Epoch: 294, lr: 8.0e-05, train_loss: 0.1945, train_acc: 0.9318 test_loss: 0.9842, test_acc: 0.7984, best: 0.8060, time: 0:00:44
 Epoch: 295, lr: 8.0e-05, train_loss: 0.2147, train_acc: 0.9250 test_loss: 0.9707, test_acc: 0.8004, best: 0.8060, time: 0:00:45
 Epoch: 296, lr: 8.0e-05, train_loss: 0.1944, train_acc: 0.9320 test_loss: 0.9476, test_acc: 0.8015, best: 0.8060, time: 0:00:44
 Epoch: 297, lr: 8.0e-05, train_loss: 0.1793, train_acc: 0.9382 test_loss: 0.9544, test_acc: 0.7999, best: 0.8060, time: 0:00:43
 Epoch: 298, lr: 8.0e-05, train_loss: 0.1854, train_acc: 0.9332 test_loss: 0.9421, test_acc: 0.8010, best: 0.8060, time: 0:00:44
 Epoch: 299, lr: 8.0e-05, train_loss: 0.1877, train_acc: 0.9360 test_loss: 0.9457, test_acc: 0.8005, best: 0.8060, time: 0:00:44
 Highest accuracy: 0.8060