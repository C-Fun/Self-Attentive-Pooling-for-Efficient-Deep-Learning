
 Run on time: 2022-06-24 17:56:06.925843

 Arguments:
	 gpu                  : True
	 log                  : True
	 seed                 : 0
	 momentum             : 0.9
	 amsgrad              : True
	 dataset              : STL10
	 batch_size           : 8
	 architecture         : RESNET18_NLP
	 im_size              : 224
	 relu_threshold       : 4.0
	 learning_rate        : 0.01
	 pretrained_backbone  : 
	 pretrained_ann       : 
	 weight_decay         : 0.0
	 test_only            : False
	 epochs               : 300
	 lr_interval          : [180, 240, 270]
	 lr_reduce            : 5
	 optimizer            : SGD
	 dropout              : 0.2
	 kernel_size          : 3
	 dont_save            : False
	 visualize            : False
	 devices              : 0,1
 DataParallel(
  (module): NetworkByName(
    (net): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
              (pos_embed): PositionEmbeddingLearned(
                (row_embed): Embedding(256, 64)
                (col_embed): Embedding(256, 64)
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer3): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
              (pos_embed): PositionEmbeddingLearned(
                (row_embed): Embedding(256, 128)
                (col_embed): Embedding(256, 128)
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer4): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
              (pos_embed): PositionEmbeddingLearned(
                (row_embed): Embedding(256, 256)
                (col_embed): Embedding(256, 256)
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=512, out_features=10, bias=True)
    )
  )
)
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0
)
 Epoch: 1, lr: 1.0e-02, train_loss: 2.2745, train_acc: 0.1810 test_loss: 1.8450, test_acc: 0.2920, best: 0.2920, time: 0:03:09
 Epoch: 2, lr: 1.0e-02, train_loss: 1.9875, train_acc: 0.2296 test_loss: 1.7289, test_acc: 0.2935, best: 0.2935, time: 0:03:06
 Epoch: 3, lr: 1.0e-02, train_loss: 1.9124, train_acc: 0.2566 test_loss: 2.6582, test_acc: 0.3040, best: 0.3040, time: 0:02:59
 Epoch: 4, lr: 1.0e-02, train_loss: 1.8624, train_acc: 0.2782 test_loss: 1.7380, test_acc: 0.3414, best: 0.3414, time: 0:03:01
 Epoch: 5, lr: 1.0e-02, train_loss: 1.7596, train_acc: 0.3272 test_loss: 1.7832, test_acc: 0.3874, best: 0.3874, time: 0:02:59
 Epoch: 6, lr: 1.0e-02, train_loss: 1.6953, train_acc: 0.3482 test_loss: 1.6031, test_acc: 0.3784, best: 0.3874, time: 0:02:58
 Epoch: 7, lr: 1.0e-02, train_loss: 1.6410, train_acc: 0.3800 test_loss: 1.6454, test_acc: 0.3757, best: 0.3874, time: 0:03:00
 Epoch: 8, lr: 1.0e-02, train_loss: 1.5898, train_acc: 0.3960 test_loss: 1.6163, test_acc: 0.4299, best: 0.4299, time: 0:02:59
 Epoch: 9, lr: 1.0e-02, train_loss: 1.5522, train_acc: 0.4142 test_loss: 1.5501, test_acc: 0.4541, best: 0.4541, time: 0:03:01
 Epoch: 10, lr: 1.0e-02, train_loss: 1.5027, train_acc: 0.4362 test_loss: 1.7317, test_acc: 0.4442, best: 0.4541, time: 0:02:59
 Epoch: 11, lr: 1.0e-02, train_loss: 1.4739, train_acc: 0.4466 test_loss: 1.6225, test_acc: 0.4733, best: 0.4733, time: 0:02:59
 Epoch: 12, lr: 1.0e-02, train_loss: 1.4422, train_acc: 0.4648 test_loss: 1.6039, test_acc: 0.4709, best: 0.4733, time: 0:02:59
 Epoch: 13, lr: 1.0e-02, train_loss: 1.4059, train_acc: 0.4758 test_loss: 1.3462, test_acc: 0.5110, best: 0.5110, time: 0:03:01
 Epoch: 14, lr: 1.0e-02, train_loss: 1.3797, train_acc: 0.4870 test_loss: 1.3390, test_acc: 0.5250, best: 0.5250, time: 0:02:59
 Epoch: 15, lr: 1.0e-02, train_loss: 1.3401, train_acc: 0.5038 test_loss: 1.6572, test_acc: 0.5011, best: 0.5250, time: 0:02:59
 Epoch: 16, lr: 1.0e-02, train_loss: 1.3302, train_acc: 0.5132 test_loss: 1.7272, test_acc: 0.5215, best: 0.5250, time: 0:02:58
 Epoch: 17, lr: 1.0e-02, train_loss: 1.3025, train_acc: 0.5166 test_loss: 1.6113, test_acc: 0.5429, best: 0.5429, time: 0:02:59
 Epoch: 18, lr: 1.0e-02, train_loss: 1.2622, train_acc: 0.5466 test_loss: 1.4712, test_acc: 0.5589, best: 0.5589, time: 0:02:58
 Epoch: 19, lr: 1.0e-02, train_loss: 1.2571, train_acc: 0.5370 test_loss: 1.5853, test_acc: 0.5471, best: 0.5589, time: 0:03:02
 Epoch: 20, lr: 1.0e-02, train_loss: 1.2056, train_acc: 0.5662 test_loss: 1.4364, test_acc: 0.5360, best: 0.5589, time: 0:02:59
 Epoch: 21, lr: 1.0e-02, train_loss: 1.2021, train_acc: 0.5688 test_loss: 1.2907, test_acc: 0.5579, best: 0.5589, time: 0:02:58
 Epoch: 22, lr: 1.0e-02, train_loss: 1.1727, train_acc: 0.5786 test_loss: 1.2182, test_acc: 0.5944, best: 0.5944, time: 0:02:59
 Epoch: 23, lr: 1.0e-02, train_loss: 1.1616, train_acc: 0.5792 test_loss: 1.1186, test_acc: 0.6145, best: 0.6145, time: 0:02:59
 Epoch: 24, lr: 1.0e-02, train_loss: 1.1375, train_acc: 0.5872 test_loss: 1.3933, test_acc: 0.5784, best: 0.6145, time: 0:02:59
 Epoch: 25, lr: 1.0e-02, train_loss: 1.1113, train_acc: 0.5986 test_loss: 1.2184, test_acc: 0.5903, best: 0.6145, time: 0:03:01
 Epoch: 26, lr: 1.0e-02, train_loss: 1.0815, train_acc: 0.6064 test_loss: 1.3299, test_acc: 0.5966, best: 0.6145, time: 0:02:59
 Epoch: 27, lr: 1.0e-02, train_loss: 1.0518, train_acc: 0.6268 test_loss: 1.2152, test_acc: 0.6199, best: 0.6199, time: 0:02:59
 Epoch: 28, lr: 1.0e-02, train_loss: 1.0656, train_acc: 0.6084 test_loss: 1.0525, test_acc: 0.6371, best: 0.6371, time: 0:03:00
 Epoch: 29, lr: 1.0e-02, train_loss: 1.0294, train_acc: 0.6326 test_loss: 1.2343, test_acc: 0.5986, best: 0.6371, time: 0:03:04
 Epoch: 30, lr: 1.0e-02, train_loss: 1.0227, train_acc: 0.6328 test_loss: 1.1544, test_acc: 0.6201, best: 0.6371, time: 0:02:59
 Epoch: 31, lr: 1.0e-02, train_loss: 1.0290, train_acc: 0.6324 test_loss: 1.0277, test_acc: 0.6525, best: 0.6525, time: 0:02:59
 Epoch: 32, lr: 1.0e-02, train_loss: 1.0012, train_acc: 0.6410 test_loss: 1.0160, test_acc: 0.6566, best: 0.6566, time: 0:03:02
 Epoch: 33, lr: 1.0e-02, train_loss: 0.9626, train_acc: 0.6586 test_loss: 1.2740, test_acc: 0.5961, best: 0.6566, time: 0:02:59
 Epoch: 34, lr: 1.0e-02, train_loss: 0.9428, train_acc: 0.6552 test_loss: 1.0159, test_acc: 0.6518, best: 0.6566, time: 0:02:59
 Epoch: 35, lr: 1.0e-02, train_loss: 0.9424, train_acc: 0.6536 test_loss: 1.0474, test_acc: 0.6386, best: 0.6566, time: 0:03:01
 Epoch: 36, lr: 1.0e-02, train_loss: 0.9177, train_acc: 0.6706 test_loss: 1.1195, test_acc: 0.6410, best: 0.6566, time: 0:02:58
 Epoch: 37, lr: 1.0e-02, train_loss: 0.9014, train_acc: 0.6770 test_loss: 0.9777, test_acc: 0.6867, best: 0.6867, time: 0:03:00
 Epoch: 38, lr: 1.0e-02, train_loss: 0.9037, train_acc: 0.6764 test_loss: 0.9408, test_acc: 0.6865, best: 0.6867, time: 0:02:58
 Epoch: 39, lr: 1.0e-02, train_loss: 0.8787, train_acc: 0.6888 test_loss: 0.8943, test_acc: 0.6849, best: 0.6867, time: 0:03:04
 Epoch: 40, lr: 1.0e-02, train_loss: 0.8614, train_acc: 0.6850 test_loss: 0.9531, test_acc: 0.6823, best: 0.6867, time: 0:03:00
 Epoch: 41, lr: 1.0e-02, train_loss: 0.8421, train_acc: 0.6972 test_loss: 1.0438, test_acc: 0.6562, best: 0.6867, time: 0:02:58
 Epoch: 42, lr: 1.0e-02, train_loss: 0.8313, train_acc: 0.7012 test_loss: 1.1556, test_acc: 0.6422, best: 0.6867, time: 0:02:58
 Epoch: 43, lr: 1.0e-02, train_loss: 0.8402, train_acc: 0.6968 test_loss: 0.9700, test_acc: 0.6779, best: 0.6867, time: 0:02:58
 Epoch: 44, lr: 1.0e-02, train_loss: 0.8100, train_acc: 0.7104 test_loss: 0.8617, test_acc: 0.7135, best: 0.7135, time: 0:02:59
 Epoch: 45, lr: 1.0e-02, train_loss: 0.7871, train_acc: 0.7174 test_loss: 0.9241, test_acc: 0.7034, best: 0.7135, time: 0:02:59
 Epoch: 46, lr: 1.0e-02, train_loss: 0.7997, train_acc: 0.7126 test_loss: 0.7880, test_acc: 0.7401, best: 0.7401, time: 0:02:58
 Epoch: 47, lr: 1.0e-02, train_loss: 0.7712, train_acc: 0.7232 test_loss: 0.9728, test_acc: 0.6990, best: 0.7401, time: 0:03:00
 Epoch: 48, lr: 1.0e-02, train_loss: 0.7314, train_acc: 0.7380 test_loss: 1.3691, test_acc: 0.6418, best: 0.7401, time: 0:02:59
 Epoch: 49, lr: 1.0e-02, train_loss: 0.7632, train_acc: 0.7302 test_loss: 0.8585, test_acc: 0.7196, best: 0.7401, time: 0:03:01
 Epoch: 50, lr: 1.0e-02, train_loss: 0.7466, train_acc: 0.7332 test_loss: 0.8503, test_acc: 0.7126, best: 0.7401, time: 0:02:59
 Epoch: 51, lr: 1.0e-02, train_loss: 0.7137, train_acc: 0.7474 test_loss: 0.8917, test_acc: 0.7205, best: 0.7401, time: 0:02:58
 Epoch: 52, lr: 1.0e-02, train_loss: 0.6996, train_acc: 0.7524 test_loss: 0.8305, test_acc: 0.7244, best: 0.7401, time: 0:02:59
 Epoch: 53, lr: 1.0e-02, train_loss: 0.6899, train_acc: 0.7504 test_loss: 0.9182, test_acc: 0.7106, best: 0.7401, time: 0:02:59
 Epoch: 54, lr: 1.0e-02, train_loss: 0.6772, train_acc: 0.7596 test_loss: 0.8745, test_acc: 0.7304, best: 0.7401, time: 0:02:59
 Epoch: 55, lr: 1.0e-02, train_loss: 0.6741, train_acc: 0.7630 test_loss: 0.8453, test_acc: 0.7225, best: 0.7401, time: 0:02:57
 Epoch: 56, lr: 1.0e-02, train_loss: 0.6697, train_acc: 0.7632 test_loss: 0.9387, test_acc: 0.7105, best: 0.7401, time: 0:02:58
 Epoch: 57, lr: 1.0e-02, train_loss: 0.6637, train_acc: 0.7678 test_loss: 0.8212, test_acc: 0.7471, best: 0.7471, time: 0:03:00
 Epoch: 58, lr: 1.0e-02, train_loss: 0.6399, train_acc: 0.7786 test_loss: 1.0673, test_acc: 0.7050, best: 0.7471, time: 0:02:59
 Epoch: 59, lr: 1.0e-02, train_loss: 0.6385, train_acc: 0.7806 test_loss: 1.0320, test_acc: 0.7268, best: 0.7471, time: 0:03:00
 Epoch: 60, lr: 1.0e-02, train_loss: 0.6380, train_acc: 0.7710 test_loss: 0.7797, test_acc: 0.7496, best: 0.7496, time: 0:02:59
 Epoch: 61, lr: 1.0e-02, train_loss: 0.6182, train_acc: 0.7876 test_loss: 1.0385, test_acc: 0.7153, best: 0.7496, time: 0:02:58
 Epoch: 62, lr: 1.0e-02, train_loss: 0.6174, train_acc: 0.7866 test_loss: 0.8727, test_acc: 0.7300, best: 0.7496, time: 0:02:57
 Epoch: 63, lr: 1.0e-02, train_loss: 0.5839, train_acc: 0.7912 test_loss: 1.1571, test_acc: 0.7155, best: 0.7496, time: 0:02:59
 Epoch: 64, lr: 1.0e-02, train_loss: 0.5919, train_acc: 0.7902 test_loss: 0.8658, test_acc: 0.7520, best: 0.7520, time: 0:02:57
 Epoch: 65, lr: 1.0e-02, train_loss: 0.5827, train_acc: 0.7934 test_loss: 0.8753, test_acc: 0.7509, best: 0.7520, time: 0:02:57
 Epoch: 66, lr: 1.0e-02, train_loss: 0.5944, train_acc: 0.7882 test_loss: 1.5317, test_acc: 0.7090, best: 0.7520, time: 0:02:57
 Epoch: 67, lr: 1.0e-02, train_loss: 0.5792, train_acc: 0.7980 test_loss: 0.7846, test_acc: 0.7629, best: 0.7629, time: 0:02:57
 Epoch: 68, lr: 1.0e-02, train_loss: 0.5966, train_acc: 0.7904 test_loss: 0.8311, test_acc: 0.7625, best: 0.7629, time: 0:02:57
 Epoch: 69, lr: 1.0e-02, train_loss: 0.5678, train_acc: 0.8038 test_loss: 0.8811, test_acc: 0.7599, best: 0.7629, time: 0:02:57
 Epoch: 70, lr: 1.0e-02, train_loss: 0.5515, train_acc: 0.8084 test_loss: 0.6855, test_acc: 0.7802, best: 0.7802, time: 0:02:58
 Epoch: 71, lr: 1.0e-02, train_loss: 0.5215, train_acc: 0.8132 test_loss: 0.8349, test_acc: 0.7639, best: 0.7802, time: 0:02:57
 Epoch: 72, lr: 1.0e-02, train_loss: 0.5254, train_acc: 0.8202 test_loss: 1.1919, test_acc: 0.7167, best: 0.7802, time: 0:02:59
 Epoch: 73, lr: 1.0e-02, train_loss: 0.5177, train_acc: 0.8216 test_loss: 1.7143, test_acc: 0.7248, best: 0.7802, time: 0:02:57
 Epoch: 74, lr: 1.0e-02, train_loss: 0.5345, train_acc: 0.8084 test_loss: 0.8629, test_acc: 0.7614, best: 0.7802, time: 0:02:58
 Epoch: 75, lr: 1.0e-02, train_loss: 0.5221, train_acc: 0.8150 test_loss: 0.9414, test_acc: 0.7542, best: 0.7802, time: 0:02:57
 Epoch: 76, lr: 1.0e-02, train_loss: 0.5046, train_acc: 0.8212 test_loss: 0.7400, test_acc: 0.7685, best: 0.7802, time: 0:02:56
 Epoch: 77, lr: 1.0e-02, train_loss: 0.4932, train_acc: 0.8226 test_loss: 0.7406, test_acc: 0.7855, best: 0.7855, time: 0:02:57
 Epoch: 78, lr: 1.0e-02, train_loss: 0.4866, train_acc: 0.8236 test_loss: 0.8356, test_acc: 0.7701, best: 0.7855, time: 0:03:03
 Epoch: 79, lr: 1.0e-02, train_loss: 0.5053, train_acc: 0.8236 test_loss: 0.8336, test_acc: 0.7600, best: 0.7855, time: 0:03:03
 Epoch: 80, lr: 1.0e-02, train_loss: 0.4680, train_acc: 0.8406 test_loss: 1.0241, test_acc: 0.7546, best: 0.7855, time: 0:03:01
 Epoch: 81, lr: 1.0e-02, train_loss: 0.4473, train_acc: 0.8426 test_loss: 0.7564, test_acc: 0.7700, best: 0.7855, time: 0:02:57
 Epoch: 82, lr: 1.0e-02, train_loss: 0.4499, train_acc: 0.8446 test_loss: 0.9514, test_acc: 0.7529, best: 0.7855, time: 0:02:57
 Epoch: 83, lr: 1.0e-02, train_loss: 0.4545, train_acc: 0.8468 test_loss: 0.7489, test_acc: 0.7781, best: 0.7855, time: 0:02:57
 Epoch: 84, lr: 1.0e-02, train_loss: 0.4674, train_acc: 0.8344 test_loss: 0.7632, test_acc: 0.7796, best: 0.7855, time: 0:02:57
 Epoch: 85, lr: 1.0e-02, train_loss: 0.4622, train_acc: 0.8330 test_loss: 1.1134, test_acc: 0.7552, best: 0.7855, time: 0:02:58
 Epoch: 86, lr: 1.0e-02, train_loss: 0.4355, train_acc: 0.8490 test_loss: 1.1690, test_acc: 0.7474, best: 0.7855, time: 0:02:58
 Epoch: 87, lr: 1.0e-02, train_loss: 0.4443, train_acc: 0.8434 test_loss: 0.7230, test_acc: 0.7879, best: 0.7879, time: 0:03:00
 Epoch: 88, lr: 1.0e-02, train_loss: 0.4256, train_acc: 0.8548 test_loss: 0.8422, test_acc: 0.7845, best: 0.7879, time: 0:02:57
 Epoch: 89, lr: 1.0e-02, train_loss: 0.4292, train_acc: 0.8502 test_loss: 0.9218, test_acc: 0.7745, best: 0.7879, time: 0:02:56
 Epoch: 90, lr: 1.0e-02, train_loss: 0.4362, train_acc: 0.8458 test_loss: 0.8670, test_acc: 0.7798, best: 0.7879, time: 0:03:02
 Epoch: 91, lr: 1.0e-02, train_loss: 0.3961, train_acc: 0.8590 test_loss: 0.9617, test_acc: 0.7556, best: 0.7879, time: 0:02:57
 Epoch: 92, lr: 1.0e-02, train_loss: 0.4312, train_acc: 0.8484 test_loss: 0.9768, test_acc: 0.7439, best: 0.7879, time: 0:02:57
 Epoch: 93, lr: 1.0e-02, train_loss: 0.3955, train_acc: 0.8644 test_loss: 1.0475, test_acc: 0.7411, best: 0.7879, time: 0:02:57
 Epoch: 94, lr: 1.0e-02, train_loss: 0.4111, train_acc: 0.8600 test_loss: 0.7460, test_acc: 0.7911, best: 0.7911, time: 0:02:58
 Epoch: 95, lr: 1.0e-02, train_loss: 0.3969, train_acc: 0.8656 test_loss: 1.2671, test_acc: 0.7600, best: 0.7911, time: 0:02:57
 Epoch: 96, lr: 1.0e-02, train_loss: 0.3914, train_acc: 0.8650 test_loss: 1.1332, test_acc: 0.7644, best: 0.7911, time: 0:02:57
 Epoch: 97, lr: 1.0e-02, train_loss: 0.3885, train_acc: 0.8690 test_loss: 1.5676, test_acc: 0.7510, best: 0.7911, time: 0:02:58
 Epoch: 98, lr: 1.0e-02, train_loss: 0.3825, train_acc: 0.8698 test_loss: 0.7170, test_acc: 0.7937, best: 0.7937, time: 0:02:57
 Epoch: 99, lr: 1.0e-02, train_loss: 0.3728, train_acc: 0.8666 test_loss: 0.7656, test_acc: 0.7959, best: 0.7959, time: 0:02:58
 Epoch: 100, lr: 1.0e-02, train_loss: 0.3797, train_acc: 0.8712 test_loss: 1.1104, test_acc: 0.7632, best: 0.7959, time: 0:02:58
 Epoch: 101, lr: 1.0e-02, train_loss: 0.3779, train_acc: 0.8664 test_loss: 1.0100, test_acc: 0.7801, best: 0.7959, time: 0:02:58
 Epoch: 102, lr: 1.0e-02, train_loss: 0.3939, train_acc: 0.8650 test_loss: 1.3451, test_acc: 0.7439, best: 0.7959, time: 0:02:56
 Epoch: 103, lr: 1.0e-02, train_loss: 0.3624, train_acc: 0.8766 test_loss: 0.7395, test_acc: 0.7923, best: 0.7959, time: 0:02:56
 Epoch: 104, lr: 1.0e-02, train_loss: 0.3674, train_acc: 0.8726 test_loss: 0.6676, test_acc: 0.7970, best: 0.7970, time: 0:02:58
 Epoch: 105, lr: 1.0e-02, train_loss: 0.3553, train_acc: 0.8724 test_loss: 0.7089, test_acc: 0.8050, best: 0.8050, time: 0:02:58
 Epoch: 106, lr: 1.0e-02, train_loss: 0.3415, train_acc: 0.8838 test_loss: 0.8233, test_acc: 0.7885, best: 0.8050, time: 0:02:57
 Epoch: 107, lr: 1.0e-02, train_loss: 0.3361, train_acc: 0.8828 test_loss: 0.9161, test_acc: 0.7778, best: 0.8050, time: 0:02:58
 Epoch: 108, lr: 1.0e-02, train_loss: 0.3412, train_acc: 0.8784 test_loss: 1.0903, test_acc: 0.7586, best: 0.8050, time: 0:02:57
 Epoch: 109, lr: 1.0e-02, train_loss: 0.3355, train_acc: 0.8840 test_loss: 0.9412, test_acc: 0.7756, best: 0.8050, time: 0:03:01
 Epoch: 110, lr: 1.0e-02, train_loss: 0.3435, train_acc: 0.8856 test_loss: 0.9213, test_acc: 0.7816, best: 0.8050, time: 0:03:00
 Epoch: 111, lr: 1.0e-02, train_loss: 0.3146, train_acc: 0.8912 test_loss: 0.9117, test_acc: 0.7775, best: 0.8050, time: 0:02:58
 Epoch: 112, lr: 1.0e-02, train_loss: 0.3210, train_acc: 0.8902 test_loss: 0.7381, test_acc: 0.8046, best: 0.8050, time: 0:02:58
 Epoch: 113, lr: 1.0e-02, train_loss: 0.3507, train_acc: 0.8758 test_loss: 0.9643, test_acc: 0.7876, best: 0.8050, time: 0:02:57
 Epoch: 114, lr: 1.0e-02, train_loss: 0.3272, train_acc: 0.8900 test_loss: 0.7512, test_acc: 0.7915, best: 0.8050, time: 0:02:58
 Epoch: 115, lr: 1.0e-02, train_loss: 0.3400, train_acc: 0.8806 test_loss: 0.8950, test_acc: 0.7834, best: 0.8050, time: 0:02:58
 Epoch: 116, lr: 1.0e-02, train_loss: 0.3178, train_acc: 0.8936 test_loss: 1.3036, test_acc: 0.7605, best: 0.8050, time: 0:02:57
 Epoch: 117, lr: 1.0e-02, train_loss: 0.3163, train_acc: 0.8910 test_loss: 0.7720, test_acc: 0.7981, best: 0.8050, time: 0:02:57
 Epoch: 118, lr: 1.0e-02, train_loss: 0.3244, train_acc: 0.8826 test_loss: 1.0943, test_acc: 0.7646, best: 0.8050, time: 0:02:57
 Epoch: 119, lr: 1.0e-02, train_loss: 0.3157, train_acc: 0.8934 test_loss: 1.1472, test_acc: 0.7855, best: 0.8050, time: 0:02:57
 Epoch: 120, lr: 1.0e-02, train_loss: 0.3054, train_acc: 0.8968 test_loss: 0.7416, test_acc: 0.8151, best: 0.8151, time: 0:03:02
 Epoch: 121, lr: 1.0e-02, train_loss: 0.3087, train_acc: 0.8940 test_loss: 1.5938, test_acc: 0.7661, best: 0.8151, time: 0:02:56
 Epoch: 122, lr: 1.0e-02, train_loss: 0.3097, train_acc: 0.8902 test_loss: 1.0227, test_acc: 0.7946, best: 0.8151, time: 0:02:57
 Epoch: 123, lr: 1.0e-02, train_loss: 0.3050, train_acc: 0.8932 test_loss: 0.8952, test_acc: 0.7911, best: 0.8151, time: 0:02:57
 Epoch: 124, lr: 1.0e-02, train_loss: 0.3107, train_acc: 0.8904 test_loss: 0.7459, test_acc: 0.7990, best: 0.8151, time: 0:02:58
 Epoch: 125, lr: 1.0e-02, train_loss: 0.2887, train_acc: 0.8998 test_loss: 1.2031, test_acc: 0.7746, best: 0.8151, time: 0:02:56
 Epoch: 126, lr: 1.0e-02, train_loss: 0.2968, train_acc: 0.8974 test_loss: 1.0156, test_acc: 0.7729, best: 0.8151, time: 0:02:57
 Epoch: 127, lr: 1.0e-02, train_loss: 0.3163, train_acc: 0.8930 test_loss: 1.1019, test_acc: 0.7625, best: 0.8151, time: 0:02:57
 Epoch: 128, lr: 1.0e-02, train_loss: 0.2874, train_acc: 0.9076 test_loss: 1.0243, test_acc: 0.7966, best: 0.8151, time: 0:02:58
 Epoch: 129, lr: 1.0e-02, train_loss: 0.2837, train_acc: 0.9036 test_loss: 1.5748, test_acc: 0.7774, best: 0.8151, time: 0:02:57
 Epoch: 130, lr: 1.0e-02, train_loss: 0.2936, train_acc: 0.8986 test_loss: 0.8458, test_acc: 0.7837, best: 0.8151, time: 0:02:57
 Epoch: 131, lr: 1.0e-02, train_loss: 0.2635, train_acc: 0.9110 test_loss: 1.0445, test_acc: 0.7756, best: 0.8151, time: 0:03:02
 Epoch: 132, lr: 1.0e-02, train_loss: 0.2936, train_acc: 0.8994 test_loss: 0.6390, test_acc: 0.8127, best: 0.8151, time: 0:03:00
 Epoch: 133, lr: 1.0e-02, train_loss: 0.2698, train_acc: 0.9086 test_loss: 0.7329, test_acc: 0.8079, best: 0.8151, time: 0:02:57
 Epoch: 134, lr: 1.0e-02, train_loss: 0.2639, train_acc: 0.9130 test_loss: 0.7731, test_acc: 0.8107, best: 0.8151, time: 0:02:57
 Epoch: 135, lr: 1.0e-02, train_loss: 0.2683, train_acc: 0.9052 test_loss: 0.9225, test_acc: 0.8040, best: 0.8151, time: 0:02:57
 Epoch: 136, lr: 1.0e-02, train_loss: 0.2630, train_acc: 0.9068 test_loss: 1.1614, test_acc: 0.7550, best: 0.8151, time: 0:03:00
 Epoch: 137, lr: 1.0e-02, train_loss: 0.2770, train_acc: 0.9024 test_loss: 0.7628, test_acc: 0.8113, best: 0.8151, time: 0:02:56
 Epoch: 138, lr: 1.0e-02, train_loss: 0.2801, train_acc: 0.8998 test_loss: 1.3017, test_acc: 0.7708, best: 0.8151, time: 0:02:58
 Epoch: 139, lr: 1.0e-02, train_loss: 0.2772, train_acc: 0.9000 test_loss: 0.7615, test_acc: 0.7921, best: 0.8151, time: 0:02:57
 Epoch: 140, lr: 1.0e-02, train_loss: 0.2568, train_acc: 0.9154 test_loss: 1.2994, test_acc: 0.7718, best: 0.8151, time: 0:02:59
 Epoch: 141, lr: 1.0e-02, train_loss: 0.2564, train_acc: 0.9126 test_loss: 0.8023, test_acc: 0.8064, best: 0.8151, time: 0:03:02
 Epoch: 142, lr: 1.0e-02, train_loss: 0.2629, train_acc: 0.9104 test_loss: 1.2425, test_acc: 0.7778, best: 0.8151, time: 0:02:57
 Epoch: 143, lr: 1.0e-02, train_loss: 0.2610, train_acc: 0.9088 test_loss: 0.8134, test_acc: 0.7959, best: 0.8151, time: 0:02:58
 Epoch: 144, lr: 1.0e-02, train_loss: 0.2656, train_acc: 0.9110 test_loss: 0.8254, test_acc: 0.7984, best: 0.8151, time: 0:02:58
 Epoch: 145, lr: 1.0e-02, train_loss: 0.2604, train_acc: 0.9128 test_loss: 1.5892, test_acc: 0.7582, best: 0.8151, time: 0:02:57
 Epoch: 146, lr: 1.0e-02, train_loss: 0.2443, train_acc: 0.9176 test_loss: 1.5950, test_acc: 0.7559, best: 0.8151, time: 0:02:57
 Epoch: 147, lr: 1.0e-02, train_loss: 0.2495, train_acc: 0.9146 test_loss: 1.0807, test_acc: 0.7791, best: 0.8151, time: 0:02:57
 Epoch: 148, lr: 1.0e-02, train_loss: 0.2614, train_acc: 0.9096 test_loss: 0.9804, test_acc: 0.7970, best: 0.8151, time: 0:02:57
 Epoch: 149, lr: 1.0e-02, train_loss: 0.2460, train_acc: 0.9140 test_loss: 0.9225, test_acc: 0.7957, best: 0.8151, time: 0:02:57
 Epoch: 150, lr: 1.0e-02, train_loss: 0.2513, train_acc: 0.9160 test_loss: 0.8618, test_acc: 0.8044, best: 0.8151, time: 0:02:57
 Epoch: 151, lr: 1.0e-02, train_loss: 0.2409, train_acc: 0.9188 test_loss: 0.8009, test_acc: 0.8085, best: 0.8151, time: 0:03:01
 Epoch: 152, lr: 1.0e-02, train_loss: 0.2298, train_acc: 0.9216 test_loss: 0.9147, test_acc: 0.8039, best: 0.8151, time: 0:02:58
 Epoch: 153, lr: 1.0e-02, train_loss: 0.2431, train_acc: 0.9158 test_loss: 1.5428, test_acc: 0.7769, best: 0.8151, time: 0:02:57
 Epoch: 154, lr: 1.0e-02, train_loss: 0.2604, train_acc: 0.9100 test_loss: 0.9985, test_acc: 0.8036, best: 0.8151, time: 0:02:56
 Epoch: 155, lr: 1.0e-02, train_loss: 0.2591, train_acc: 0.9078 test_loss: 1.1178, test_acc: 0.7811, best: 0.8151, time: 0:02:58
 Epoch: 156, lr: 1.0e-02, train_loss: 0.2496, train_acc: 0.9138 test_loss: 1.6737, test_acc: 0.7622, best: 0.8151, time: 0:02:57
 Epoch: 157, lr: 1.0e-02, train_loss: 0.2283, train_acc: 0.9206 test_loss: 1.0220, test_acc: 0.7781, best: 0.8151, time: 0:02:57
 Epoch: 158, lr: 1.0e-02, train_loss: 0.2466, train_acc: 0.9150 test_loss: 1.0406, test_acc: 0.8115, best: 0.8151, time: 0:02:58
 Epoch: 159, lr: 1.0e-02, train_loss: 0.2588, train_acc: 0.9114 test_loss: 0.7220, test_acc: 0.8067, best: 0.8151, time: 0:02:56
 Epoch: 160, lr: 1.0e-02, train_loss: 0.2323, train_acc: 0.9164 test_loss: 1.0513, test_acc: 0.7833, best: 0.8151, time: 0:02:57
 Epoch: 161, lr: 1.0e-02, train_loss: 0.2350, train_acc: 0.9202 test_loss: 1.2806, test_acc: 0.7906, best: 0.8151, time: 0:02:57
 Epoch: 162, lr: 1.0e-02, train_loss: 0.2108, train_acc: 0.9268 test_loss: 1.4007, test_acc: 0.7856, best: 0.8151, time: 0:02:57
 Epoch: 163, lr: 1.0e-02, train_loss: 0.2329, train_acc: 0.9218 test_loss: 1.0050, test_acc: 0.7974, best: 0.8151, time: 0:02:57
 Epoch: 164, lr: 1.0e-02, train_loss: 0.2223, train_acc: 0.9240 test_loss: 1.8714, test_acc: 0.7706, best: 0.8151, time: 0:02:57
 Epoch: 165, lr: 1.0e-02, train_loss: 0.2239, train_acc: 0.9218 test_loss: 1.8391, test_acc: 0.7766, best: 0.8151, time: 0:02:57
 Epoch: 166, lr: 1.0e-02, train_loss: 0.2336, train_acc: 0.9224 test_loss: 1.1551, test_acc: 0.8036, best: 0.8151, time: 0:02:57
 Epoch: 167, lr: 1.0e-02, train_loss: 0.2220, train_acc: 0.9260 test_loss: 1.0149, test_acc: 0.7940, best: 0.8151, time: 0:03:01
 Epoch: 168, lr: 1.0e-02, train_loss: 0.2201, train_acc: 0.9252 test_loss: 1.1144, test_acc: 0.8079, best: 0.8151, time: 0:02:57
 Epoch: 169, lr: 1.0e-02, train_loss: 0.2147, train_acc: 0.9272 test_loss: 1.1450, test_acc: 0.7855, best: 0.8151, time: 0:02:57
 Epoch: 170, lr: 1.0e-02, train_loss: 0.2227, train_acc: 0.9260 test_loss: 1.3492, test_acc: 0.7819, best: 0.8151, time: 0:02:57
 Epoch: 171, lr: 1.0e-02, train_loss: 0.2177, train_acc: 0.9280 test_loss: 1.7720, test_acc: 0.7620, best: 0.8151, time: 0:03:00
 Epoch: 172, lr: 1.0e-02, train_loss: 0.2262, train_acc: 0.9244 test_loss: 0.7504, test_acc: 0.8104, best: 0.8151, time: 0:02:59
 Epoch: 173, lr: 1.0e-02, train_loss: 0.2391, train_acc: 0.9164 test_loss: 0.7539, test_acc: 0.8226, best: 0.8226, time: 0:02:57
 Epoch: 174, lr: 1.0e-02, train_loss: 0.2381, train_acc: 0.9192 test_loss: 0.9573, test_acc: 0.7881, best: 0.8226, time: 0:02:58
 Epoch: 175, lr: 1.0e-02, train_loss: 0.2433, train_acc: 0.9208 test_loss: 0.6843, test_acc: 0.8231, best: 0.8231, time: 0:02:58
 Epoch: 176, lr: 1.0e-02, train_loss: 0.2255, train_acc: 0.9220 test_loss: 0.7664, test_acc: 0.8075, best: 0.8231, time: 0:02:56
 Epoch: 177, lr: 1.0e-02, train_loss: 0.2258, train_acc: 0.9234 test_loss: 0.6911, test_acc: 0.8183, best: 0.8231, time: 0:02:57
 Epoch: 178, lr: 1.0e-02, train_loss: 0.2329, train_acc: 0.9226 test_loss: 0.7013, test_acc: 0.8204, best: 0.8231, time: 0:02:57
 Epoch: 179, lr: 1.0e-02, train_loss: 0.2268, train_acc: 0.9234 test_loss: 0.7868, test_acc: 0.8003, best: 0.8231, time: 0:02:56
 Epoch: 180, lr: 2.0e-03, train_loss: 0.1809, train_acc: 0.9402 test_loss: 0.6426, test_acc: 0.8369, best: 0.8369, time: 0:02:58
 Epoch: 181, lr: 2.0e-03, train_loss: 0.1689, train_acc: 0.9416 test_loss: 0.6784, test_acc: 0.8339, best: 0.8369, time: 0:02:59
 Epoch: 182, lr: 2.0e-03, train_loss: 0.1604, train_acc: 0.9446 test_loss: 0.6034, test_acc: 0.8400, best: 0.8400, time: 0:02:58
 Epoch: 183, lr: 2.0e-03, train_loss: 0.1541, train_acc: 0.9480 test_loss: 0.6374, test_acc: 0.8397, best: 0.8400, time: 0:02:58
 Epoch: 184, lr: 2.0e-03, train_loss: 0.1542, train_acc: 0.9514 test_loss: 0.6094, test_acc: 0.8430, best: 0.8430, time: 0:02:57
 Epoch: 185, lr: 2.0e-03, train_loss: 0.1686, train_acc: 0.9426 test_loss: 0.6004, test_acc: 0.8439, best: 0.8439, time: 0:02:57
 Epoch: 186, lr: 2.0e-03, train_loss: 0.1437, train_acc: 0.9518 test_loss: 0.6495, test_acc: 0.8366, best: 0.8439, time: 0:02:57
 Epoch: 187, lr: 2.0e-03, train_loss: 0.1562, train_acc: 0.9490 test_loss: 0.6362, test_acc: 0.8410, best: 0.8439, time: 0:02:58
 Epoch: 188, lr: 2.0e-03, train_loss: 0.1486, train_acc: 0.9528 test_loss: 0.6480, test_acc: 0.8376, best: 0.8439, time: 0:02:56
 Epoch: 189, lr: 2.0e-03, train_loss: 0.1498, train_acc: 0.9500 test_loss: 0.6635, test_acc: 0.8317, best: 0.8439, time: 0:02:57
 Epoch: 190, lr: 2.0e-03, train_loss: 0.1433, train_acc: 0.9524 test_loss: 0.6229, test_acc: 0.8390, best: 0.8439, time: 0:02:57
 Epoch: 191, lr: 2.0e-03, train_loss: 0.1461, train_acc: 0.9492 test_loss: 0.6307, test_acc: 0.8415, best: 0.8439, time: 0:02:59
 Epoch: 192, lr: 2.0e-03, train_loss: 0.1445, train_acc: 0.9516 test_loss: 0.5975, test_acc: 0.8436, best: 0.8439, time: 0:02:58
 Epoch: 193, lr: 2.0e-03, train_loss: 0.1345, train_acc: 0.9548 test_loss: 0.6351, test_acc: 0.8364, best: 0.8439, time: 0:02:57
 Epoch: 194, lr: 2.0e-03, train_loss: 0.1381, train_acc: 0.9526 test_loss: 0.6267, test_acc: 0.8405, best: 0.8439, time: 0:02:57
 Epoch: 195, lr: 2.0e-03, train_loss: 0.1476, train_acc: 0.9536 test_loss: 0.6037, test_acc: 0.8420, best: 0.8439, time: 0:02:57
 Epoch: 196, lr: 2.0e-03, train_loss: 0.1333, train_acc: 0.9592 test_loss: 0.6170, test_acc: 0.8442, best: 0.8442, time: 0:02:57
 Epoch: 197, lr: 2.0e-03, train_loss: 0.1382, train_acc: 0.9540 test_loss: 0.6161, test_acc: 0.8396, best: 0.8442, time: 0:02:57
 Epoch: 198, lr: 2.0e-03, train_loss: 0.1380, train_acc: 0.9528 test_loss: 0.6117, test_acc: 0.8404, best: 0.8442, time: 0:02:56
 Epoch: 199, lr: 2.0e-03, train_loss: 0.1257, train_acc: 0.9572 test_loss: 0.6780, test_acc: 0.8356, best: 0.8442, time: 0:02:58
 Epoch: 200, lr: 2.0e-03, train_loss: 0.1481, train_acc: 0.9498 test_loss: 0.6118, test_acc: 0.8406, best: 0.8442, time: 0:02:56
 Epoch: 201, lr: 2.0e-03, train_loss: 0.1464, train_acc: 0.9524 test_loss: 0.6513, test_acc: 0.8339, best: 0.8442, time: 0:02:58
 Epoch: 202, lr: 2.0e-03, train_loss: 0.1393, train_acc: 0.9558 test_loss: 0.6315, test_acc: 0.8367, best: 0.8442, time: 0:03:00
 Epoch: 203, lr: 2.0e-03, train_loss: 0.1329, train_acc: 0.9564 test_loss: 0.6185, test_acc: 0.8387, best: 0.8442, time: 0:02:57
 Epoch: 204, lr: 2.0e-03, train_loss: 0.1452, train_acc: 0.9488 test_loss: 0.6067, test_acc: 0.8411, best: 0.8442, time: 0:02:59
 Epoch: 205, lr: 2.0e-03, train_loss: 0.1354, train_acc: 0.9548 test_loss: 0.6508, test_acc: 0.8306, best: 0.8442, time: 0:02:58
 Epoch: 206, lr: 2.0e-03, train_loss: 0.1399, train_acc: 0.9542 test_loss: 0.6271, test_acc: 0.8366, best: 0.8442, time: 0:02:56
 Epoch: 207, lr: 2.0e-03, train_loss: 0.1396, train_acc: 0.9548 test_loss: 0.6117, test_acc: 0.8427, best: 0.8442, time: 0:02:56
 Epoch: 208, lr: 2.0e-03, train_loss: 0.1401, train_acc: 0.9536 test_loss: 0.6065, test_acc: 0.8436, best: 0.8442, time: 0:02:58
 Epoch: 209, lr: 2.0e-03, train_loss: 0.1233, train_acc: 0.9596 test_loss: 0.6427, test_acc: 0.8377, best: 0.8442, time: 0:02:58
 Epoch: 210, lr: 2.0e-03, train_loss: 0.1353, train_acc: 0.9546 test_loss: 0.6411, test_acc: 0.8344, best: 0.8442, time: 0:02:57
 Epoch: 211, lr: 2.0e-03, train_loss: 0.1191, train_acc: 0.9584 test_loss: 0.6123, test_acc: 0.8438, best: 0.8442, time: 0:02:57
 Epoch: 212, lr: 2.0e-03, train_loss: 0.1349, train_acc: 0.9518 test_loss: 0.6353, test_acc: 0.8377, best: 0.8442, time: 0:03:01
 Epoch: 213, lr: 2.0e-03, train_loss: 0.1247, train_acc: 0.9544 test_loss: 0.6530, test_acc: 0.8351, best: 0.8442, time: 0:02:57
 Epoch: 214, lr: 2.0e-03, train_loss: 0.1264, train_acc: 0.9552 test_loss: 0.6426, test_acc: 0.8363, best: 0.8442, time: 0:02:57
 Epoch: 215, lr: 2.0e-03, train_loss: 0.1210, train_acc: 0.9612 test_loss: 0.6283, test_acc: 0.8359, best: 0.8442, time: 0:02:57
 Epoch: 216, lr: 2.0e-03, train_loss: 0.1274, train_acc: 0.9554 test_loss: 0.6732, test_acc: 0.8316, best: 0.8442, time: 0:02:57
 Epoch: 217, lr: 2.0e-03, train_loss: 0.1183, train_acc: 0.9616 test_loss: 0.6405, test_acc: 0.8401, best: 0.8442, time: 0:02:58
 Epoch: 218, lr: 2.0e-03, train_loss: 0.1263, train_acc: 0.9602 test_loss: 0.6110, test_acc: 0.8459, best: 0.8459, time: 0:02:57
 Epoch: 219, lr: 2.0e-03, train_loss: 0.1166, train_acc: 0.9616 test_loss: 0.6299, test_acc: 0.8380, best: 0.8459, time: 0:02:59
 Epoch: 220, lr: 2.0e-03, train_loss: 0.1374, train_acc: 0.9528 test_loss: 0.6115, test_acc: 0.8423, best: 0.8459, time: 0:02:57
 Epoch: 221, lr: 2.0e-03, train_loss: 0.1218, train_acc: 0.9586 test_loss: 0.6188, test_acc: 0.8373, best: 0.8459, time: 0:02:58
 Epoch: 222, lr: 2.0e-03, train_loss: 0.1307, train_acc: 0.9554 test_loss: 0.6133, test_acc: 0.8401, best: 0.8459, time: 0:03:01
 Epoch: 223, lr: 2.0e-03, train_loss: 0.1270, train_acc: 0.9568 test_loss: 0.6412, test_acc: 0.8366, best: 0.8459, time: 0:02:59
 Epoch: 224, lr: 2.0e-03, train_loss: 0.1306, train_acc: 0.9556 test_loss: 0.6335, test_acc: 0.8383, best: 0.8459, time: 0:03:00
 Epoch: 225, lr: 2.0e-03, train_loss: 0.1238, train_acc: 0.9592 test_loss: 0.6677, test_acc: 0.8315, best: 0.8459, time: 0:03:00
 Epoch: 226, lr: 2.0e-03, train_loss: 0.1314, train_acc: 0.9586 test_loss: 0.6502, test_acc: 0.8333, best: 0.8459, time: 0:02:59
 Epoch: 227, lr: 2.0e-03, train_loss: 0.1211, train_acc: 0.9580 test_loss: 0.6331, test_acc: 0.8411, best: 0.8459, time: 0:02:58
 Epoch: 228, lr: 2.0e-03, train_loss: 0.1360, train_acc: 0.9570 test_loss: 0.8733, test_acc: 0.8224, best: 0.8459, time: 0:02:59
 Epoch: 229, lr: 2.0e-03, train_loss: 0.1102, train_acc: 0.9630 test_loss: 0.6554, test_acc: 0.8335, best: 0.8459, time: 0:02:58
 Epoch: 230, lr: 2.0e-03, train_loss: 0.1308, train_acc: 0.9560 test_loss: 0.7230, test_acc: 0.8340, best: 0.8459, time: 0:02:59
 Epoch: 231, lr: 2.0e-03, train_loss: 0.1225, train_acc: 0.9618 test_loss: 0.6355, test_acc: 0.8363, best: 0.8459, time: 0:03:00
 Epoch: 232, lr: 2.0e-03, train_loss: 0.1213, train_acc: 0.9592 test_loss: 0.6746, test_acc: 0.8297, best: 0.8459, time: 0:02:59
 Epoch: 233, lr: 2.0e-03, train_loss: 0.1141, train_acc: 0.9616 test_loss: 0.6397, test_acc: 0.8441, best: 0.8459, time: 0:02:58
 Epoch: 234, lr: 2.0e-03, train_loss: 0.1120, train_acc: 0.9656 test_loss: 0.6464, test_acc: 0.8377, best: 0.8459, time: 0:02:59
 Epoch: 235, lr: 2.0e-03, train_loss: 0.1221, train_acc: 0.9580 test_loss: 0.6616, test_acc: 0.8377, best: 0.8459, time: 0:02:58
 Epoch: 236, lr: 2.0e-03, train_loss: 0.1240, train_acc: 0.9572 test_loss: 0.6190, test_acc: 0.8397, best: 0.8459, time: 0:03:00
 Epoch: 237, lr: 2.0e-03, train_loss: 0.1135, train_acc: 0.9600 test_loss: 0.6635, test_acc: 0.8351, best: 0.8459, time: 0:02:58
 Epoch: 238, lr: 2.0e-03, train_loss: 0.1083, train_acc: 0.9630 test_loss: 0.6396, test_acc: 0.8413, best: 0.8459, time: 0:03:00
 Epoch: 239, lr: 2.0e-03, train_loss: 0.1212, train_acc: 0.9582 test_loss: 0.6118, test_acc: 0.8395, best: 0.8459, time: 0:02:59
 Epoch: 240, lr: 4.0e-04, train_loss: 0.1253, train_acc: 0.9606 test_loss: 0.5977, test_acc: 0.8413, best: 0.8459, time: 0:02:58
 Epoch: 241, lr: 4.0e-04, train_loss: 0.1236, train_acc: 0.9568 test_loss: 0.6147, test_acc: 0.8416, best: 0.8459, time: 0:03:00
 Epoch: 242, lr: 4.0e-04, train_loss: 0.1130, train_acc: 0.9630 test_loss: 0.6288, test_acc: 0.8367, best: 0.8459, time: 0:03:04
 Epoch: 243, lr: 4.0e-04, train_loss: 0.1015, train_acc: 0.9676 test_loss: 0.6566, test_acc: 0.8364, best: 0.8459, time: 0:03:01
 Epoch: 244, lr: 4.0e-04, train_loss: 0.1186, train_acc: 0.9620 test_loss: 0.6015, test_acc: 0.8414, best: 0.8459, time: 0:02:59
 Epoch: 245, lr: 4.0e-04, train_loss: 0.1151, train_acc: 0.9614 test_loss: 0.6269, test_acc: 0.8393, best: 0.8459, time: 0:02:59
 Epoch: 246, lr: 4.0e-04, train_loss: 0.1144, train_acc: 0.9618 test_loss: 0.6112, test_acc: 0.8452, best: 0.8459, time: 0:03:00
 Epoch: 247, lr: 4.0e-04, train_loss: 0.1150, train_acc: 0.9616 test_loss: 0.6036, test_acc: 0.8423, best: 0.8459, time: 0:02:59
 Epoch: 248, lr: 4.0e-04, train_loss: 0.1167, train_acc: 0.9620 test_loss: 0.6056, test_acc: 0.8448, best: 0.8459, time: 0:02:59
 Epoch: 249, lr: 4.0e-04, train_loss: 0.1021, train_acc: 0.9664 test_loss: 0.6229, test_acc: 0.8403, best: 0.8459, time: 0:02:58
 Epoch: 250, lr: 4.0e-04, train_loss: 0.1228, train_acc: 0.9594 test_loss: 0.6144, test_acc: 0.8421, best: 0.8459, time: 0:02:59
 Epoch: 251, lr: 4.0e-04, train_loss: 0.1163, train_acc: 0.9608 test_loss: 0.6019, test_acc: 0.8436, best: 0.8459, time: 0:03:00
 Epoch: 252, lr: 4.0e-04, train_loss: 0.1116, train_acc: 0.9626 test_loss: 0.5792, test_acc: 0.8472, best: 0.8472, time: 0:03:04
 Epoch: 253, lr: 4.0e-04, train_loss: 0.1021, train_acc: 0.9674 test_loss: 0.6137, test_acc: 0.8424, best: 0.8472, time: 0:03:00
 Epoch: 254, lr: 4.0e-04, train_loss: 0.1164, train_acc: 0.9590 test_loss: 0.6377, test_acc: 0.8426, best: 0.8472, time: 0:02:59
 Epoch: 255, lr: 4.0e-04, train_loss: 0.1163, train_acc: 0.9598 test_loss: 0.6412, test_acc: 0.8421, best: 0.8472, time: 0:02:58
 Epoch: 256, lr: 4.0e-04, train_loss: 0.1110, train_acc: 0.9626 test_loss: 0.6174, test_acc: 0.8454, best: 0.8472, time: 0:03:00
 Epoch: 257, lr: 4.0e-04, train_loss: 0.0986, train_acc: 0.9660 test_loss: 0.5987, test_acc: 0.8441, best: 0.8472, time: 0:02:59
 Epoch: 258, lr: 4.0e-04, train_loss: 0.1187, train_acc: 0.9604 test_loss: 0.6512, test_acc: 0.8410, best: 0.8472, time: 0:03:00
 Epoch: 259, lr: 4.0e-04, train_loss: 0.1099, train_acc: 0.9618 test_loss: 0.6244, test_acc: 0.8425, best: 0.8472, time: 0:03:00
 Epoch: 260, lr: 4.0e-04, train_loss: 0.1111, train_acc: 0.9638 test_loss: 0.6372, test_acc: 0.8360, best: 0.8472, time: 0:02:59
 Epoch: 261, lr: 4.0e-04, train_loss: 0.1005, train_acc: 0.9666 test_loss: 0.6047, test_acc: 0.8449, best: 0.8472, time: 0:02:59
 Epoch: 262, lr: 4.0e-04, train_loss: 0.1026, train_acc: 0.9648 test_loss: 0.5954, test_acc: 0.8436, best: 0.8472, time: 0:03:01
 Epoch: 263, lr: 4.0e-04, train_loss: 0.1156, train_acc: 0.9618 test_loss: 0.6100, test_acc: 0.8446, best: 0.8472, time: 0:02:59
 Epoch: 264, lr: 4.0e-04, train_loss: 0.1078, train_acc: 0.9666 test_loss: 0.6364, test_acc: 0.8407, best: 0.8472, time: 0:03:00
 Epoch: 265, lr: 4.0e-04, train_loss: 0.1075, train_acc: 0.9638 test_loss: 0.6213, test_acc: 0.8413, best: 0.8472, time: 0:02:59
 Epoch: 266, lr: 4.0e-04, train_loss: 0.1104, train_acc: 0.9640 test_loss: 0.5999, test_acc: 0.8475, best: 0.8475, time: 0:03:00
 Epoch: 267, lr: 4.0e-04, train_loss: 0.1029, train_acc: 0.9678 test_loss: 0.6556, test_acc: 0.8381, best: 0.8475, time: 0:03:00
 Epoch: 268, lr: 4.0e-04, train_loss: 0.0994, train_acc: 0.9672 test_loss: 0.6338, test_acc: 0.8424, best: 0.8475, time: 0:03:00
 Epoch: 269, lr: 4.0e-04, train_loss: 0.1133, train_acc: 0.9622 test_loss: 0.6045, test_acc: 0.8462, best: 0.8475, time: 0:03:00
 Epoch: 270, lr: 8.0e-05, train_loss: 0.1013, train_acc: 0.9680 test_loss: 0.6277, test_acc: 0.8452, best: 0.8475, time: 0:03:01
 Epoch: 271, lr: 8.0e-05, train_loss: 0.1085, train_acc: 0.9636 test_loss: 0.6052, test_acc: 0.8456, best: 0.8475, time: 0:03:00
 Epoch: 272, lr: 8.0e-05, train_loss: 0.1103, train_acc: 0.9616 test_loss: 0.6032, test_acc: 0.8460, best: 0.8475, time: 0:03:02
 Epoch: 273, lr: 8.0e-05, train_loss: 0.1075, train_acc: 0.9646 test_loss: 0.6159, test_acc: 0.8460, best: 0.8475, time: 0:03:00
 Epoch: 274, lr: 8.0e-05, train_loss: 0.1046, train_acc: 0.9648 test_loss: 0.5830, test_acc: 0.8504, best: 0.8504, time: 0:03:00
 Epoch: 275, lr: 8.0e-05, train_loss: 0.1154, train_acc: 0.9640 test_loss: 0.6025, test_acc: 0.8439, best: 0.8504, time: 0:03:00
 Epoch: 276, lr: 8.0e-05, train_loss: 0.1053, train_acc: 0.9670 test_loss: 0.6415, test_acc: 0.8421, best: 0.8504, time: 0:02:58
 Epoch: 277, lr: 8.0e-05, train_loss: 0.1076, train_acc: 0.9628 test_loss: 0.6885, test_acc: 0.8357, best: 0.8504, time: 0:02:58
 Epoch: 278, lr: 8.0e-05, train_loss: 0.1036, train_acc: 0.9660 test_loss: 0.6314, test_acc: 0.8409, best: 0.8504, time: 0:02:57
 Epoch: 279, lr: 8.0e-05, train_loss: 0.1108, train_acc: 0.9638 test_loss: 0.6062, test_acc: 0.8478, best: 0.8504, time: 0:02:58
 Epoch: 280, lr: 8.0e-05, train_loss: 0.1085, train_acc: 0.9624 test_loss: 0.6435, test_acc: 0.8429, best: 0.8504, time: 0:02:58
 Epoch: 281, lr: 8.0e-05, train_loss: 0.1222, train_acc: 0.9594 test_loss: 0.6102, test_acc: 0.8461, best: 0.8504, time: 0:02:59
 Epoch: 282, lr: 8.0e-05, train_loss: 0.1022, train_acc: 0.9654 test_loss: 0.6045, test_acc: 0.8456, best: 0.8504, time: 0:03:02
 Epoch: 283, lr: 8.0e-05, train_loss: 0.1107, train_acc: 0.9614 test_loss: 0.6137, test_acc: 0.8441, best: 0.8504, time: 0:02:57
 Epoch: 284, lr: 8.0e-05, train_loss: 0.1058, train_acc: 0.9648 test_loss: 0.5961, test_acc: 0.8456, best: 0.8504, time: 0:02:58
 Epoch: 285, lr: 8.0e-05, train_loss: 0.1038, train_acc: 0.9636 test_loss: 0.5925, test_acc: 0.8464, best: 0.8504, time: 0:02:58
 Epoch: 286, lr: 8.0e-05, train_loss: 0.1142, train_acc: 0.9654 test_loss: 0.5998, test_acc: 0.8439, best: 0.8504, time: 0:02:59
 Epoch: 287, lr: 8.0e-05, train_loss: 0.1094, train_acc: 0.9646 test_loss: 0.6284, test_acc: 0.8442, best: 0.8504, time: 0:02:58
 Epoch: 288, lr: 8.0e-05, train_loss: 0.0994, train_acc: 0.9660 test_loss: 0.6583, test_acc: 0.8413, best: 0.8504, time: 0:02:58
 Epoch: 289, lr: 8.0e-05, train_loss: 0.1068, train_acc: 0.9646 test_loss: 0.6177, test_acc: 0.8438, best: 0.8504, time: 0:02:58
 Epoch: 290, lr: 8.0e-05, train_loss: 0.1091, train_acc: 0.9644 test_loss: 0.6393, test_acc: 0.8405, best: 0.8504, time: 0:02:58
 Epoch: 291, lr: 8.0e-05, train_loss: 0.1011, train_acc: 0.9670 test_loss: 0.6509, test_acc: 0.8401, best: 0.8504, time: 0:02:57
 Epoch: 292, lr: 8.0e-05, train_loss: 0.1068, train_acc: 0.9672 test_loss: 0.5945, test_acc: 0.8471, best: 0.8504, time: 0:03:01
 Epoch: 293, lr: 8.0e-05, train_loss: 0.0999, train_acc: 0.9638 test_loss: 0.6024, test_acc: 0.8449, best: 0.8504, time: 0:02:58
 Epoch: 294, lr: 8.0e-05, train_loss: 0.0971, train_acc: 0.9682 test_loss: 0.6071, test_acc: 0.8444, best: 0.8504, time: 0:02:58
 Epoch: 295, lr: 8.0e-05, train_loss: 0.1038, train_acc: 0.9690 test_loss: 0.6224, test_acc: 0.8417, best: 0.8504, time: 0:02:57
 Epoch: 296, lr: 8.0e-05, train_loss: 0.1008, train_acc: 0.9676 test_loss: 0.6103, test_acc: 0.8452, best: 0.8504, time: 0:02:59
 Epoch: 297, lr: 8.0e-05, train_loss: 0.1090, train_acc: 0.9622 test_loss: 0.6424, test_acc: 0.8404, best: 0.8504, time: 0:02:59
 Epoch: 298, lr: 8.0e-05, train_loss: 0.1084, train_acc: 0.9628 test_loss: 0.6181, test_acc: 0.8431, best: 0.8504, time: 0:02:57
 Epoch: 299, lr: 8.0e-05, train_loss: 0.1205, train_acc: 0.9592 test_loss: 0.6148, test_acc: 0.8462, best: 0.8504, time: 0:02:58
 Highest accuracy: 0.8504