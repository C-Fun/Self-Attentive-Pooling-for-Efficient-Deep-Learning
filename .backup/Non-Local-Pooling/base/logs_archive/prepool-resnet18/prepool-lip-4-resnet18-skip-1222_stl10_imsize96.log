
 Run on time: 2022-06-30 11:31:13.682577

 Arguments:
	 gpu                  : True
	 log                  : True
	 seed                 : 0
	 momentum             : 0.9
	 amsgrad              : True
	 dataset              : STL10
	 batch_size           : 8
	 architecture         : PREPOOL_RESNET18_LIP_4
	 im_size              : None
	 relu_threshold       : 4.0
	 learning_rate        : 0.01
	 pretrained_backbone  : 
	 pretrained_ann       : 
	 weight_decay         : 0.0
	 test_only            : False
	 epochs               : 300
	 lr_interval          : [180, 240, 270]
	 lr_reduce            : 5
	 optimizer            : SGD
	 dropout              : 0.2
	 kernel_size          : 3
	 dont_save            : False
	 visualize            : False
	 devices              : 0
 DataParallel(
  (module): NetworkByName(
    (net): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): Pool2d(
        (logit): Sequential(
          (pool_weight): LIP_BASE(
            (logit): Sequential(
              (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Sigmoid()
            )
          )
        )
        (pool): AvgPool2d(kernel_size=4, stride=4, padding=0)
      )
      (layer1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer3): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer4): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=512, out_features=10, bias=True)
    )
  )
)
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0
)
 Epoch: 1, lr: 1.0e-02, train_loss: 2.3439, train_acc: 0.1894 test_loss: 1.8960, test_acc: 0.2622, best: 0.2622, time: 0:00:42
 Epoch: 2, lr: 1.0e-02, train_loss: 2.0015, train_acc: 0.2334 test_loss: 1.7588, test_acc: 0.3420, best: 0.3420, time: 0:00:42
 Epoch: 3, lr: 1.0e-02, train_loss: 1.8963, train_acc: 0.2704 test_loss: 1.8576, test_acc: 0.3069, best: 0.3420, time: 0:00:42
 Epoch: 4, lr: 1.0e-02, train_loss: 1.8556, train_acc: 0.2954 test_loss: 1.5924, test_acc: 0.3769, best: 0.3769, time: 0:00:42
 Epoch: 5, lr: 1.0e-02, train_loss: 1.8102, train_acc: 0.3152 test_loss: 1.5414, test_acc: 0.4068, best: 0.4068, time: 0:00:42
 Epoch: 6, lr: 1.0e-02, train_loss: 1.7699, train_acc: 0.3208 test_loss: 1.6623, test_acc: 0.3743, best: 0.4068, time: 0:00:42
 Epoch: 7, lr: 1.0e-02, train_loss: 1.7257, train_acc: 0.3516 test_loss: 1.5031, test_acc: 0.4216, best: 0.4216, time: 0:00:42
 Epoch: 8, lr: 1.0e-02, train_loss: 1.7025, train_acc: 0.3722 test_loss: 1.4668, test_acc: 0.4426, best: 0.4426, time: 0:00:42
 Epoch: 9, lr: 1.0e-02, train_loss: 1.6324, train_acc: 0.4018 test_loss: 1.3964, test_acc: 0.4645, best: 0.4645, time: 0:00:42
 Epoch: 10, lr: 1.0e-02, train_loss: 1.6086, train_acc: 0.4062 test_loss: 1.3733, test_acc: 0.4769, best: 0.4769, time: 0:00:42
 Epoch: 11, lr: 1.0e-02, train_loss: 1.5706, train_acc: 0.4192 test_loss: 1.5474, test_acc: 0.4389, best: 0.4769, time: 0:00:42
 Epoch: 12, lr: 1.0e-02, train_loss: 1.5354, train_acc: 0.4228 test_loss: 1.3402, test_acc: 0.4988, best: 0.4988, time: 0:00:42
 Epoch: 13, lr: 1.0e-02, train_loss: 1.5125, train_acc: 0.4406 test_loss: 1.2931, test_acc: 0.5261, best: 0.5261, time: 0:00:42
 Epoch: 14, lr: 1.0e-02, train_loss: 1.4918, train_acc: 0.4526 test_loss: 1.2842, test_acc: 0.5226, best: 0.5261, time: 0:00:42
 Epoch: 15, lr: 1.0e-02, train_loss: 1.4615, train_acc: 0.4612 test_loss: 1.3526, test_acc: 0.5006, best: 0.5261, time: 0:00:43
 Epoch: 16, lr: 1.0e-02, train_loss: 1.4294, train_acc: 0.4738 test_loss: 1.2661, test_acc: 0.5390, best: 0.5390, time: 0:00:43
 Epoch: 17, lr: 1.0e-02, train_loss: 1.3991, train_acc: 0.4792 test_loss: 1.1987, test_acc: 0.5567, best: 0.5567, time: 0:00:43                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               , best: 0.7475, time: 0:05:33
 Epoch: 144, lr: 1.0e-02, train_loss: 0.4927, train_acc: 0.8274 test_loss: 0.9410, test_acc: 0.7450, best: 0.7475, time: 0:05:53
 Epoch: 145, lr: 1.0e-02, train_loss: 0.4587, train_acc: 0.8432 test_loss: 0.9378, test_acc: 0.7438, best: 0.7475, time: 0:05:39
 Epoch: 146, lr: 1.0e-02, train_loss: 0.4551, train_acc: 0.8420 test_loss: 0.9627, test_acc: 0.7455, best: 0.7475, time: 0:05:46
 Epoch: 147, lr: 1.0e-02, train_loss: 0.4643, train_acc: 0.8396 test_loss: 0.9582, test_acc: 0.7346, best: 0.7475, time: 0:05:38
 Epoch: 148, lr: 1.0e-02, train_loss: 0.4659, train_acc: 0.8342 test_loss: 0.9906, test_acc: 0.7448, best: 0.7475, time: 0:05:48
 Epoch: 149, lr: 1.0e-02, train_loss: 0.4363, train_acc: 0.8454 test_loss: 1.0395, test_acc: 0.7264, best: 0.7475, time: 0:05:28
 Epoch: 150, lr: 1.0e-02, train_loss: 0.4409, train_acc: 0.8484 test_loss: 0.9592, test_acc: 0.7391, best: 0.7475, time: 0:05:58
 Epoch: 151, lr: 1.0e-02, train_loss: 0.4536, train_acc: 0.8414 test_loss: 0.9378, test_acc: 0.7492, best: 0.7492, time: 0:05:46
 Epoch: 152, lr: 1.0e-02, train_loss: 0.4603, train_acc: 0.8382 test_loss: 0.9263, test_acc: 0.7398, best: 0.7492, time: 0:05:24
 Epoch: 153, lr: 1.0e-02, train_loss: 0.4434, train_acc: 0.8432 test_loss: 1.0486, test_acc: 0.7254, best: 0.7492, time: 0:05:25
 Epoch: 154, lr: 1.0e-02, train_loss: 0.4562, train_acc: 0.8402 test_loss: 1.0392, test_acc: 0.7310, best: 0.7492, time: 0:05:26
 Epoch: 155, lr: 1.0e-02, train_loss: 0.4409, train_acc: 0.8514 test_loss: 0.9688, test_acc: 0.7436, best: 0.7492, time: 0:05:24
 Epoch: 156, lr: 1.0e-02, train_loss: 0.4340, train_acc: 0.8438 test_loss: 0.9834, test_acc: 0.7360, best: 0.7492, time: 0:05:21
 Epoch: 157, lr: 1.0e-02, train_loss: 0.4359, train_acc: 0.8500 test_loss: 1.0338, test_acc: 0.7390, best: 0.7492, time: 0:05:22
 Epoch: 158, lr: 1.0e-02, train_loss: 0.4467, train_acc: 0.8488 test_loss: 0.9782, test_acc: 0.7384, best: 0.7492, time: 0:05:21
 Epoch: 159, lr: 1.0e-02, train_loss: 0.4353, train_acc: 0.8516 test_loss: 1.1264, test_acc: 0.7278, best: 0.7492, time: 0:05:22
 Epoch: 160, lr: 1.0e-02, train_loss: 0.4360, train_acc: 0.8436 test_loss: 0.9298, test_acc: 0.7488, best: 0.7492, time: 0:05:22
 Epoch: 161, lr: 1.0e-02, train_loss: 0.4112, train_acc: 0.8514 test_loss: 1.0268, test_acc: 0.7350, best: 0.7492, time: 0:05:23
 Epoch: 162, lr: 1.0e-02, train_loss: 0.4291, train_acc: 0.8508 test_loss: 0.9430, test_acc: 0.7402, best: 0.7492, time: 0:05:55
 Epoch: 163, lr: 1.0e-02, train_loss: 0.4337, train_acc: 0.8560 test_loss: 1.0084, test_acc: 0.7256, best: 0.7492, time: 0:05:53
 Epoch: 164, lr: 1.0e-02, train_loss: 0.4302, train_acc: 0.8540 test_loss: 0.9581, test_acc: 0.7509, best: 0.7509, time: 0:05:25
 Epoch: 165, lr: 1.0e-02, train_loss: 0.4397, train_acc: 0.8500 test_loss: 1.0556, test_acc: 0.7370, best: 0.7509, time: 0:05:27
 Epoch: 166, lr: 1.0e-02, train_loss: 0.4196, train_acc: 0.8540 test_loss: 0.9050, test_acc: 0.7561, best: 0.7561, time: 0:05:23
 Epoch: 167, lr: 1.0e-02, train_loss: 0.4133, train_acc: 0.8570 test_loss: 1.0055, test_acc: 0.7424, best: 0.7561, time: 0:05:20
 Epoch: 168, lr: 1.0e-02, train_loss: 0.4104, train_acc: 0.8610 test_loss: 1.0794, test_acc: 0.7412, best: 0.7561, time: 0:05:21
 Epoch: 169, lr: 1.0e-02, train_loss: 0.4059, train_acc: 0.8644 test_loss: 1.0349, test_acc: 0.7379, best: 0.7561, time: 0:05:23
 Epoch: 170, lr: 1.0e-02, train_loss: 0.4318, train_acc: 0.8498 test_loss: 0.9283, test_acc: 0.7530, best: 0.7561, time: 0:05:21
 Epoch: 171, lr: 1.0e-02, train_loss: 0.4111, train_acc: 0.8590 test_loss: 0.9918, test_acc: 0.7476, best: 0.7561, time: 0:05:26
 Epoch: 172, lr: 1.0e-02, train_loss: 0.4167, train_acc: 0.8556 test_loss: 0.9476, test_acc: 0.7545, best: 0.7561, time: 0:05:21
 Epoch: 173, lr: 1.0e-02, train_loss: 0.4160, train_acc: 0.8586 test_loss: 0.9569, test_acc: 0.7404, best: 0.7561, time: 0:05:22
 Epoch: 174, lr: 1.0e-02, train_loss: 0.4009, train_acc: 0.8596 test_loss: 1.0432, test_acc: 0.7362, best: 0.7561, time: 0:05:21
 Epoch: 175, lr: 1.0e-02, train_loss: 0.4110, train_acc: 0.8560 test_loss: 0.9427, test_acc: 0.7561, best: 0.7561, time: 0:05:21
 Epoch: 176, lr: 1.0e-02, train_loss: 0.3857, train_acc: 0.8686 test_loss: 0.9660, test_acc: 0.7454, best: 0.7561, time: 0:05:25
 Epoch: 177, lr: 1.0e-02, train_loss: 0.3999, train_acc: 0.8604 test_loss: 0.9641, test_acc: 0.7379, best: 0.7561, time: 0:05:23
 Epoch: 178, lr: 1.0e-02, train_loss: 0.3936, train_acc: 0.8644 test_loss: 1.0168, test_acc: 0.7436, best: 0.7561, time: 0:05:57
 Epoch: 179, lr: 1.0e-02, train_loss: 0.3821, train_acc: 0.8710 test_loss: 1.0045, test_acc: 0.7325, best: 0.7561, time: 0:05:31
 Epoch: 180, lr: 2.0e-03, train_loss: 0.3722, train_acc: 0.8740 test_loss: 0.9568, test_acc: 0.7576, best: 0.7576, time: 0:05:24
 Epoch: 181, lr: 2.0e-03, train_loss: 0.3259, train_acc: 0.8830 test_loss: 0.9197, test_acc: 0.7636, best: 0.7636, time: 0:05:23
 Epoch: 182, lr: 2.0e-03, train_loss: 0.3221, train_acc: 0.8912 test_loss: 0.9700, test_acc: 0.7599, best: 0.7636, time: 0:05:25
 Epoch: 183, lr: 2.0e-03, train_loss: 0.2977, train_acc: 0.9018 test_loss: 0.9760, test_acc: 0.7574, best: 0.7636, time: 0:05:19
 Epoch: 184, lr: 2.0e-03, train_loss: 0.2934, train_acc: 0.8984 test_loss: 0.9696, test_acc: 0.7565, best: 0.7636, time: 0:05:20
 Epoch: 185, lr: 2.0e-03, train_loss: 0.3002, train_acc: 0.8940 test_loss: 0.9716, test_acc: 0.7631, best: 0.7636, time: 0:05:22
 Epoch: 186, lr: 2.0e-03, train_loss: 0.3038, train_acc: 0.8976 test_loss: 0.9312, test_acc: 0.7668, best: 0.7668, time: 0:05:21
 Epoch: 187, lr: 2.0e-03, train_loss: 0.3081, train_acc: 0.8952 test_loss: 0.9815, test_acc: 0.7615, best: 0.7668, time: 0:05:27
 Epoch: 188, lr: 2.0e-03, train_loss: 0.2836, train_acc: 0.9046 test_loss: 0.9876, test_acc: 0.7618, best: 0.7668, time: 0:05:19
 Epoch: 189, lr: 2.0e-03, train_loss: 0.3038, train_acc: 0.8960 test_loss: 0.9290, test_acc: 0.7645, best: 0.7668, time: 0:05:19
 Epoch: 190, lr: 2.0e-03, train_loss: 0.2812, train_acc: 0.9030 test_loss: 0.9912, test_acc: 0.7552, best: 0.7668, time: 0:05:19
 Epoch: 191, lr: 2.0e-03, train_loss: 0.2629, train_acc: 0.9068 test_loss: 0.9718, test_acc: 0.7658, best: 0.7668, time: 0:05:20
 Epoch: 192, lr: 2.0e-03, train_loss: 0.2814, train_acc: 0.9048 test_loss: 0.9725, test_acc: 0.7689, best: 0.7689, time: 0:05:20
 Epoch: 193, lr: 2.0e-03, train_loss: 0.2683, train_acc: 0.9036 test_loss: 0.9978, test_acc: 0.7618, best: 0.7689, time: 0:05:23
 Epoch: 194, lr: 2.0e-03, train_loss: 0.3099, train_acc: 0.8916 test_loss: 0.9564, test_acc: 0.7645, best: 0.7689, time: 0:05:26
 Epoch: 195, lr: 2.0e-03, train_loss: 0.2844, train_acc: 0.9024 test_loss: 0.9849, test_acc: 0.7620, best: 0.7689, time: 0:05:17
 Epoch: 196, lr: 2.0e-03, train_loss: 0.2855, train_acc: 0.8986 test_loss: 0.9760, test_acc: 0.7636, best: 0.7689, time: 0:05:23
 Epoch: 197, lr: 2.0e-03, train_loss: 0.2564, train_acc: 0.9106 test_loss: 0.9666, test_acc: 0.7676, best: 0.7689, time: 0:05:19
 Epoch: 198, lr: 2.0e-03, train_loss: 0.2903, train_acc: 0.9048 test_loss: 0.9783, test_acc: 0.7628, best: 0.7689, time: 0:05:24
 Epoch: 199, lr: 2.0e-03, train_loss: 0.2746, train_acc: 0.9046 test_loss: 0.9980, test_acc: 0.7595, best: 0.7689, time: 0:05:26
 Epoch: 200, lr: 2.0e-03, train_loss: 0.2668, train_acc: 0.9128 test_loss: 0.9917, test_acc: 0.7649, best: 0.7689, time: 0:05:21
 Epoch: 201, lr: 2.0e-03, train_loss: 0.2616, train_acc: 0.9132 test_loss: 1.0076, test_acc: 0.7608, best: 0.7689, time: 0:05:22
 Epoch: 202, lr: 2.0e-03, train_loss: 0.2655, train_acc: 0.9096 test_loss: 0.9725, test_acc: 0.7649, best: 0.7689, time: 0:05:32
 Epoch: 203, lr: 2.0e-03, train_loss: 0.2764, train_acc: 0.9052 test_loss: 1.0338, test_acc: 0.7582, best: 0.7689, time: 0:05:49
 Epoch: 204, lr: 2.0e-03, train_loss: 0.2761, train_acc: 0.9056 test_loss: 0.9883, test_acc: 0.7681, best: 0.7689, time: 0:05:38
 Epoch: 205, lr: 2.0e-03, train_loss: 0.2757, train_acc: 0.9028 test_loss: 1.0240, test_acc: 0.7611, best: 0.7689, time: 0:05:30
 Epoch: 206, lr: 2.0e-03, train_loss: 0.2563, train_acc: 0.9168 test_loss: 0.9660, test_acc: 0.7624, best: 0.7689, time: 0:05:24
 Epoch: 207, lr: 2.0e-03, train_loss: 0.2601, train_acc: 0.9122 test_loss: 1.0442, test_acc: 0.7575, best: 0.7689, time: 0:05:26
 Epoch: 208, lr: 2.0e-03, train_loss: 0.2690, train_acc: 0.9088 test_loss: 1.0204, test_acc: 0.7585, best: 0.7689, time: 0:05:59
 Epoch: 209, lr: 2.0e-03, train_loss: 0.2686, train_acc: 0.9044 test_loss: 0.9896, test_acc: 0.7602, best: 0.7689, time: 0:05:38
 Epoch: 210, lr: 2.0e-03, train_loss: 0.2652, train_acc: 0.9074 test_loss: 1.0461, test_acc: 0.7586, best: 0.7689, time: 0:05:29
 Epoch: 211, lr: 2.0e-03, train_loss: 0.2691, train_acc: 0.9100 test_loss: 0.9972, test_acc: 0.7621, best: 0.7689, time: 0:05:22
 Epoch: 212, lr: 2.0e-03, train_loss: 0.2631, train_acc: 0.9132 test_loss: 0.9632, test_acc: 0.7622, best: 0.7689, time: 0:05:18
 Epoch: 213, lr: 2.0e-03, train_loss: 0.2553, train_acc: 0.9186 test_loss: 1.0167, test_acc: 0.7586, best: 0.7689, time: 0:05:22
 Epoch: 214, lr: 2.0e-03, train_loss: 0.2577, train_acc: 0.9132 test_loss: 1.0323, test_acc: 0.7574, best: 0.7689, time: 0:06:10
 Epoch: 215, lr: 2.0e-03, train_loss: 0.2644, train_acc: 0.9106 test_loss: 0.9990, test_acc: 0.7598, best: 0.7689, time: 0:05:41
 Epoch: 216, lr: 2.0e-03, train_loss: 0.2555, train_acc: 0.9116 test_loss: 1.0038, test_acc: 0.7599, best: 0.7689, time: 0:05:46
 Epoch: 217, lr: 2.0e-03, train_loss: 0.2511, train_acc: 0.9166 test_loss: 0.9567, test_acc: 0.7629, best: 0.7689, time: 0:05:32
 Epoch: 218, lr: 2.0e-03, train_loss: 0.2717, train_acc: 0.9086 test_loss: 1.0041, test_acc: 0.7648, best: 0.7689, time: 0:05:34
 Epoch: 219, lr: 2.0e-03, train_loss: 0.2524, train_acc: 0.9134 test_loss: 1.0033, test_acc: 0.7665, best: 0.7689, time: 0:05:36
 Epoch: 220, lr: 2.0e-03, train_loss: 0.2632, train_acc: 0.9114 test_loss: 0.9748, test_acc: 0.7632, best: 0.7689, time: 0:05:28
 Epoch: 221, lr: 2.0e-03, train_loss: 0.2664, train_acc: 0.9094 test_loss: 1.0608, test_acc: 0.7611, best: 0.7689, time: 0:05:46
 Epoch: 222, lr: 2.0e-03, train_loss: 0.2414, train_acc: 0.9186 test_loss: 1.0176, test_acc: 0.7630, best: 0.7689, time: 0:05:22
 Epoch: 223, lr: 2.0e-03, train_loss: 0.2777, train_acc: 0.9050 test_loss: 1.0120, test_acc: 0.7675, best: 0.7689, time: 0:05:24
 Epoch: 224, lr: 2.0e-03, train_loss: 0.2657, train_acc: 0.9168 test_loss: 0.9563, test_acc: 0.7715, best: 0.7715, time: 0:05:20
 Epoch: 225, lr: 2.0e-03, train_loss: 0.2481, train_acc: 0.9138 test_loss: 1.0128, test_acc: 0.7631, best: 0.7715, time: 0:05:25
 Epoch: 226, lr: 2.0e-03, train_loss: 0.2574, train_acc: 0.9140 test_loss: 0.9809, test_acc: 0.7666, best: 0.7715, time: 0:07:15
 Epoch: 227, lr: 2.0e-03, train_loss: 0.2490, train_acc: 0.9138 test_loss: 0.9719, test_acc: 0.7722, best: 0.7722, time: 0:06:35
 Epoch: 228, lr: 2.0e-03, train_loss: 0.2488, train_acc: 0.9164 test_loss: 0.9957, test_acc: 0.7671, best: 0.7722, time: 0:06:15
 Epoch: 229, lr: 2.0e-03, train_loss: 0.2428, train_acc: 0.9192 test_loss: 0.9658, test_acc: 0.7690, best: 0.7722, time: 0:05:51
 Epoch: 230, lr: 2.0e-03, train_loss: 0.2717, train_acc: 0.9060 test_loss: 0.9900, test_acc: 0.7619, best: 0.7722, time: 0:05:22
 Epoch: 231, lr: 2.0e-03, train_loss: 0.2538, train_acc: 0.9124 test_loss: 0.9720, test_acc: 0.7660, best: 0.7722, time: 0:05:15
 Epoch: 232, lr: 2.0e-03, train_loss: 0.2372, train_acc: 0.9176 test_loss: 0.9722, test_acc: 0.7664, best: 0.7722, time: 0:05:13
 Epoch: 233, lr: 2.0e-03, train_loss: 0.2426, train_acc: 0.9150 test_loss: 0.9800, test_acc: 0.7665, best: 0.7722, time: 0:05:15
 Epoch: 234, lr: 2.0e-03, train_loss: 0.2425, train_acc: 0.9184 test_loss: 0.9832, test_acc: 0.7714, best: 0.7722, time: 0:05:36
 Epoch: 235, lr: 2.0e-03, train_loss: 0.2471, train_acc: 0.9144 test_loss: 0.9829, test_acc: 0.7680, best: 0.7722, time: 0:05:25
 Epoch: 236, lr: 2.0e-03, train_loss: 0.2527, train_acc: 0.9126 test_loss: 0.9932, test_acc: 0.7656, best: 0.7722, time: 0:05:24
 Epoch: 237, lr: 2.0e-03, train_loss: 0.2338, train_acc: 0.9194 test_loss: 1.0169, test_acc: 0.7620, best: 0.7722, time: 0:05:17
 Epoch: 238, lr: 2.0e-03, train_loss: 0.2374, train_acc: 0.9172 test_loss: 0.9652, test_acc: 0.7688, best: 0.7722, time: 0:05:17
 Epoch: 239, lr: 2.0e-03, train_loss: 0.2461, train_acc: 0.9142 test_loss: 1.0071, test_acc: 0.7624, best: 0.7722, time: 0:05:17
 Epoch: 240, lr: 4.0e-04, train_loss: 0.2429, train_acc: 0.9212 test_loss: 1.0179, test_acc: 0.7570, best: 0.7722, time: 0:05:20
 Epoch: 241, lr: 4.0e-04, train_loss: 0.2253, train_acc: 0.9198 test_loss: 0.9836, test_acc: 0.7624, best: 0.7722, time: 0:05:15
 Epoch: 242, lr: 4.0e-04, train_loss: 0.2388, train_acc: 0.9204 test_loss: 0.9735, test_acc: 0.7635, best: 0.7722, time: 0:05:20
 Epoch: 243, lr: 4.0e-04, train_loss: 0.2343, train_acc: 0.9242 test_loss: 0.9832, test_acc: 0.7665, best: 0.7722, time: 0:05:16
 Epoch: 244, lr: 4.0e-04, train_loss: 0.2144, train_acc: 0.9268 test_loss: 0.9709, test_acc: 0.7680, best: 0.7722, time: 0:05:17
 Epoch: 245, lr: 4.0e-04, train_loss: 0.2155, train_acc: 0.9236 test_loss: 0.9783, test_acc: 0.7659, best: 0.7722, time: 0:05:15
 Epoch: 246, lr: 4.0e-04, train_loss: 0.2373, train_acc: 0.9220 test_loss: 0.9979, test_acc: 0.7635, best: 0.7722, time: 0:05:16
 Epoch: 247, lr: 4.0e-04, train_loss: 0.2369, train_acc: 0.9210 test_loss: 1.0003, test_acc: 0.7646, best: 0.7722, time: 0:05:19
 Epoch: 248, lr: 4.0e-04, train_loss: 0.2166, train_acc: 0.9238 test_loss: 0.9923, test_acc: 0.7669, best: 0.7722, time: 0:05:16
 Epoch: 249, lr: 4.0e-04, train_loss: 0.2377, train_acc: 0.9190 test_loss: 1.0017, test_acc: 0.7644, best: 0.7722, time: 0:05:15
 Epoch: 250, lr: 4.0e-04, train_loss: 0.2128, train_acc: 0.9262 test_loss: 1.0036, test_acc: 0.7639, best: 0.7722, time: 0:05:39
 Epoch: 251, lr: 4.0e-04, train_loss: 0.2346, train_acc: 0.9238 test_loss: 1.0218, test_acc: 0.7629, best: 0.7722, time: 0:07:45
 Epoch: 252, lr: 4.0e-04, train_loss: 0.2269, train_acc: 0.9226 test_loss: 0.9888, test_acc: 0.7661, best: 0.7722, time: 0:07:31
 Epoch: 253, lr: 4.0e-04, train_loss: 0.2177, train_acc: 0.9252 test_loss: 0.9624, test_acc: 0.7682, best: 0.7722, time: 0:05:55
 Epoch: 254, lr: 4.0e-04, train_loss: 0.2294, train_acc: 0.9208 test_loss: 0.9731, test_acc: 0.7669, best: 0.7722, time: 0:05:22
 Epoch: 255, lr: 4.0e-04, train_loss: 0.2326, train_acc: 0.9232 test_loss: 0.9564, test_acc: 0.7718, best: 0.7722, time: 0:05:26
 Epoch: 256, lr: 4.0e-04, train_loss: 0.2261, train_acc: 0.9246 test_loss: 0.9687, test_acc: 0.7664, best: 0.7722, time: 0:05:39
 Epoch: 257, lr: 4.0e-04, train_loss: 0.2342, train_acc: 0.9210 test_loss: 0.9570, test_acc: 0.7682, best: 0.7722, time: 0:05:21
 Epoch: 258, lr: 4.0e-04, train_loss: 0.2275, train_acc: 0.9222 test_loss: 0.9758, test_acc: 0.7684, best: 0.7722, time: 0:05:27
 Epoch: 259, lr: 4.0e-04, train_loss: 0.2325, train_acc: 0.9196 test_loss: 0.9582, test_acc: 0.7686, best: 0.7722, time: 0:05:26
 Epoch: 260, lr: 4.0e-04, train_loss: 0.2350, train_acc: 0.9176 test_loss: 0.9796, test_acc: 0.7616, best: 0.7722, time: 0:05:22
 Epoch: 261, lr: 4.0e-04, train_loss: 0.2212, train_acc: 0.9242 test_loss: 0.9647, test_acc: 0.7706, best: 0.7722, time: 0:05:19
 Epoch: 262, lr: 4.0e-04, train_loss: 0.2353, train_acc: 0.9196 test_loss: 0.9879, test_acc: 0.7666, best: 0.7722, time: 0:05:19
 Epoch: 263, lr: 4.0e-04, train_loss: 0.2247, train_acc: 0.9250 test_loss: 0.9697, test_acc: 0.7668, best: 0.7722, time: 0:05:23
 Epoch: 264, lr: 4.0e-04, train_loss: 0.2360, train_acc: 0.9200 test_loss: 0.9797, test_acc: 0.7674, best: 0.7722, time: 0:05:21
 Epoch: 265, lr: 4.0e-04, train_loss: 0.2221, train_acc: 0.9252 test_loss: 0.9526, test_acc: 0.7666, best: 0.7722, time: 0:05:19
 Epoch: 266, lr: 4.0e-04, train_loss: 0.2204, train_acc: 0.9288 test_loss: 0.9973, test_acc: 0.7620, best: 0.7722, time: 0:05:19
 Epoch: 267, lr: 4.0e-04, train_loss: 0.2267, train_acc: 0.9262 test_loss: 0.9786, test_acc: 0.7661, best: 0.7722, time: 0:05:19
 Epoch: 268, lr: 4.0e-04, train_loss: 0.2289, train_acc: 0.9220 test_loss: 0.9492, test_acc: 0.7716, best: 0.7722, time: 0:05:18
 Epoch: 269, lr: 4.0e-04, train_loss: 0.2314, train_acc: 0.9216 test_loss: 0.9893, test_acc: 0.7695, best: 0.7722, time: 0:05:25
 Epoch: 270, lr: 8.0e-05, train_loss: 0.2241, train_acc: 0.9252 test_loss: 0.9744, test_acc: 0.7681, best: 0.7722, time: 0:05:18
 Epoch: 271, lr: 8.0e-05, train_loss: 0.2137, train_acc: 0.9298 test_loss: 0.9591, test_acc: 0.7681, best: 0.7722, time: 0:05:19
 Epoch: 272, lr: 8.0e-05, train_loss: 0.2256, train_acc: 0.9222 test_loss: 0.9864, test_acc: 0.7665, best: 0.7722, time: 0:05:20
 Epoch: 273, lr: 8.0e-05, train_loss: 0.2424, train_acc: 0.9184 test_loss: 0.9779, test_acc: 0.7659, best: 0.7722, time: 0:05:19
 Epoch: 274, lr: 8.0e-05, train_loss: 0.2155, train_acc: 0.9238 test_loss: 0.9652, test_acc: 0.7698, best: 0.7722, time: 0:05:17
 Epoch: 275, lr: 8.0e-05, train_loss: 0.2256, train_acc: 0.9224 test_loss: 0.9725, test_acc: 0.7678, best: 0.7722, time: 0:05:26
 Epoch: 276, lr: 8.0e-05, train_loss: 0.2197, train_acc: 0.9270 test_loss: 0.9862, test_acc: 0.7642, best: 0.7722, time: 0:05:17
 Epoch: 277, lr: 8.0e-05, train_loss: 0.2208, train_acc: 0.9282 test_loss: 0.9840, test_acc: 0.7684, best: 0.7722, time: 0:05:17
 Epoch: 278, lr: 8.0e-05, train_loss: 0.2191, train_acc: 0.9222 test_loss: 0.9646, test_acc: 0.7690, best: 0.7722, time: 0:05:18
 Epoch: 279, lr: 8.0e-05, train_loss: 0.2335, train_acc: 0.9214 test_loss: 0.9930, test_acc: 0.7641, best: 0.7722, time: 0:05:19
 Epoch: 280, lr: 8.0e-05, train_loss: 0.2315, train_acc: 0.9266 test_loss: 0.9677, test_acc: 0.7690, best: 0.7722, time: 0:05:24
 Epoch: 281, lr: 8.0e-05, train_loss: 0.2168, train_acc: 0.9260 test_loss: 0.9722, test_acc: 0.7679, best: 0.7722, time: 0:05:23
 Epoch: 282, lr: 8.0e-05, train_loss: 0.2221, train_acc: 0.9230 test_loss: 0.9901, test_acc: 0.7650, best: 0.7722, time: 0:05:21
 Epoch: 283, lr: 8.0e-05, train_loss: 0.2168, train_acc: 0.9230 test_loss: 0.9832, test_acc: 0.7678, best: 0.7722, time: 0:05:22
 Epoch: 284, lr: 8.0e-05, train_loss: 0.2219, train_acc: 0.9232 test_loss: 0.9513, test_acc: 0.7672, best: 0.7722, time: 0:05:16
 Epoch: 285, lr: 8.0e-05, train_loss: 0.2223, train_acc: 0.9260 test_loss: 0.9564, test_acc: 0.7651, best: 0.7722, time: 0:05:15
 Epoch: 286, lr: 8.0e-05, train_loss: 0.2148, train_acc: 0.9238 test_loss: 0.9677, test_acc: 0.7680, best: 0.7722, time: 0:05:20
 Epoch: 287, lr: 8.0e-05, train_loss: 0.2209, train_acc: 0.9214 test_loss: 0.9696, test_acc: 0.7642, best: 0.7722, time: 0:05:14
 Epoch: 288, lr: 8.0e-05, train_loss: 0.2360, train_acc: 0.9200 test_loss: 0.9808, test_acc: 0.7648, best: 0.7722, time: 0:05:16
 Epoch: 289, lr: 8.0e-05, train_loss: 0.2269, train_acc: 0.9234 test_loss: 0.9648, test_acc: 0.7679, best: 0.7722, time: 0:05:15
 Epoch: 290, lr: 8.0e-05, train_loss: 0.2189, train_acc: 0.9296 test_loss: 0.9923, test_acc: 0.7672, best: 0.7722, time: 0:05:17
 Epoch: 291, lr: 8.0e-05, train_loss: 0.2334, train_acc: 0.9188 test_loss: 0.9594, test_acc: 0.7671, best: 0.7722, time: 0:05:15
 Epoch: 292, lr: 8.0e-05, train_loss: 0.1906, train_acc: 0.9374 test_loss: 0.9750, test_acc: 0.7682, best: 0.7722, time: 0:05:21
 Epoch: 293, lr: 8.0e-05, train_loss: 0.2257, train_acc: 0.9214 test_loss: 0.9683, test_acc: 0.7686, best: 0.7722, time: 0:05:15
 Epoch: 294, lr: 8.0e-05, train_loss: 0.2200, train_acc: 0.9256 test_loss: 0.9808, test_acc: 0.7679, best: 0.7722, time: 0:05:18
 Epoch: 295, lr: 8.0e-05, train_loss: 0.2293, train_acc: 0.9204 test_loss: 0.9614, test_acc: 0.7660, best: 0.7722, time: 0:05:15
 Epoch: 296, lr: 8.0e-05, train_loss: 0.2287, train_acc: 0.9218 test_loss: 0.9883, test_acc: 0.7656, best: 0.7722, time: 0:05:17
 Epoch: 297, lr: 8.0e-05, train_loss: 0.2320, train_acc: 0.9194 test_loss: 0.9710, test_acc: 0.7659, best: 0.7722, time: 0:05:20
 Epoch: 298, lr: 8.0e-05, train_loss: 0.2230, train_acc: 0.9214 test_loss: 0.9765, test_acc: 0.7674, best: 0.7722, time: 0:05:17
 Epoch: 299, lr: 8.0e-05, train_loss: 0.2295, train_acc: 0.9198 test_loss: 0.9695, test_acc: 0.7680, best: 0.7722, time: 0:05:16
 Highest accuracy: 0.7722