
 Run on time: 2022-07-01 13:37:49.758997

 Architecture: prepool-nlp_headfix2-6-resnet18-nlp_headfix2-1222

 Pool Config: {
    "arch": "resnet18",
    "conv1": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 1,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "pool": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 6,
            "_psize": 2,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    },
    "layer1": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 1,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": 2,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "layer2": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    },
    "layer3": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    },
    "layer4": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    }
}

 Arguments:
	 gpu                  : True
	 log                  : True
	 seed                 : 0
	 momentum             : 0.9
	 amsgrad              : True
	 dataset              : STL10
	 batch_size           : 8
	 architecture         : PREPOOL-NLP_HEADFIX2-6-RESNET18-NLP_HEADFIX2-1222
	 im_size              : None
	 relu_threshold       : 4.0
	 learning_rate        : 0.01
	 pretrained_backbone  : 
	 pretrained_ann       : 
	 weight_decay         : 0.0
	 test_only            : False
	 epochs               : 300
	 lr_interval          : [180, 240, 270]
	 lr_reduce            : 5
	 optimizer            : SGD
	 dropout              : 0.2
	 kernel_size          : 3
	 dont_save            : False
	 visualize            : False
	 devices              : 0
 DataParallel(
  (module): Network(
    (net): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): Pool2d(
        (logit): Sequential(
          (pool_weight): NLP_BASE(
            (downsample): Sequential(
              (0): Conv2d(64, 64, kernel_size=(2, 2), stride=(2, 2))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (multihead_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
            )
            (restore): Sequential(
              (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Sigmoid()
            )
            (pos_embed): PositionEmbeddingLearned(
              (row_embed): Embedding(256, 32)
              (col_embed): Embedding(256, 32)
            )
          )
        )
        (pool): AvgPool2d(kernel_size=6, stride=6, padding=0)
      )
      (layer1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
              (pos_embed): PositionEmbeddingLearned(
                (row_embed): Embedding(256, 64)
                (col_embed): Embedding(256, 64)
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer3): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
              (pos_embed): PositionEmbeddingLearned(
                (row_embed): Embedding(256, 128)
                (col_embed): Embedding(256, 128)
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer4): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
              (pos_embed): PositionEmbeddingLearned(
                (row_embed): Embedding(256, 256)
                (col_embed): Embedding(256, 256)
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=512, out_features=10, bias=True)
    )
  )
)
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0
)
 Epoch: 1, lr: 1.0e-02, train_loss: 2.3265, train_acc: 0.1934 test_loss: 1.9156, test_acc: 0.2440, best: 0.2440, time: 0:01:12
 Epoch: 2, lr: 1.0e-02, train_loss: 1.9759, train_acc: 0.2480 test_loss: 1.7422, test_acc: 0.3194, best: 0.3194, time: 0:01:10
 Epoch: 3, lr: 1.0e-02, train_loss: 1.8754, train_acc: 0.2890 test_loss: 1.6597, test_acc: 0.3734, best: 0.3734, time: 0:01:10
 Epoch: 4, lr: 1.0e-02, train_loss: 1.8159, train_acc: 0.3118 test_loss: 1.5938, test_acc: 0.3897, best: 0.3897, time: 0:01:11
 Epoch: 5, lr: 1.0e-02, train_loss: 1.7556, train_acc: 0.3460 test_loss: 1.5511, test_acc: 0.4051, best: 0.4051, time: 0:01:11
 Epoch: 6, lr: 1.0e-02, train_loss: 1.7161, train_acc: 0.3516 test_loss: 1.7032, test_acc: 0.4035, best: 0.4051, time: 0:01:10
 Epoch: 7, lr: 1.0e-02, train_loss: 1.6714, train_acc: 0.3754 test_loss: 1.5959, test_acc: 0.4099, best: 0.4099, time: 0:01:11
 Epoch: 8, lr: 1.0e-02, train_loss: 1.6236, train_acc: 0.3988 test_loss: 1.4684, test_acc: 0.4586, best: 0.4586, time: 0:01:11
 Epoch: 9, lr: 1.0e-02, train_loss: 1.5802, train_acc: 0.4180 test_loss: 1.4186, test_acc: 0.4679, best: 0.4679, time: 0:01:11
 Epoch: 10, lr: 1.0e-02, train_loss: 1.5334, train_acc: 0.4334 test_loss: 1.3609, test_acc: 0.4954, best: 0.4954, time: 0:01:11
 Epoch: 11, lr: 1.0e-02, train_loss: 1.4996, train_acc: 0.4442 test_loss: 1.4059, test_acc: 0.4819, best: 0.4954, time: 0:01:11
 Epoch: 12, lr: 1.0e-02, train_loss: 1.4902, train_acc: 0.4520 test_loss: 1.4543, test_acc: 0.4714, best: 0.4954, time: 0:01:11
 Epoch: 13, lr: 1.0e-02, train_loss: 1.4546, train_acc: 0.4610 test_loss: 1.3222, test_acc: 0.5076, best: 0.5076, time: 0:01:11
 Epoch: 14, lr: 1.0e-02, train_loss: 1.4115, train_acc: 0.4874 test_loss: 1.3846, test_acc: 0.5049, best: 0.5076, time: 0:01:10
 Epoch: 15, lr: 1.0e-02, train_loss: 1.3863, train_acc: 0.4860 test_loss: 1.2071, test_acc: 0.5575, best: 0.5575, time: 0:01:11
 Epoch: 16, lr: 1.0e-02, train_loss: 1.3748, train_acc: 0.4920 test_loss: 1.2605, test_acc: 0.5299, best: 0.5575, time: 0:01:10
 Epoch: 17, lr: 1.0e-02, train_loss: 1.3525, train_acc: 0.5106 test_loss: 1.2244, test_acc: 0.5573, best: 0.5575, time: 0:01:10
 Epoch: 18, lr: 1.0e-02, train_loss: 1.3228, train_acc: 0.5200 test_loss: 1.2015, test_acc: 0.5594, best: 0.5594, time: 0:01:11
 Epoch: 19, lr: 1.0e-02, train_loss: 1.3063, train_acc: 0.5216 test_loss: 1.2928, test_acc: 0.5230, best: 0.5594, time: 0:01:10
 Epoch: 20, lr: 1.0e-02, train_loss: 1.2830, train_acc: 0.5360 test_loss: 1.2905, test_acc: 0.5633, best: 0.5633, time: 0:01:14
 Epoch: 21, lr: 1.0e-02, train_loss: 1.2530, train_acc: 0.5398 test_loss: 1.3397, test_acc: 0.5337, best: 0.5633, time: 0:01:10
 Epoch: 22, lr: 1.0e-02, train_loss: 1.2378, train_acc: 0.5606 test_loss: 1.1707, test_acc: 0.5803, best: 0.5803, time: 0:01:11
 Epoch: 23, lr: 1.0e-02, train_loss: 1.2026, train_acc: 0.5692 test_loss: 1.2700, test_acc: 0.5587, best: 0.5803, time: 0:01:10
 Epoch: 24, lr: 1.0e-02, train_loss: 1.2129, train_acc: 0.5642 test_loss: 1.0648, test_acc: 0.6119, best: 0.6119, time: 0:01:11
 Epoch: 25, lr: 1.0e-02, train_loss: 1.1901, train_acc: 0.5656 test_loss: 1.1251, test_acc: 0.5964, best: 0.6119, time: 0:01:10
 Epoch: 26, lr: 1.0e-02, train_loss: 1.1697, train_acc: 0.5782 test_loss: 1.1928, test_acc: 0.5789, best: 0.6119, time: 0:01:11
 Epoch: 27, lr: 1.0e-02, train_loss: 1.1624, train_acc: 0.5742 test_loss: 1.0947, test_acc: 0.6078, best: 0.6119, time: 0:01:10
 Epoch: 28, lr: 1.0e-02, train_loss: 1.1337, train_acc: 0.5858 test_loss: 1.2657, test_acc: 0.5786, best: 0.6119, time: 0:01:10
 Epoch: 29, lr: 1.0e-02, train_loss: 1.1153, train_acc: 0.6000 test_loss: 1.1005, test_acc: 0.6154, best: 0.6154, time: 0:01:11
 Epoch: 30, lr: 1.0e-02, train_loss: 1.0985, train_acc: 0.6036 test_loss: 1.0830, test_acc: 0.6171, best: 0.6171, time: 0:01:11
 Epoch: 31, lr: 1.0e-02, train_loss: 1.0821, train_acc: 0.6092 test_loss: 1.0348, test_acc: 0.6305, best: 0.6305, time: 0:01:11
 Epoch: 32, lr: 1.0e-02, train_loss: 1.0822, train_acc: 0.6118 test_loss: 1.0580, test_acc: 0.6228, best: 0.6305, time: 0:01:10
 Epoch: 33, lr: 1.0e-02, train_loss: 1.0743, train_acc: 0.6156 test_loss: 1.1043, test_acc: 0.6160, best: 0.6305, time: 0:01:10
 Epoch: 34, lr: 1.0e-02, train_loss: 1.0451, train_acc: 0.6216 test_loss: 1.0783, test_acc: 0.6185, best: 0.6305, time: 0:01:10
 Epoch: 35, lr: 1.0e-02, train_loss: 1.0370, train_acc: 0.6230 test_loss: 1.0272, test_acc: 0.6314, best: 0.6314, time: 0:01:11
 Epoch: 36, lr: 1.0e-02, train_loss: 1.0012, train_acc: 0.6426 test_loss: 1.1435, test_acc: 0.6140, best: 0.6314, time: 0:01:11
 Epoch: 37, lr: 1.0e-02, train_loss: 1.0054, train_acc: 0.6432 test_loss: 1.0587, test_acc: 0.6359, best: 0.6359, time: 0:01:11
 Epoch: 38, lr: 1.0e-02, train_loss: 1.0246, train_acc: 0.6416 test_loss: 1.1006, test_acc: 0.6226, best: 0.6359, time: 0:01:11
 Epoch: 39, lr: 1.0e-02, train_loss: 0.9715, train_acc: 0.6528 test_loss: 0.9908, test_acc: 0.6587, best: 0.6587, time: 0:01:11
 Epoch: 40, lr: 1.0e-02, train_loss: 0.9768, train_acc: 0.6428 test_loss: 1.0018, test_acc: 0.6500, best: 0.6587, time: 0:01:10
 Epoch: 41, lr: 1.0e-02, train_loss: 0.9597, train_acc: 0.6584 test_loss: 1.0281, test_acc: 0.6495, best: 0.6587, time: 0:01:11
 Epoch: 42, lr: 1.0e-02, train_loss: 0.9476, train_acc: 0.6696 test_loss: 1.0017, test_acc: 0.6512, best: 0.6587, time: 0:01:10
 Epoch: 43, lr: 1.0e-02, train_loss: 0.9450, train_acc: 0.6580 test_loss: 1.0294, test_acc: 0.6416, best: 0.6587, time: 0:01:10
 Epoch: 44, lr: 1.0e-02, train_loss: 0.9129, train_acc: 0.6706 test_loss: 0.9926, test_acc: 0.6554, best: 0.6587, time: 0:01:10
 Epoch: 45, lr: 1.0e-02, train_loss: 0.9183, train_acc: 0.6744 test_loss: 1.0219, test_acc: 0.6464, best: 0.6587, time: 0:01:10
 Epoch: 46, lr: 1.0e-02, train_loss: 0.9146, train_acc: 0.6748 test_loss: 1.0200, test_acc: 0.6573, best: 0.6587, time: 0:01:10
 Epoch: 47, lr: 1.0e-02, train_loss: 0.8836, train_acc: 0.6856 test_loss: 1.0132, test_acc: 0.6531, best: 0.6587, time: 0:01:10
 Epoch: 48, lr: 1.0e-02, train_loss: 0.8825, train_acc: 0.6862 test_loss: 1.0603, test_acc: 0.6455, best: 0.6587, time: 0:01:11
 Epoch: 49, lr: 1.0e-02, train_loss: 0.8924, train_acc: 0.6802 test_loss: 1.0507, test_acc: 0.6509, best: 0.6587, time: 0:01:10
 Epoch: 50, lr: 1.0e-02, train_loss: 0.8549, train_acc: 0.6912 test_loss: 1.0355, test_acc: 0.6591, best: 0.6591, time: 0:01:11
 Epoch: 51, lr: 1.0e-02, train_loss: 0.8389, train_acc: 0.7050 test_loss: 1.0324, test_acc: 0.6636, best: 0.6636, time: 0:01:11
 Epoch: 52, lr: 1.0e-02, train_loss: 0.8336, train_acc: 0.7016 test_loss: 1.0840, test_acc: 0.6468, best: 0.6636, time: 0:01:10
 Epoch: 53, lr: 1.0e-02, train_loss: 0.8215, train_acc: 0.7068 test_loss: 0.9663, test_acc: 0.6730, best: 0.6730, time: 0:01:11
 Epoch: 54, lr: 1.0e-02, train_loss: 0.8150, train_acc: 0.7092 test_loss: 0.9567, test_acc: 0.6690, best: 0.6730, time: 0:01:10
 Epoch: 55, lr: 1.0e-02, train_loss: 0.7933, train_acc: 0.7242 test_loss: 1.0109, test_acc: 0.6679, best: 0.6730, time: 0:01:11
 Epoch: 56, lr: 1.0e-02, train_loss: 0.7883, train_acc: 0.7214 test_loss: 0.9333, test_acc: 0.6861, best: 0.6861, time: 0:01:11
 Epoch: 57, lr: 1.0e-02, train_loss: 0.7988, train_acc: 0.7162 test_loss: 0.9655, test_acc: 0.6775, best: 0.6861, time: 0:01:10
 Epoch: 58, lr: 1.0e-02, train_loss: 0.7849, train_acc: 0.7254 test_loss: 1.0013, test_acc: 0.6800, best: 0.6861, time: 0:01:11
 Epoch: 59, lr: 1.0e-02, train_loss: 0.7759, train_acc: 0.7260 test_loss: 1.0433, test_acc: 0.6629, best: 0.6861, time: 0:01:10
 Epoch: 60, lr: 1.0e-02, train_loss: 0.7733, train_acc: 0.7328 test_loss: 1.0566, test_acc: 0.6694, best: 0.6861, time: 0:01:10
 Epoch: 61, lr: 1.0e-02, train_loss: 0.7449, train_acc: 0.7308 test_loss: 0.9220, test_acc: 0.6825, best: 0.6861, time: 0:01:11
 Epoch: 62, lr: 1.0e-02, train_loss: 0.7266, train_acc: 0.7398 test_loss: 0.9718, test_acc: 0.6920, best: 0.6920, time: 0:01:11
 Epoch: 63, lr: 1.0e-02, train_loss: 0.7384, train_acc: 0.7390 test_loss: 0.9021, test_acc: 0.7123, best: 0.7123, time: 0:01:11
 Epoch: 64, lr: 1.0e-02, train_loss: 0.7161, train_acc: 0.7462 test_loss: 0.9698, test_acc: 0.6906, best: 0.7123, time: 0:01:10
 Epoch: 65, lr: 1.0e-02, train_loss: 0.7203, train_acc: 0.7410 test_loss: 0.9509, test_acc: 0.6900, best: 0.7123, time: 0:01:10
 Epoch: 66, lr: 1.0e-02, train_loss: 0.7164, train_acc: 0.7454 test_loss: 0.9707, test_acc: 0.6977, best: 0.7123, time: 0:01:10
 Epoch: 67, lr: 1.0e-02, train_loss: 0.6965, train_acc: 0.7600 test_loss: 0.9373, test_acc: 0.6954, best: 0.7123, time: 0:01:10
 Epoch: 68, lr: 1.0e-02, train_loss: 0.6873, train_acc: 0.7600 test_loss: 0.9749, test_acc: 0.6921, best: 0.7123, time: 0:01:10
 Epoch: 69, lr: 1.0e-02, train_loss: 0.6776, train_acc: 0.7606 test_loss: 1.0535, test_acc: 0.6899, best: 0.7123, time: 0:01:10
 Epoch: 70, lr: 1.0e-02, train_loss: 0.7126, train_acc: 0.7532 test_loss: 0.8693, test_acc: 0.7070, best: 0.7123, time: 0:01:10
 Epoch: 71, lr: 1.0e-02, train_loss: 0.6528, train_acc: 0.7668 test_loss: 0.9486, test_acc: 0.6950, best: 0.7123, time: 0:01:11
 Epoch: 72, lr: 1.0e-02, train_loss: 0.6426, train_acc: 0.7750 test_loss: 0.9481, test_acc: 0.7054, best: 0.7123, time: 0:01:10
 Epoch: 73, lr: 1.0e-02, train_loss: 0.6642, train_acc: 0.7706 test_loss: 0.8718, test_acc: 0.7131, best: 0.7131, time: 0:01:11
 Epoch: 74, lr: 1.0e-02, train_loss: 0.6383, train_acc: 0.7752 test_loss: 0.9261, test_acc: 0.7171, best: 0.7171, time: 0:01:11
 Epoch: 75, lr: 1.0e-02, train_loss: 0.6473, train_acc: 0.7730 test_loss: 0.9814, test_acc: 0.6973, best: 0.7171, time: 0:01:10
 Epoch: 76, lr: 1.0e-02, train_loss: 0.6321, train_acc: 0.7744 test_loss: 0.9071, test_acc: 0.7177, best: 0.7177, time: 0:01:11
 Epoch: 77, lr: 1.0e-02, train_loss: 0.6285, train_acc: 0.7824 test_loss: 0.9784, test_acc: 0.7010, best: 0.7177, time: 0:01:11
 Epoch: 78, lr: 1.0e-02, train_loss: 0.6247, train_acc: 0.7828 test_loss: 0.9555, test_acc: 0.7014, best: 0.7177, time: 0:01:10
 Epoch: 79, lr: 1.0e-02, train_loss: 0.6418, train_acc: 0.7728 test_loss: 0.9720, test_acc: 0.6994, best: 0.7177, time: 0:01:10
 Epoch: 80, lr: 1.0e-02, train_loss: 0.6096, train_acc: 0.7778 test_loss: 1.0285, test_acc: 0.6963, best: 0.7177, time: 0:01:11
 Epoch: 81, lr: 1.0e-02, train_loss: 0.6174, train_acc: 0.7792 test_loss: 0.9563, test_acc: 0.7163, best: 0.7177, time: 0:01:11
 Epoch: 82, lr: 1.0e-02, train_loss: 0.5883, train_acc: 0.7978 test_loss: 1.0604, test_acc: 0.6873, best: 0.7177, time: 0:01:10
 Epoch: 83, lr: 1.0e-02, train_loss: 0.6093, train_acc: 0.7842 test_loss: 0.9847, test_acc: 0.7094, best: 0.7177, time: 0:01:10
 Epoch: 84, lr: 1.0e-02, train_loss: 0.6015, train_acc: 0.7922 test_loss: 0.9939, test_acc: 0.7036, best: 0.7177, time: 0:01:10
 Epoch: 85, lr: 1.0e-02, train_loss: 0.5596, train_acc: 0.8112 test_loss: 0.9758, test_acc: 0.7071, best: 0.7177, time: 0:01:10
 Epoch: 86, lr: 1.0e-02, train_loss: 0.5641, train_acc: 0.8042 test_loss: 0.9822, test_acc: 0.7067, best: 0.7177, time: 0:01:10
 Epoch: 87, lr: 1.0e-02, train_loss: 0.5842, train_acc: 0.7918 test_loss: 0.9605, test_acc: 0.7130, best: 0.7177, time: 0:01:10
 Epoch: 88, lr: 1.0e-02, train_loss: 0.5566, train_acc: 0.8120 test_loss: 0.9895, test_acc: 0.7147, best: 0.7177, time: 0:01:10
 Epoch: 89, lr: 1.0e-02, train_loss: 0.5650, train_acc: 0.8040 test_loss: 0.9874, test_acc: 0.7076, best: 0.7177, time: 0:01:11
 Epoch: 90, lr: 1.0e-02, train_loss: 0.5687, train_acc: 0.8056 test_loss: 1.0725, test_acc: 0.7065, best: 0.7177, time: 0:01:11
 Epoch: 91, lr: 1.0e-02, train_loss: 0.5554, train_acc: 0.8008 test_loss: 0.9503, test_acc: 0.7146, best: 0.7177, time: 0:01:10
 Epoch: 92, lr: 1.0e-02, train_loss: 0.5427, train_acc: 0.8118 test_loss: 1.0811, test_acc: 0.7081, best: 0.7177, time: 0:01:10
 Epoch: 93, lr: 1.0e-02, train_loss: 0.5120, train_acc: 0.8220 test_loss: 1.0230, test_acc: 0.7175, best: 0.7177, time: 0:01:10
 Epoch: 94, lr: 1.0e-02, train_loss: 0.5171, train_acc: 0.8240 test_loss: 1.0221, test_acc: 0.7131, best: 0.7177, time: 0:01:10
 Epoch: 95, lr: 1.0e-02, train_loss: 0.5203, train_acc: 0.8172 test_loss: 1.0090, test_acc: 0.7071, best: 0.7177, time: 0:01:11
 Epoch: 96, lr: 1.0e-02, train_loss: 0.5012, train_acc: 0.8252 test_loss: 0.9730, test_acc: 0.7166, best: 0.7177, time: 0:01:10
 Epoch: 97, lr: 1.0e-02, train_loss: 0.5170, train_acc: 0.8120 test_loss: 1.0519, test_acc: 0.7050, best: 0.7177, time: 0:01:10
 Epoch: 98, lr: 1.0e-02, train_loss: 0.5263, train_acc: 0.8200 test_loss: 1.0543, test_acc: 0.7050, best: 0.7177, time: 0:01:10
 Epoch: 99, lr: 1.0e-02, train_loss: 0.5016, train_acc: 0.8180 test_loss: 1.1123, test_acc: 0.6891, best: 0.7177, time: 0:01:10
 Epoch: 100, lr: 1.0e-02, train_loss: 0.4882, train_acc: 0.8316 test_loss: 0.9781, test_acc: 0.7240, best: 0.7240, time: 0:01:11
 Epoch: 101, lr: 1.0e-02, train_loss: 0.4872, train_acc: 0.8326 test_loss: 1.0405, test_acc: 0.7040, best: 0.7240, time: 0:01:10
 Epoch: 102, lr: 1.0e-02, train_loss: 0.4763, train_acc: 0.8380 test_loss: 0.9206, test_acc: 0.7238, best: 0.7240, time: 0:01:10
 Epoch: 103, lr: 1.0e-02, train_loss: 0.4809, train_acc: 0.8340 test_loss: 1.0200, test_acc: 0.7127, best: 0.7240, time: 0:01:10
 Epoch: 104, lr: 1.0e-02, train_loss: 0.4764, train_acc: 0.8320 test_loss: 1.0996, test_acc: 0.7027, best: 0.7240, time: 0:01:10
 Epoch: 105, lr: 1.0e-02, train_loss: 0.4692, train_acc: 0.8402 test_loss: 1.0047, test_acc: 0.7219, best: 0.7240, time: 0:01:10
 Epoch: 106, lr: 1.0e-02, train_loss: 0.4811, train_acc: 0.8340 test_loss: 0.9938, test_acc: 0.7249, best: 0.7249, time: 0:01:11
 Epoch: 107, lr: 1.0e-02, train_loss: 0.4763, train_acc: 0.8338 test_loss: 0.9958, test_acc: 0.7134, best: 0.7249, time: 0:01:11
 Epoch: 108, lr: 1.0e-02, train_loss: 0.4404, train_acc: 0.8476 test_loss: 0.9981, test_acc: 0.7215, best: 0.7249, time: 0:01:11
 Epoch: 109, lr: 1.0e-02, train_loss: 0.4365, train_acc: 0.8500 test_loss: 1.0162, test_acc: 0.7259, best: 0.7259, time: 0:01:11
 Epoch: 110, lr: 1.0e-02, train_loss: 0.4479, train_acc: 0.8464 test_loss: 0.9296, test_acc: 0.7306, best: 0.7306, time: 0:01:11
 Epoch: 111, lr: 1.0e-02, train_loss: 0.4735, train_acc: 0.8296 test_loss: 0.9903, test_acc: 0.7196, best: 0.7306, time: 0:01:10
 Epoch: 112, lr: 1.0e-02, train_loss: 0.4619, train_acc: 0.8398 test_loss: 0.9908, test_acc: 0.7216, best: 0.7306, time: 0:01:10
 Epoch: 113, lr: 1.0e-02, train_loss: 0.4464, train_acc: 0.8496 test_loss: 1.0483, test_acc: 0.7150, best: 0.7306, time: 0:01:10
 Epoch: 114, lr: 1.0e-02, train_loss: 0.4533, train_acc: 0.8386 test_loss: 1.0210, test_acc: 0.7224, best: 0.7306, time: 0:01:10
 Epoch: 115, lr: 1.0e-02, train_loss: 0.4356, train_acc: 0.8474 test_loss: 1.0895, test_acc: 0.7155, best: 0.7306, time: 0:01:10
 Epoch: 116, lr: 1.0e-02, train_loss: 0.4587, train_acc: 0.8412 test_loss: 0.9575, test_acc: 0.7251, best: 0.7306, time: 0:01:10
 Epoch: 117, lr: 1.0e-02, train_loss: 0.4398, train_acc: 0.8508 test_loss: 1.0092, test_acc: 0.7216, best: 0.7306, time: 0:01:10
 Epoch: 118, lr: 1.0e-02, train_loss: 0.4235, train_acc: 0.8546 test_loss: 0.9375, test_acc: 0.7348, best: 0.7348, time: 0:01:11
 Epoch: 119, lr: 1.0e-02, train_loss: 0.4336, train_acc: 0.8484 test_loss: 0.9142, test_acc: 0.7400, best: 0.7400, time: 0:01:11
 Epoch: 120, lr: 1.0e-02, train_loss: 0.4355, train_acc: 0.8486 test_loss: 0.9655, test_acc: 0.7281, best: 0.7400, time: 0:01:10
 Epoch: 121, lr: 1.0e-02, train_loss: 0.4298, train_acc: 0.8536 test_loss: 1.0161, test_acc: 0.7272, best: 0.7400, time: 0:01:10
 Epoch: 122, lr: 1.0e-02, train_loss: 0.4208, train_acc: 0.8574 test_loss: 1.0010, test_acc: 0.7290, best: 0.7400, time: 0:01:10
 Epoch: 123, lr: 1.0e-02, train_loss: 0.4299, train_acc: 0.8528 test_loss: 1.0408, test_acc: 0.7232, best: 0.7400, time: 0:01:10
 Epoch: 124, lr: 1.0e-02, train_loss: 0.4147, train_acc: 0.8542 test_loss: 1.0120, test_acc: 0.7259, best: 0.7400, time: 0:01:10
 Epoch: 125, lr: 1.0e-02, train_loss: 0.4000, train_acc: 0.8642 test_loss: 1.0303, test_acc: 0.7320, best: 0.7400, time: 0:01:10
 Epoch: 126, lr: 1.0e-02, train_loss: 0.4102, train_acc: 0.8646 test_loss: 1.0622, test_acc: 0.7240, best: 0.7400, time: 0:01:10
 Epoch: 127, lr: 1.0e-02, train_loss: 0.4122, train_acc: 0.8604 test_loss: 1.0603, test_acc: 0.7229, best: 0.7400, time: 0:01:10
 Epoch: 128, lr: 1.0e-02, train_loss: 0.3946, train_acc: 0.8704 test_loss: 1.0515, test_acc: 0.7332, best: 0.7400, time: 0:01:10
 Epoch: 129, lr: 1.0e-02, train_loss: 0.4062, train_acc: 0.8660 test_loss: 1.1150, test_acc: 0.7117, best: 0.7400, time: 0:01:10
 Epoch: 130, lr: 1.0e-02, train_loss: 0.3767, train_acc: 0.8702 test_loss: 1.1152, test_acc: 0.7120, best: 0.7400, time: 0:01:10
 Epoch: 131, lr: 1.0e-02, train_loss: 0.3730, train_acc: 0.8702 test_loss: 1.0212, test_acc: 0.7295, best: 0.7400, time: 0:01:10
 Epoch: 132, lr: 1.0e-02, train_loss: 0.3987, train_acc: 0.8612 test_loss: 1.1962, test_acc: 0.7236, best: 0.7400, time: 0:01:10
 Epoch: 133, lr: 1.0e-02, train_loss: 0.3876, train_acc: 0.8704 test_loss: 1.0190, test_acc: 0.7310, best: 0.7400, time: 0:01:10
 Epoch: 134, lr: 1.0e-02, train_loss: 0.3936, train_acc: 0.8648 test_loss: 1.0945, test_acc: 0.7386, best: 0.7400, time: 0:01:10
 Epoch: 135, lr: 1.0e-02, train_loss: 0.3855, train_acc: 0.8672 test_loss: 1.0783, test_acc: 0.7255, best: 0.7400, time: 0:01:10
 Epoch: 136, lr: 1.0e-02, train_loss: 0.3937, train_acc: 0.8636 test_loss: 1.0031, test_acc: 0.7296, best: 0.7400, time: 0:01:10
 Epoch: 137, lr: 1.0e-02, train_loss: 0.3764, train_acc: 0.8708 test_loss: 1.1112, test_acc: 0.7318, best: 0.7400, time: 0:01:10
 Epoch: 138, lr: 1.0e-02, train_loss: 0.3773, train_acc: 0.8740 test_loss: 1.1000, test_acc: 0.7244, best: 0.7400, time: 0:01:10
 Epoch: 139, lr: 1.0e-02, train_loss: 0.3771, train_acc: 0.8716 test_loss: 1.0839, test_acc: 0.7280, best: 0.7400, time: 0:01:10
 Epoch: 140, lr: 1.0e-02, train_loss: 0.3757, train_acc: 0.8700 test_loss: 0.9853, test_acc: 0.7336, best: 0.7400, time: 0:01:10
 Epoch: 141, lr: 1.0e-02, train_loss: 0.3693, train_acc: 0.8732 test_loss: 0.9974, test_acc: 0.7331, best: 0.7400, time: 0:01:10
 Epoch: 142, lr: 1.0e-02, train_loss: 0.3665, train_acc: 0.8740 test_loss: 1.0639, test_acc: 0.7294, best: 0.7400, time: 0:01:10
 Epoch: 143, lr: 1.0e-02, train_loss: 0.3724, train_acc: 0.8772 test_loss: 1.2017, test_acc: 0.7190, best: 0.7400, time: 0:01:10
 Epoch: 144, lr: 1.0e-02, train_loss: 0.3528, train_acc: 0.8748 test_loss: 1.0161, test_acc: 0.7308, best: 0.7400, time: 0:01:10
 Epoch: 145, lr: 1.0e-02, train_loss: 0.3519, train_acc: 0.8782 test_loss: 1.1623, test_acc: 0.7175, best: 0.7400, time: 0:01:10
 Epoch: 146, lr: 1.0e-02, train_loss: 0.3338, train_acc: 0.8864 test_loss: 1.0758, test_acc: 0.7388, best: 0.7400, time: 0:01:10
 Epoch: 147, lr: 1.0e-02, train_loss: 0.3545, train_acc: 0.8774 test_loss: 1.0286, test_acc: 0.7348, best: 0.7400, time: 0:01:10
 Epoch: 148, lr: 1.0e-02, train_loss: 0.3537, train_acc: 0.8766 test_loss: 1.0332, test_acc: 0.7330, best: 0.7400, time: 0:01:10
 Epoch: 149, lr: 1.0e-02, train_loss: 0.3566, train_acc: 0.8806 test_loss: 1.0738, test_acc: 0.7382, best: 0.7400, time: 0:01:10
 Epoch: 150, lr: 1.0e-02, train_loss: 0.3511, train_acc: 0.8790 test_loss: 1.0936, test_acc: 0.7319, best: 0.7400, time: 0:01:10
 Epoch: 151, lr: 1.0e-02, train_loss: 0.3784, train_acc: 0.8720 test_loss: 1.0526, test_acc: 0.7249, best: 0.7400, time: 0:01:10
 Epoch: 152, lr: 1.0e-02, train_loss: 0.3475, train_acc: 0.8828 test_loss: 1.0074, test_acc: 0.7406, best: 0.7406, time: 0:01:10
 Epoch: 153, lr: 1.0e-02, train_loss: 0.3628, train_acc: 0.8750 test_loss: 0.9999, test_acc: 0.7405, best: 0.7406, time: 0:01:10
 Epoch: 154, lr: 1.0e-02, train_loss: 0.3364, train_acc: 0.8836 test_loss: 1.0759, test_acc: 0.7321, best: 0.7406, time: 0:01:10
 Epoch: 155, lr: 1.0e-02, train_loss: 0.3401, train_acc: 0.8820 test_loss: 1.1081, test_acc: 0.7351, best: 0.7406, time: 0:01:10
 Epoch: 156, lr: 1.0e-02, train_loss: 0.3663, train_acc: 0.8764 test_loss: 1.0727, test_acc: 0.7262, best: 0.7406, time: 0:01:10
 Epoch: 157, lr: 1.0e-02, train_loss: 0.3450, train_acc: 0.8826 test_loss: 1.0535, test_acc: 0.7346, best: 0.7406, time: 0:01:10
 Epoch: 158, lr: 1.0e-02, train_loss: 0.3418, train_acc: 0.8880 test_loss: 1.1037, test_acc: 0.7330, best: 0.7406, time: 0:01:10
 Epoch: 159, lr: 1.0e-02, train_loss: 0.3338, train_acc: 0.8890 test_loss: 1.0919, test_acc: 0.7321, best: 0.7406, time: 0:01:10
 Epoch: 160, lr: 1.0e-02, train_loss: 0.3368, train_acc: 0.8816 test_loss: 1.0201, test_acc: 0.7469, best: 0.7469, time: 0:01:11
 Epoch: 161, lr: 1.0e-02, train_loss: 0.3280, train_acc: 0.8912 test_loss: 1.0452, test_acc: 0.7436, best: 0.7469, time: 0:01:10
 Epoch: 162, lr: 1.0e-02, train_loss: 0.3429, train_acc: 0.8832 test_loss: 1.0976, test_acc: 0.7316, best: 0.7469, time: 0:01:10
 Epoch: 163, lr: 1.0e-02, train_loss: 0.3299, train_acc: 0.8874 test_loss: 1.2075, test_acc: 0.7202, best: 0.7469, time: 0:01:10
 Epoch: 164, lr: 1.0e-02, train_loss: 0.3267, train_acc: 0.8874 test_loss: 1.0548, test_acc: 0.7406, best: 0.7469, time: 0:01:10
 Epoch: 165, lr: 1.0e-02, train_loss: 0.3297, train_acc: 0.8878 test_loss: 1.1213, test_acc: 0.7286, best: 0.7469, time: 0:01:10
 Epoch: 166, lr: 1.0e-02, train_loss: 0.3214, train_acc: 0.8884 test_loss: 1.0490, test_acc: 0.7436, best: 0.7469, time: 0:01:10
 Epoch: 167, lr: 1.0e-02, train_loss: 0.3247, train_acc: 0.8906 test_loss: 1.0637, test_acc: 0.7298, best: 0.7469, time: 0:01:10
 Epoch: 168, lr: 1.0e-02, train_loss: 0.3130, train_acc: 0.8930 test_loss: 1.1218, test_acc: 0.7368, best: 0.7469, time: 0:01:10
 Epoch: 169, lr: 1.0e-02, train_loss: 0.3108, train_acc: 0.8956 test_loss: 1.1431, test_acc: 0.7176, best: 0.7469, time: 0:01:10
 Epoch: 170, lr: 1.0e-02, train_loss: 0.3138, train_acc: 0.8904 test_loss: 1.0858, test_acc: 0.7386, best: 0.7469, time: 0:01:10
 Epoch: 171, lr: 1.0e-02, train_loss: 0.3304, train_acc: 0.8872 test_loss: 1.0690, test_acc: 0.7491, best: 0.7491, time: 0:01:11
 Epoch: 172, lr: 1.0e-02, train_loss: 0.3191, train_acc: 0.8916 test_loss: 1.0943, test_acc: 0.7421, best: 0.7491, time: 0:01:10
 Epoch: 173, lr: 1.0e-02, train_loss: 0.3003, train_acc: 0.8966 test_loss: 1.1749, test_acc: 0.7330, best: 0.7491, time: 0:01:10
 Epoch: 174, lr: 1.0e-02, train_loss: 0.3071, train_acc: 0.8996 test_loss: 1.1744, test_acc: 0.7341, best: 0.7491, time: 0:01:10
 Epoch: 175, lr: 1.0e-02, train_loss: 0.3225, train_acc: 0.8908 test_loss: 1.1180, test_acc: 0.7396, best: 0.7491, time: 0:01:10
 Epoch: 176, lr: 1.0e-02, train_loss: 0.3178, train_acc: 0.8868 test_loss: 1.1129, test_acc: 0.7391, best: 0.7491, time: 0:01:10
 Epoch: 177, lr: 1.0e-02, train_loss: 0.3162, train_acc: 0.8968 test_loss: 1.1069, test_acc: 0.7448, best: 0.7491, time: 0:01:10
 Epoch: 178, lr: 1.0e-02, train_loss: 0.3084, train_acc: 0.8940 test_loss: 1.0643, test_acc: 0.7462, best: 0.7491, time: 0:01:10
 Epoch: 179, lr: 1.0e-02, train_loss: 0.2792, train_acc: 0.9052 test_loss: 1.0968, test_acc: 0.7320, best: 0.7491, time: 0:01:10
 Epoch: 180, lr: 2.0e-03, train_loss: 0.2583, train_acc: 0.9120 test_loss: 1.0685, test_acc: 0.7451, best: 0.7491, time: 0:01:10
 Epoch: 181, lr: 2.0e-03, train_loss: 0.2478, train_acc: 0.9172 test_loss: 1.0160, test_acc: 0.7545, best: 0.7545, time: 0:01:10
 Epoch: 182, lr: 2.0e-03, train_loss: 0.2463, train_acc: 0.9168 test_loss: 1.0243, test_acc: 0.7602, best: 0.7602, time: 0:01:10
 Epoch: 183, lr: 2.0e-03, train_loss: 0.2141, train_acc: 0.9266 test_loss: 1.0664, test_acc: 0.7556, best: 0.7602, time: 0:01:10
 Epoch: 184, lr: 2.0e-03, train_loss: 0.2302, train_acc: 0.9186 test_loss: 1.0450, test_acc: 0.7626, best: 0.7626, time: 0:01:10
 Epoch: 185, lr: 2.0e-03, train_loss: 0.2156, train_acc: 0.9270 test_loss: 1.0676, test_acc: 0.7589, best: 0.7626, time: 0:01:10
 Epoch: 186, lr: 2.0e-03, train_loss: 0.2249, train_acc: 0.9226 test_loss: 1.0339, test_acc: 0.7625, best: 0.7626, time: 0:01:10
 Epoch: 187, lr: 2.0e-03, train_loss: 0.2116, train_acc: 0.9320 test_loss: 1.0452, test_acc: 0.7566, best: 0.7626, time: 0:01:10
 Epoch: 188, lr: 2.0e-03, train_loss: 0.2125, train_acc: 0.9272 test_loss: 1.0342, test_acc: 0.7594, best: 0.7626, time: 0:01:10
 Epoch: 189, lr: 2.0e-03, train_loss: 0.2086, train_acc: 0.9320 test_loss: 1.0835, test_acc: 0.7568, best: 0.7626, time: 0:01:10
 Epoch: 190, lr: 2.0e-03, train_loss: 0.2100, train_acc: 0.9292 test_loss: 1.0576, test_acc: 0.7595, best: 0.7626, time: 0:01:10
 Epoch: 191, lr: 2.0e-03, train_loss: 0.2153, train_acc: 0.9278 test_loss: 1.0621, test_acc: 0.7590, best: 0.7626, time: 0:01:10
 Epoch: 192, lr: 2.0e-03, train_loss: 0.2181, train_acc: 0.9282 test_loss: 1.0406, test_acc: 0.7616, best: 0.7626, time: 0:01:10
 Epoch: 193, lr: 2.0e-03, train_loss: 0.1994, train_acc: 0.9342 test_loss: 1.0362, test_acc: 0.7596, best: 0.7626, time: 0:01:10
 Epoch: 194, lr: 2.0e-03, train_loss: 0.2062, train_acc: 0.9272 test_loss: 1.0448, test_acc: 0.7596, best: 0.7626, time: 0:01:10
 Epoch: 195, lr: 2.0e-03, train_loss: 0.2157, train_acc: 0.9256 test_loss: 1.0490, test_acc: 0.7619, best: 0.7626, time: 0:01:10
 Epoch: 196, lr: 2.0e-03, train_loss: 0.2144, train_acc: 0.9254 test_loss: 1.0316, test_acc: 0.7604, best: 0.7626, time: 0:01:10
 Epoch: 197, lr: 2.0e-03, train_loss: 0.2105, train_acc: 0.9286 test_loss: 1.0285, test_acc: 0.7578, best: 0.7626, time: 0:01:10
 Epoch: 198, lr: 2.0e-03, train_loss: 0.2090, train_acc: 0.9286 test_loss: 1.0483, test_acc: 0.7566, best: 0.7626, time: 0:01:10
 Epoch: 199, lr: 2.0e-03, train_loss: 0.1999, train_acc: 0.9310 test_loss: 1.0415, test_acc: 0.7580, best: 0.7626, time: 0:01:10
 Epoch: 200, lr: 2.0e-03, train_loss: 0.1882, train_acc: 0.9380 test_loss: 1.0258, test_acc: 0.7555, best: 0.7626, time: 0:01:10
 Epoch: 201, lr: 2.0e-03, train_loss: 0.1944, train_acc: 0.9314 test_loss: 1.0585, test_acc: 0.7584, best: 0.7626, time: 0:01:10
 Epoch: 202, lr: 2.0e-03, train_loss: 0.2105, train_acc: 0.9286 test_loss: 1.0832, test_acc: 0.7565, best: 0.7626, time: 0:01:10
 Epoch: 203, lr: 2.0e-03, train_loss: 0.2114, train_acc: 0.9328 test_loss: 1.0619, test_acc: 0.7559, best: 0.7626, time: 0:01:10
 Epoch: 204, lr: 2.0e-03, train_loss: 0.1959, train_acc: 0.9322 test_loss: 1.0451, test_acc: 0.7556, best: 0.7626, time: 0:01:10
 Epoch: 205, lr: 2.0e-03, train_loss: 0.2092, train_acc: 0.9288 test_loss: 1.0586, test_acc: 0.7598, best: 0.7626, time: 0:01:10
 Epoch: 206, lr: 2.0e-03, train_loss: 0.1885, train_acc: 0.9376 test_loss: 1.0669, test_acc: 0.7545, best: 0.7626, time: 0:01:10
 Epoch: 207, lr: 2.0e-03, train_loss: 0.1997, train_acc: 0.9312 test_loss: 1.0879, test_acc: 0.7570, best: 0.7626, time: 0:01:10
 Epoch: 208, lr: 2.0e-03, train_loss: 0.1783, train_acc: 0.9404 test_loss: 1.1128, test_acc: 0.7521, best: 0.7626, time: 0:01:10
 Epoch: 209, lr: 2.0e-03, train_loss: 0.1938, train_acc: 0.9328 test_loss: 1.0834, test_acc: 0.7572, best: 0.7626, time: 0:01:10
 Epoch: 210, lr: 2.0e-03, train_loss: 0.1913, train_acc: 0.9372 test_loss: 1.0940, test_acc: 0.7546, best: 0.7626, time: 0:01:10
 Epoch: 211, lr: 2.0e-03, train_loss: 0.2015, train_acc: 0.9308 test_loss: 1.0426, test_acc: 0.7604, best: 0.7626, time: 0:01:10
 Epoch: 212, lr: 2.0e-03, train_loss: 0.1820, train_acc: 0.9344 test_loss: 1.0547, test_acc: 0.7621, best: 0.7626, time: 0:01:10
 Epoch: 213, lr: 2.0e-03, train_loss: 0.1839, train_acc: 0.9390 test_loss: 1.0435, test_acc: 0.7629, best: 0.7629, time: 0:01:11
 Epoch: 214, lr: 2.0e-03, train_loss: 0.1879, train_acc: 0.9366 test_loss: 1.1106, test_acc: 0.7550, best: 0.7629, time: 0:01:10
 Epoch: 215, lr: 2.0e-03, train_loss: 0.1821, train_acc: 0.9416 test_loss: 1.0655, test_acc: 0.7661, best: 0.7661, time: 0:01:11
 Epoch: 216, lr: 2.0e-03, train_loss: 0.1822, train_acc: 0.9382 test_loss: 1.1022, test_acc: 0.7580, best: 0.7661, time: 0:01:10
 Epoch: 217, lr: 2.0e-03, train_loss: 0.1937, train_acc: 0.9370 test_loss: 1.0791, test_acc: 0.7552, best: 0.7661, time: 0:01:10
 Epoch: 218, lr: 2.0e-03, train_loss: 0.2037, train_acc: 0.9312 test_loss: 1.0866, test_acc: 0.7571, best: 0.7661, time: 0:01:10
 Epoch: 219, lr: 2.0e-03, train_loss: 0.1762, train_acc: 0.9414 test_loss: 1.1123, test_acc: 0.7571, best: 0.7661, time: 0:01:10
 Epoch: 220, lr: 2.0e-03, train_loss: 0.1841, train_acc: 0.9408 test_loss: 1.0929, test_acc: 0.7606, best: 0.7661, time: 0:01:10
 Epoch: 221, lr: 2.0e-03, train_loss: 0.1887, train_acc: 0.9346 test_loss: 1.1057, test_acc: 0.7532, best: 0.7661, time: 0:01:10
 Epoch: 222, lr: 2.0e-03, train_loss: 0.1864, train_acc: 0.9386 test_loss: 1.1156, test_acc: 0.7589, best: 0.7661, time: 0:01:10
 Epoch: 223, lr: 2.0e-03, train_loss: 0.2058, train_acc: 0.9348 test_loss: 1.0853, test_acc: 0.7519, best: 0.7661, time: 0:01:10
 Epoch: 224, lr: 2.0e-03, train_loss: 0.1832, train_acc: 0.9378 test_loss: 1.0899, test_acc: 0.7559, best: 0.7661, time: 0:01:10
 Epoch: 225, lr: 2.0e-03, train_loss: 0.1910, train_acc: 0.9344 test_loss: 1.0922, test_acc: 0.7601, best: 0.7661, time: 0:01:10
 Epoch: 226, lr: 2.0e-03, train_loss: 0.1784, train_acc: 0.9420 test_loss: 1.1047, test_acc: 0.7561, best: 0.7661, time: 0:01:10
 Epoch: 227, lr: 2.0e-03, train_loss: 0.1791, train_acc: 0.9408 test_loss: 1.0528, test_acc: 0.7619, best: 0.7661, time: 0:01:10
 Epoch: 228, lr: 2.0e-03, train_loss: 0.1826, train_acc: 0.9432 test_loss: 1.0944, test_acc: 0.7606, best: 0.7661, time: 0:01:10
 Epoch: 229, lr: 2.0e-03, train_loss: 0.1845, train_acc: 0.9402 test_loss: 1.0644, test_acc: 0.7575, best: 0.7661, time: 0:01:10
 Epoch: 230, lr: 2.0e-03, train_loss: 0.1748, train_acc: 0.9398 test_loss: 1.0594, test_acc: 0.7659, best: 0.7661, time: 0:01:10
 Epoch: 231, lr: 2.0e-03, train_loss: 0.1924, train_acc: 0.9368 test_loss: 1.0872, test_acc: 0.7540, best: 0.7661, time: 0:01:10
 Epoch: 232, lr: 2.0e-03, train_loss: 0.1780, train_acc: 0.9398 test_loss: 1.0708, test_acc: 0.7592, best: 0.7661, time: 0:01:10
 Epoch: 233, lr: 2.0e-03, train_loss: 0.1834, train_acc: 0.9388 test_loss: 1.0946, test_acc: 0.7571, best: 0.7661, time: 0:01:10
 Epoch: 234, lr: 2.0e-03, train_loss: 0.1764, train_acc: 0.9396 test_loss: 1.0834, test_acc: 0.7582, best: 0.7661, time: 0:01:10
 Epoch: 235, lr: 2.0e-03, train_loss: 0.1727, train_acc: 0.9418 test_loss: 1.0567, test_acc: 0.7628, best: 0.7661, time: 0:01:10
 Epoch: 236, lr: 2.0e-03, train_loss: 0.1839, train_acc: 0.9380 test_loss: 1.1147, test_acc: 0.7565, best: 0.7661, time: 0:01:10
 Epoch: 237, lr: 2.0e-03, train_loss: 0.1870, train_acc: 0.9388 test_loss: 1.1101, test_acc: 0.7550, best: 0.7661, time: 0:01:10
 Epoch: 238, lr: 2.0e-03, train_loss: 0.1780, train_acc: 0.9400 test_loss: 1.0690, test_acc: 0.7576, best: 0.7661, time: 0:01:10
 Epoch: 239, lr: 2.0e-03, train_loss: 0.1819, train_acc: 0.9400 test_loss: 1.0372, test_acc: 0.7602, best: 0.7661, time: 0:01:10
 Epoch: 240, lr: 4.0e-04, train_loss: 0.1701, train_acc: 0.9402 test_loss: 1.0517, test_acc: 0.7644, best: 0.7661, time: 0:01:10
 Epoch: 241, lr: 4.0e-04, train_loss: 0.1632, train_acc: 0.9466 test_loss: 1.0417, test_acc: 0.7616, best: 0.7661, time: 0:01:10
 Epoch: 242, lr: 4.0e-04, train_loss: 0.1836, train_acc: 0.9416 test_loss: 1.0836, test_acc: 0.7638, best: 0.7661, time: 0:01:10
 Epoch: 243, lr: 4.0e-04, train_loss: 0.1776, train_acc: 0.9436 test_loss: 1.0307, test_acc: 0.7649, best: 0.7661, time: 0:01:10
 Epoch: 244, lr: 4.0e-04, train_loss: 0.1746, train_acc: 0.9416 test_loss: 1.0529, test_acc: 0.7638, best: 0.7661, time: 0:01:10
 Epoch: 245, lr: 4.0e-04, train_loss: 0.1823, train_acc: 0.9376 test_loss: 1.0460, test_acc: 0.7624, best: 0.7661, time: 0:01:10
 Epoch: 246, lr: 4.0e-04, train_loss: 0.1659, train_acc: 0.9448 test_loss: 1.0504, test_acc: 0.7614, best: 0.7661, time: 0:01:10
 Epoch: 247, lr: 4.0e-04, train_loss: 0.1702, train_acc: 0.9438 test_loss: 1.0450, test_acc: 0.7612, best: 0.7661, time: 0:01:10
 Epoch: 248, lr: 4.0e-04, train_loss: 0.1616, train_acc: 0.9450 test_loss: 1.0681, test_acc: 0.7620, best: 0.7661, time: 0:01:10
 Epoch: 249, lr: 4.0e-04, train_loss: 0.1600, train_acc: 0.9440 test_loss: 1.0390, test_acc: 0.7664, best: 0.7664, time: 0:01:10
 Epoch: 250, lr: 4.0e-04, train_loss: 0.1589, train_acc: 0.9458 test_loss: 1.0582, test_acc: 0.7621, best: 0.7664, time: 0:01:10
 Epoch: 251, lr: 4.0e-04, train_loss: 0.1662, train_acc: 0.9418 test_loss: 1.0574, test_acc: 0.7636, best: 0.7664, time: 0:01:10
 Epoch: 252, lr: 4.0e-04, train_loss: 0.1645, train_acc: 0.9452 test_loss: 1.0439, test_acc: 0.7674, best: 0.7674, time: 0:01:11
 Epoch: 253, lr: 4.0e-04, train_loss: 0.1696, train_acc: 0.9424 test_loss: 1.0698, test_acc: 0.7634, best: 0.7674, time: 0:01:10
 Epoch: 254, lr: 4.0e-04, train_loss: 0.1751, train_acc: 0.9400 test_loss: 1.0715, test_acc: 0.7625, best: 0.7674, time: 0:01:10
 Epoch: 255, lr: 4.0e-04, train_loss: 0.1578, train_acc: 0.9482 test_loss: 1.0388, test_acc: 0.7648, best: 0.7674, time: 0:01:10
 Epoch: 256, lr: 4.0e-04, train_loss: 0.1618, train_acc: 0.9448 test_loss: 1.0947, test_acc: 0.7589, best: 0.7674, time: 0:01:10
 Epoch: 257, lr: 4.0e-04, train_loss: 0.1544, train_acc: 0.9468 test_loss: 1.0595, test_acc: 0.7644, best: 0.7674, time: 0:01:10
 Epoch: 258, lr: 4.0e-04, train_loss: 0.1596, train_acc: 0.9470 test_loss: 1.0778, test_acc: 0.7635, best: 0.7674, time: 0:01:10
 Epoch: 259, lr: 4.0e-04, train_loss: 0.1577, train_acc: 0.9468 test_loss: 1.0667, test_acc: 0.7638, best: 0.7674, time: 0:01:10
 Epoch: 260, lr: 4.0e-04, train_loss: 0.1677, train_acc: 0.9458 test_loss: 1.0719, test_acc: 0.7611, best: 0.7674, time: 0:01:10
 Epoch: 261, lr: 4.0e-04, train_loss: 0.1622, train_acc: 0.9432 test_loss: 1.0703, test_acc: 0.7624, best: 0.7674, time: 0:01:10
 Epoch: 262, lr: 4.0e-04, train_loss: 0.1725, train_acc: 0.9408 test_loss: 1.0809, test_acc: 0.7591, best: 0.7674, time: 0:01:10
 Epoch: 263, lr: 4.0e-04, train_loss: 0.1677, train_acc: 0.9464 test_loss: 1.0793, test_acc: 0.7625, best: 0.7674, time: 0:01:10
 Epoch: 264, lr: 4.0e-04, train_loss: 0.1574, train_acc: 0.9468 test_loss: 1.1008, test_acc: 0.7619, best: 0.7674, time: 0:01:10
 Epoch: 265, lr: 4.0e-04, train_loss: 0.1595, train_acc: 0.9492 test_loss: 1.0747, test_acc: 0.7602, best: 0.7674, time: 0:01:10
 Epoch: 266, lr: 4.0e-04, train_loss: 0.1619, train_acc: 0.9464 test_loss: 1.0805, test_acc: 0.7614, best: 0.7674, time: 0:01:10
 Epoch: 267, lr: 4.0e-04, train_loss: 0.1620, train_acc: 0.9454 test_loss: 1.0658, test_acc: 0.7632, best: 0.7674, time: 0:01:10
 Epoch: 268, lr: 4.0e-04, train_loss: 0.1511, train_acc: 0.9494 test_loss: 1.0739, test_acc: 0.7644, best: 0.7674, time: 0:01:10
 Epoch: 269, lr: 4.0e-04, train_loss: 0.1650, train_acc: 0.9472 test_loss: 1.0889, test_acc: 0.7630, best: 0.7674, time: 0:01:10
 Epoch: 270, lr: 8.0e-05, train_loss: 0.1665, train_acc: 0.9418 test_loss: 1.0829, test_acc: 0.7620, best: 0.7674, time: 0:01:10
 Epoch: 271, lr: 8.0e-05, train_loss: 0.1649, train_acc: 0.9436 test_loss: 1.0662, test_acc: 0.7616, best: 0.7674, time: 0:01:10
 Epoch: 272, lr: 8.0e-05, train_loss: 0.1492, train_acc: 0.9476 test_loss: 1.0588, test_acc: 0.7636, best: 0.7674, time: 0:01:10
 Epoch: 273, lr: 8.0e-05, train_loss: 0.1513, train_acc: 0.9470 test_loss: 1.0841, test_acc: 0.7621, best: 0.7674, time: 0:01:10
 Epoch: 274, lr: 8.0e-05, train_loss: 0.1606, train_acc: 0.9462 test_loss: 1.0683, test_acc: 0.7636, best: 0.7674, time: 0:01:10
 Epoch: 275, lr: 8.0e-05, train_loss: 0.1607, train_acc: 0.9472 test_loss: 1.0624, test_acc: 0.7608, best: 0.7674, time: 0:01:15
 Epoch: 276, lr: 8.0e-05, train_loss: 0.1660, train_acc: 0.9436 test_loss: 1.0817, test_acc: 0.7632, best: 0.7674, time: 0:01:10
 Epoch: 277, lr: 8.0e-05, train_loss: 0.1657, train_acc: 0.9440 test_loss: 1.0612, test_acc: 0.7608, best: 0.7674, time: 0:01:10
 Epoch: 278, lr: 8.0e-05, train_loss: 0.1607, train_acc: 0.9448 test_loss: 1.0596, test_acc: 0.7661, best: 0.7674, time: 0:01:10
 Epoch: 279, lr: 8.0e-05, train_loss: 0.1613, train_acc: 0.9442 test_loss: 1.0669, test_acc: 0.7634, best: 0.7674, time: 0:01:10
 Epoch: 280, lr: 8.0e-05, train_loss: 0.1384, train_acc: 0.9504 test_loss: 1.0869, test_acc: 0.7621, best: 0.7674, time: 0:01:10
 Epoch: 281, lr: 8.0e-05, train_loss: 0.1497, train_acc: 0.9502 test_loss: 1.0844, test_acc: 0.7610, best: 0.7674, time: 0:01:10
 Epoch: 282, lr: 8.0e-05, train_loss: 0.1591, train_acc: 0.9464 test_loss: 1.0738, test_acc: 0.7639, best: 0.7674, time: 0:01:10
 Epoch: 283, lr: 8.0e-05, train_loss: 0.1571, train_acc: 0.9470 test_loss: 1.0734, test_acc: 0.7659, best: 0.7674, time: 0:01:10
 Epoch: 284, lr: 8.0e-05, train_loss: 0.1763, train_acc: 0.9416 test_loss: 1.0702, test_acc: 0.7612, best: 0.7674, time: 0:01:10
 Epoch: 285, lr: 8.0e-05, train_loss: 0.1650, train_acc: 0.9432 test_loss: 1.0626, test_acc: 0.7618, best: 0.7674, time: 0:01:10
 Epoch: 286, lr: 8.0e-05, train_loss: 0.1519, train_acc: 0.9508 test_loss: 1.0724, test_acc: 0.7624, best: 0.7674, time: 0:01:10
 Epoch: 287, lr: 8.0e-05, train_loss: 0.1586, train_acc: 0.9470 test_loss: 1.0777, test_acc: 0.7602, best: 0.7674, time: 0:01:10
 Epoch: 288, lr: 8.0e-05, train_loss: 0.1691, train_acc: 0.9418 test_loss: 1.1129, test_acc: 0.7614, best: 0.7674, time: 0:01:10
 Epoch: 289, lr: 8.0e-05, train_loss: 0.1571, train_acc: 0.9466 test_loss: 1.0941, test_acc: 0.7595, best: 0.7674, time: 0:01:10
 Epoch: 290, lr: 8.0e-05, train_loss: 0.1552, train_acc: 0.9446 test_loss: 1.0884, test_acc: 0.7581, best: 0.7674, time: 0:01:10
 Epoch: 291, lr: 8.0e-05, train_loss: 0.1615, train_acc: 0.9460 test_loss: 1.0529, test_acc: 0.7620, best: 0.7674, time: 0:01:10
 Epoch: 292, lr: 8.0e-05, train_loss: 0.1575, train_acc: 0.9464 test_loss: 1.1157, test_acc: 0.7575, best: 0.7674, time: 0:01:10
 Epoch: 293, lr: 8.0e-05, train_loss: 0.1613, train_acc: 0.9460 test_loss: 1.0692, test_acc: 0.7632, best: 0.7674, time: 0:01:10
 Epoch: 294, lr: 8.0e-05, train_loss: 0.1647, train_acc: 0.9436 test_loss: 1.0611, test_acc: 0.7631, best: 0.7674, time: 0:01:10
 Epoch: 295, lr: 8.0e-05, train_loss: 0.1542, train_acc: 0.9476 test_loss: 1.0743, test_acc: 0.7638, best: 0.7674, time: 0:01:10
 Epoch: 296, lr: 8.0e-05, train_loss: 0.1613, train_acc: 0.9438 test_loss: 1.0982, test_acc: 0.7604, best: 0.7674, time: 0:01:10
 Epoch: 297, lr: 8.0e-05, train_loss: 0.1478, train_acc: 0.9534 test_loss: 1.1030, test_acc: 0.7608, best: 0.7674, time: 0:01:10
 Epoch: 298, lr: 8.0e-05, train_loss: 0.1577, train_acc: 0.9470 test_loss: 1.0580, test_acc: 0.7618, best: 0.7674, time: 0:01:10
 Epoch: 299, lr: 8.0e-05, train_loss: 0.1600, train_acc: 0.9482 test_loss: 1.0665, test_acc: 0.7640, best: 0.7674, time: 0:01:10
 Highest accuracy: 0.7674