
 Run on time: 2022-07-01 13:37:57.510328

 Architecture: prepool-nlp_headfix2-8-resnet18-nlp_headfix2-1222

 Pool Config: {
    "arch": "resnet18",
    "conv1": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 1,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "pool": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 8,
            "_psize": 2,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    },
    "layer1": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 1,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": 2,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "layer2": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    },
    "layer3": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    },
    "layer4": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    }
}

 Arguments:
	 gpu                  : True
	 log                  : True
	 seed                 : 0
	 momentum             : 0.9
	 amsgrad              : True
	 dataset              : STL10
	 batch_size           : 8
	 architecture         : PREPOOL-NLP_HEADFIX2-8-RESNET18-NLP_HEADFIX2-1222
	 im_size              : None
	 relu_threshold       : 4.0
	 learning_rate        : 0.01
	 pretrained_backbone  : 
	 pretrained_ann       : 
	 weight_decay         : 0.0
	 test_only            : False
	 epochs               : 300
	 lr_interval          : [180, 240, 270]
	 lr_reduce            : 5
	 optimizer            : SGD
	 dropout              : 0.2
	 kernel_size          : 3
	 dont_save            : False
	 visualize            : False
	 devices              : 0
 DataParallel(
  (module): Network(
    (net): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): Pool2d(
        (logit): Sequential(
          (pool_weight): NLP_BASE(
            (downsample): Sequential(
              (0): Conv2d(64, 64, kernel_size=(2, 2), stride=(2, 2))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
            )
            (multihead_attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
            )
            (restore): Sequential(
              (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): Sigmoid()
            )
            (pos_embed): PositionEmbeddingLearned(
              (row_embed): Embedding(256, 32)
              (col_embed): Embedding(256, 32)
            )
          )
        )
        (pool): AvgPool2d(kernel_size=8, stride=8, padding=0)
      )
      (layer1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
              (pos_embed): PositionEmbeddingLearned(
                (row_embed): Embedding(256, 64)
                (col_embed): Embedding(256, 64)
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer3): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
              (pos_embed): PositionEmbeddingLearned(
                (row_embed): Embedding(256, 128)
                (col_embed): Embedding(256, 128)
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer4): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
              (pos_embed): PositionEmbeddingLearned(
                (row_embed): Embedding(256, 256)
                (col_embed): Embedding(256, 256)
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=512, out_features=10, bias=True)
    )
  )
)
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0
)
 Epoch: 1, lr: 1.0e-02, train_loss: 2.0831, train_acc: 0.2286 test_loss: 1.7911, test_acc: 0.3044, best: 0.3044, time: 0:01:54
 Epoch: 2, lr: 1.0e-02, train_loss: 1.8879, train_acc: 0.2798 test_loss: 1.6885, test_acc: 0.3576, best: 0.3576, time: 0:01:54
 Epoch: 3, lr: 1.0e-02, train_loss: 1.8194, train_acc: 0.3056 test_loss: 1.5896, test_acc: 0.3940, best: 0.3940, time: 0:01:49
 Epoch: 4, lr: 1.0e-02, train_loss: 1.7643, train_acc: 0.3390 test_loss: 1.5862, test_acc: 0.3980, best: 0.3980, time: 0:01:51
 Epoch: 5, lr: 1.0e-02, train_loss: 1.6986, train_acc: 0.3632 test_loss: 1.5248, test_acc: 0.4220, best: 0.4220, time: 0:01:43
 Epoch: 6, lr: 1.0e-02, train_loss: 1.6683, train_acc: 0.3842 test_loss: 1.4635, test_acc: 0.4514, best: 0.4514, time: 0:01:47
 Epoch: 7, lr: 1.0e-02, train_loss: 1.6240, train_acc: 0.3960 test_loss: 1.4396, test_acc: 0.4631, best: 0.4631, time: 0:01:52
 Epoch: 8, lr: 1.0e-02, train_loss: 1.5792, train_acc: 0.4170 test_loss: 1.4092, test_acc: 0.4696, best: 0.4696, time: 0:01:51
 Epoch: 9, lr: 1.0e-02, train_loss: 1.5458, train_acc: 0.4220 test_loss: 1.3905, test_acc: 0.4811, best: 0.4811, time: 0:01:53
 Epoch: 10, lr: 1.0e-02, train_loss: 1.5017, train_acc: 0.4474 test_loss: 1.3238, test_acc: 0.5085, best: 0.5085, time: 0:01:54
 Epoch: 11, lr: 1.0e-02, train_loss: 1.4718, train_acc: 0.4534 test_loss: 1.4064, test_acc: 0.4904, best: 0.5085, time: 0:01:51
 Epoch: 12, lr: 1.0e-02, train_loss: 1.4650, train_acc: 0.4564 test_loss: 1.3752, test_acc: 0.5001, best: 0.5085, time: 0:01:52
 Epoch: 13, lr: 1.0e-02, train_loss: 1.4307, train_acc: 0.4712 test_loss: 1.3086, test_acc: 0.5191, best: 0.5191, time: 0:01:53
 Epoch: 14, lr: 1.0e-02, train_loss: 1.4044, train_acc: 0.4846 test_loss: 1.3539, test_acc: 0.5138, best: 0.5191, time: 0:01:50
 Epoch: 15, lr: 1.0e-02, train_loss: 1.3821, train_acc: 0.4942 test_loss: 1.2437, test_acc: 0.5503, best: 0.5503, time: 0:01:51
 Epoch: 16, lr: 1.0e-02, train_loss: 1.3639, train_acc: 0.4970 test_loss: 1.2407, test_acc: 0.5489, best: 0.5503, time: 0:01:52
 Epoch: 17, lr: 1.0e-02, train_loss: 1.3511, train_acc: 0.5112 test_loss: 1.2165, test_acc: 0.5555, best: 0.5555, time: 0:01:52
 Epoch: 18, lr: 1.0e-02, train_loss: 1.3281, train_acc: 0.5118 test_loss: 1.2332, test_acc: 0.5474, best: 0.5555, time: 0:01:52
 Epoch: 19, lr: 1.0e-02, train_loss: 1.3095, train_acc: 0.5170 test_loss: 1.3116, test_acc: 0.5301, best: 0.5555, time: 0:01:51
 Epoch: 20, lr: 1.0e-02, train_loss: 1.2823, train_acc: 0.5350 test_loss: 1.1818, test_acc: 0.5783, best: 0.5783, time: 0:01:53
 Epoch: 21, lr: 1.0e-02, train_loss: 1.2584, train_acc: 0.5424 test_loss: 1.2697, test_acc: 0.5454, best: 0.5783, time: 0:01:54
 Epoch: 22, lr: 1.0e-02, train_loss: 1.2634, train_acc: 0.5414 test_loss: 1.1888, test_acc: 0.5794, best: 0.5794, time: 0:01:54
 Epoch: 23, lr: 1.0e-02, train_loss: 1.2131, train_acc: 0.5580 test_loss: 1.1954, test_acc: 0.5741, best: 0.5794, time: 0:01:51
 Epoch: 24, lr: 1.0e-02, train_loss: 1.2173, train_acc: 0.5494 test_loss: 1.1189, test_acc: 0.6004, best: 0.6004, time: 0:01:50
 Epoch: 25, lr: 1.0e-02, train_loss: 1.2055, train_acc: 0.5618 test_loss: 1.1103, test_acc: 0.6005, best: 0.6005, time: 0:01:54
 Epoch: 26, lr: 1.0e-02, train_loss: 1.1610, train_acc: 0.5774 test_loss: 1.1467, test_acc: 0.5971, best: 0.6005, time: 0:01:50
 Epoch: 27, lr: 1.0e-02, train_loss: 1.1628, train_acc: 0.5760 test_loss: 1.1556, test_acc: 0.5933, best: 0.6005, time: 0:01:50
 Epoch: 28, lr: 1.0e-02, train_loss: 1.1647, train_acc: 0.5838 test_loss: 1.1763, test_acc: 0.5896, best: 0.6005, time: 0:01:52
 Epoch: 29, lr: 1.0e-02, train_loss: 1.1192, train_acc: 0.5994 test_loss: 1.1253, test_acc: 0.6036, best: 0.6036, time: 0:01:49
 Epoch: 30, lr: 1.0e-02, train_loss: 1.1239, train_acc: 0.5862 test_loss: 1.0590, test_acc: 0.6260, best: 0.6260, time: 0:01:48
 Epoch: 31, lr: 1.0e-02, train_loss: 1.1079, train_acc: 0.5986 test_loss: 1.1300, test_acc: 0.6106, best: 0.6260, time: 0:01:46
 Epoch: 32, lr: 1.0e-02, train_loss: 1.0881, train_acc: 0.6110 test_loss: 1.1347, test_acc: 0.6168, best: 0.6260, time: 0:01:48
 Epoch: 33, lr: 1.0e-02, train_loss: 1.0792, train_acc: 0.6118 test_loss: 1.1970, test_acc: 0.5927, best: 0.6260, time: 0:01:52
 Epoch: 34, lr: 1.0e-02, train_loss: 1.0750, train_acc: 0.6076 test_loss: 1.1043, test_acc: 0.6085, best: 0.6260, time: 0:01:51
 Epoch: 35, lr: 1.0e-02, train_loss: 1.0571, train_acc: 0.6242 test_loss: 1.1109, test_acc: 0.6186, best: 0.6260, time: 0:01:52
 Epoch: 36, lr: 1.0e-02, train_loss: 1.0214, train_acc: 0.6340 test_loss: 1.0662, test_acc: 0.6361, best: 0.6361, time: 0:01:47
 Epoch: 37, lr: 1.0e-02, train_loss: 1.0172, train_acc: 0.6308 test_loss: 1.0708, test_acc: 0.6381, best: 0.6381, time: 0:01:54
 Epoch: 38, lr: 1.0e-02, train_loss: 1.0483, train_acc: 0.6216 test_loss: 1.0711, test_acc: 0.6379, best: 0.6381, time: 0:01:50
 Epoch: 39, lr: 1.0e-02, train_loss: 1.0108, train_acc: 0.6334 test_loss: 1.0225, test_acc: 0.6512, best: 0.6512, time: 0:01:51
 Epoch: 40, lr: 1.0e-02, train_loss: 0.9999, train_acc: 0.6422 test_loss: 1.0043, test_acc: 0.6526, best: 0.6526, time: 0:01:50
 Epoch: 41, lr: 1.0e-02, train_loss: 0.9928, train_acc: 0.6504 test_loss: 1.0609, test_acc: 0.6364, best: 0.6526, time: 0:01:51
 Epoch: 42, lr: 1.0e-02, train_loss: 0.9731, train_acc: 0.6486 test_loss: 1.0372, test_acc: 0.6471, best: 0.6526, time: 0:01:53
 Epoch: 43, lr: 1.0e-02, train_loss: 0.9668, train_acc: 0.6516 test_loss: 1.0710, test_acc: 0.6334, best: 0.6526, time: 0:01:54
 Epoch: 44, lr: 1.0e-02, train_loss: 0.9477, train_acc: 0.6580 test_loss: 1.0179, test_acc: 0.6544, best: 0.6544, time: 0:01:53
 Epoch: 45, lr: 1.0e-02, train_loss: 0.9383, train_acc: 0.6710 test_loss: 1.0431, test_acc: 0.6559, best: 0.6559, time: 0:01:52
 Epoch: 46, lr: 1.0e-02, train_loss: 0.9420, train_acc: 0.6690 test_loss: 1.0588, test_acc: 0.6590, best: 0.6590, time: 0:01:53
 Epoch: 47, lr: 1.0e-02, train_loss: 0.9109, train_acc: 0.6782 test_loss: 1.0377, test_acc: 0.6535, best: 0.6590, time: 0:01:51
 Epoch: 48, lr: 1.0e-02, train_loss: 0.9178, train_acc: 0.6756 test_loss: 1.0122, test_acc: 0.6573, best: 0.6590, time: 0:01:53
 Epoch: 49, lr: 1.0e-02, train_loss: 0.9143, train_acc: 0.6652 test_loss: 1.0355, test_acc: 0.6541, best: 0.6590, time: 0:01:53
 Epoch: 50, lr: 1.0e-02, train_loss: 0.8943, train_acc: 0.6858 test_loss: 1.0940, test_acc: 0.6486, best: 0.6590, time: 0:01:52
 Epoch: 51, lr: 1.0e-02, train_loss: 0.8684, train_acc: 0.6906 test_loss: 0.9789, test_acc: 0.6764, best: 0.6764, time: 0:01:53
 Epoch: 52, lr: 1.0e-02, train_loss: 0.8609, train_acc: 0.6900 test_loss: 1.0355, test_acc: 0.6590, best: 0.6764, time: 0:01:52
 Epoch: 53, lr: 1.0e-02, train_loss: 0.8558, train_acc: 0.6876 test_loss: 1.0089, test_acc: 0.6650, best: 0.6764, time: 0:01:53
 Epoch: 54, lr: 1.0e-02, train_loss: 0.8500, train_acc: 0.7014 test_loss: 1.0849, test_acc: 0.6442, best: 0.6764, time: 0:01:53
 Epoch: 55, lr: 1.0e-02, train_loss: 0.8453, train_acc: 0.7028 test_loss: 0.9963, test_acc: 0.6677, best: 0.6764, time: 0:01:53
 Epoch: 56, lr: 1.0e-02, train_loss: 0.8378, train_acc: 0.7080 test_loss: 1.0235, test_acc: 0.6583, best: 0.6764, time: 0:01:51
 Epoch: 57, lr: 1.0e-02, train_loss: 0.8453, train_acc: 0.6986 test_loss: 1.0562, test_acc: 0.6577, best: 0.6764, time: 0:01:52
 Epoch: 58, lr: 1.0e-02, train_loss: 0.8315, train_acc: 0.7072 test_loss: 1.1107, test_acc: 0.6581, best: 0.6764, time: 0:01:54
 Epoch: 59, lr: 1.0e-02, train_loss: 0.8312, train_acc: 0.7028 test_loss: 1.0879, test_acc: 0.6466, best: 0.6764, time: 0:01:53
 Epoch: 60, lr: 1.0e-02, train_loss: 0.8278, train_acc: 0.7098 test_loss: 1.0446, test_acc: 0.6594, best: 0.6764, time: 0:01:54
 Epoch: 61, lr: 1.0e-02, train_loss: 0.7974, train_acc: 0.7144 test_loss: 0.9819, test_acc: 0.6841, best: 0.6841, time: 0:01:54
 Epoch: 62, lr: 1.0e-02, train_loss: 0.7845, train_acc: 0.7228 test_loss: 1.0443, test_acc: 0.6734, best: 0.6841, time: 0:01:53
 Epoch: 63, lr: 1.0e-02, train_loss: 0.7909, train_acc: 0.7212 test_loss: 1.0227, test_acc: 0.6873, best: 0.6873, time: 0:01:50
 Epoch: 64, lr: 1.0e-02, train_loss: 0.7814, train_acc: 0.7216 test_loss: 1.0725, test_acc: 0.6741, best: 0.6873, time: 0:01:49
 Epoch: 65, lr: 1.0e-02, train_loss: 0.7726, train_acc: 0.7276 test_loss: 1.0082, test_acc: 0.6823, best: 0.6873, time: 0:01:53
 Epoch: 66, lr: 1.0e-02, train_loss: 0.7727, train_acc: 0.7294 test_loss: 1.0177, test_acc: 0.6804, best: 0.6873, time: 0:01:48
 Epoch: 67, lr: 1.0e-02, train_loss: 0.7520, train_acc: 0.7274 test_loss: 1.0246, test_acc: 0.6750, best: 0.6873, time: 0:01:50
 Epoch: 68, lr: 1.0e-02, train_loss: 0.7373, train_acc: 0.7472 test_loss: 1.0091, test_acc: 0.6909, best: 0.6909, time: 0:01:47
 Epoch: 69, lr: 1.0e-02, train_loss: 0.7264, train_acc: 0.7448 test_loss: 1.0338, test_acc: 0.6861, best: 0.6909, time: 0:01:49
 Epoch: 70, lr: 1.0e-02, train_loss: 0.7707, train_acc: 0.7266 test_loss: 1.1143, test_acc: 0.6620, best: 0.6909, time: 0:01:53
 Epoch: 71, lr: 1.0e-02, train_loss: 0.7089, train_acc: 0.7468 test_loss: 1.1440, test_acc: 0.6643, best: 0.6909, time: 0:01:53
 Epoch: 72, lr: 1.0e-02, train_loss: 0.6957, train_acc: 0.7556 test_loss: 1.0562, test_acc: 0.6763, best: 0.6909, time: 0:01:52
 Epoch: 73, lr: 1.0e-02, train_loss: 0.7314, train_acc: 0.7498 test_loss: 0.9332, test_acc: 0.6986, best: 0.6986, time: 0:01:52
 Epoch: 74, lr: 1.0e-02, train_loss: 0.7070, train_acc: 0.7500 test_loss: 0.9899, test_acc: 0.6887, best: 0.6986, time: 0:01:53
 Epoch: 75, lr: 1.0e-02, train_loss: 0.7253, train_acc: 0.7446 test_loss: 1.0247, test_acc: 0.6860, best: 0.6986, time: 0:01:52
 Epoch: 76, lr: 1.0e-02, train_loss: 0.6951, train_acc: 0.7570 test_loss: 1.0093, test_acc: 0.6960, best: 0.6986, time: 0:01:52
 Epoch: 77, lr: 1.0e-02, train_loss: 0.6928, train_acc: 0.7598 test_loss: 1.0366, test_acc: 0.6824, best: 0.6986, time: 0:01:51
 Epoch: 78, lr: 1.0e-02, train_loss: 0.6721, train_acc: 0.7662 test_loss: 1.0344, test_acc: 0.6866, best: 0.6986, time: 0:01:49
 Epoch: 79, lr: 1.0e-02, train_loss: 0.6996, train_acc: 0.7568 test_loss: 1.0094, test_acc: 0.6949, best: 0.6986, time: 0:01:46
 Epoch: 80, lr: 1.0e-02, train_loss: 0.6739, train_acc: 0.7630 test_loss: 1.0490, test_acc: 0.6955, best: 0.6986, time: 0:01:48
 Epoch: 81, lr: 1.0e-02, train_loss: 0.6645, train_acc: 0.7596 test_loss: 1.0473, test_acc: 0.6966, best: 0.6986, time: 0:01:51
 Epoch: 82, lr: 1.0e-02, train_loss: 0.6699, train_acc: 0.7608 test_loss: 1.0359, test_acc: 0.6907, best: 0.6986, time: 0:01:51
 Epoch: 83, lr: 1.0e-02, train_loss: 0.6731, train_acc: 0.7652 test_loss: 0.9977, test_acc: 0.7044, best: 0.7044, time: 0:01:54
 Epoch: 84, lr: 1.0e-02, train_loss: 0.6842, train_acc: 0.7630 test_loss: 1.0037, test_acc: 0.7046, best: 0.7046, time: 0:01:53
 Epoch: 85, lr: 1.0e-02, train_loss: 0.6379, train_acc: 0.7808 test_loss: 1.0528, test_acc: 0.6920, best: 0.7046, time: 0:01:52
 Epoch: 86, lr: 1.0e-02, train_loss: 0.6541, train_acc: 0.7726 test_loss: 1.0019, test_acc: 0.6936, best: 0.7046, time: 0:01:48
 Epoch: 87, lr: 1.0e-02, train_loss: 0.6353, train_acc: 0.7762 test_loss: 1.0957, test_acc: 0.6810, best: 0.7046, time: 0:01:50
 Epoch: 88, lr: 1.0e-02, train_loss: 0.6009, train_acc: 0.7932 test_loss: 1.0989, test_acc: 0.6927, best: 0.7046, time: 0:01:50
 Epoch: 89, lr: 1.0e-02, train_loss: 0.6350, train_acc: 0.7810 test_loss: 1.0952, test_acc: 0.6814, best: 0.7046, time: 0:01:51
 Epoch: 90, lr: 1.0e-02, train_loss: 0.6588, train_acc: 0.7800 test_loss: 1.0315, test_acc: 0.6916, best: 0.7046, time: 0:01:54
 Epoch: 91, lr: 1.0e-02, train_loss: 0.6262, train_acc: 0.7786 test_loss: 1.0365, test_acc: 0.6949, best: 0.7046, time: 0:01:51
 Epoch: 92, lr: 1.0e-02, train_loss: 0.6187, train_acc: 0.7864 test_loss: 0.9986, test_acc: 0.7093, best: 0.7093, time: 0:01:53
 Epoch: 93, lr: 1.0e-02, train_loss: 0.5990, train_acc: 0.7912 test_loss: 1.0687, test_acc: 0.6961, best: 0.7093, time: 0:01:49
 Epoch: 94, lr: 1.0e-02, train_loss: 0.5894, train_acc: 0.7974 test_loss: 1.1587, test_acc: 0.6800, best: 0.7093, time: 0:01:49
 Epoch: 95, lr: 1.0e-02, train_loss: 0.5973, train_acc: 0.7936 test_loss: 1.0831, test_acc: 0.6871, best: 0.7093, time: 0:01:52
 Epoch: 96, lr: 1.0e-02, train_loss: 0.5842, train_acc: 0.7966 test_loss: 1.0804, test_acc: 0.6881, best: 0.7093, time: 0:01:54
 Epoch: 97, lr: 1.0e-02, train_loss: 0.5937, train_acc: 0.7920 test_loss: 1.0384, test_acc: 0.7051, best: 0.7093, time: 0:01:53
 Epoch: 98, lr: 1.0e-02, train_loss: 0.6029, train_acc: 0.7924 test_loss: 1.0906, test_acc: 0.6897, best: 0.7093, time: 0:01:53
 Epoch: 99, lr: 1.0e-02, train_loss: 0.5818, train_acc: 0.8008 test_loss: 1.1725, test_acc: 0.6790, best: 0.7093, time: 0:01:53
 Epoch: 100, lr: 1.0e-02, train_loss: 0.5739, train_acc: 0.8056 test_loss: 1.1503, test_acc: 0.6883, best: 0.7093, time: 0:01:54
 Epoch: 101, lr: 1.0e-02, train_loss: 0.5719, train_acc: 0.7984 test_loss: 1.0492, test_acc: 0.7074, best: 0.7093, time: 0:01:52
 Epoch: 102, lr: 1.0e-02, train_loss: 0.5530, train_acc: 0.8088 test_loss: 1.1414, test_acc: 0.6967, best: 0.7093, time: 0:01:51
 Epoch: 103, lr: 1.0e-02, train_loss: 0.5725, train_acc: 0.8032 test_loss: 1.0785, test_acc: 0.6940, best: 0.7093, time: 0:01:48
 Epoch: 104, lr: 1.0e-02, train_loss: 0.5681, train_acc: 0.8056 test_loss: 1.0897, test_acc: 0.6915, best: 0.7093, time: 0:01:49
 Epoch: 105, lr: 1.0e-02, train_loss: 0.5559, train_acc: 0.8064 test_loss: 1.1130, test_acc: 0.6945, best: 0.7093, time: 0:01:52
 Epoch: 106, lr: 1.0e-02, train_loss: 0.5748, train_acc: 0.8022 test_loss: 1.1366, test_acc: 0.6941, best: 0.7093, time: 0:01:50
 Epoch: 107, lr: 1.0e-02, train_loss: 0.5329, train_acc: 0.8176 test_loss: 1.0289, test_acc: 0.7103, best: 0.7103, time: 0:01:49
 Epoch: 108, lr: 1.0e-02, train_loss: 0.5158, train_acc: 0.8278 test_loss: 1.1174, test_acc: 0.7009, best: 0.7103, time: 0:01:48
 Epoch: 109, lr: 1.0e-02, train_loss: 0.5297, train_acc: 0.8146 test_loss: 1.0727, test_acc: 0.7063, best: 0.7103, time: 0:01:48
 Epoch: 110, lr: 1.0e-02, train_loss: 0.5308, train_acc: 0.8190 test_loss: 1.0800, test_acc: 0.7027, best: 0.7103, time: 0:01:48
 Epoch: 111, lr: 1.0e-02, train_loss: 0.5489, train_acc: 0.8160 test_loss: 1.0394, test_acc: 0.7077, best: 0.7103, time: 0:01:50
 Epoch: 112, lr: 1.0e-02, train_loss: 0.5448, train_acc: 0.8178 test_loss: 1.0783, test_acc: 0.7103, best: 0.7103, time: 0:01:47
 Epoch: 113, lr: 1.0e-02, train_loss: 0.5139, train_acc: 0.8306 test_loss: 1.1961, test_acc: 0.6960, best: 0.7103, time: 0:01:47
 Epoch: 114, lr: 1.0e-02, train_loss: 0.5399, train_acc: 0.8130 test_loss: 1.0736, test_acc: 0.7175, best: 0.7175, time: 0:01:48
 Epoch: 115, lr: 1.0e-02, train_loss: 0.5057, train_acc: 0.8198 test_loss: 1.0833, test_acc: 0.7090, best: 0.7175, time: 0:01:48
 Epoch: 116, lr: 1.0e-02, train_loss: 0.5224, train_acc: 0.8164 test_loss: 1.0854, test_acc: 0.7027, best: 0.7175, time: 0:01:49
 Epoch: 117, lr: 1.0e-02, train_loss: 0.5094, train_acc: 0.8250 test_loss: 1.2149, test_acc: 0.6865, best: 0.7175, time: 0:01:49
 Epoch: 118, lr: 1.0e-02, train_loss: 0.4858, train_acc: 0.8268 test_loss: 1.0893, test_acc: 0.7017, best: 0.7175, time: 0:01:48
 Epoch: 119, lr: 1.0e-02, train_loss: 0.5165, train_acc: 0.8184 test_loss: 1.0160, test_acc: 0.7173, best: 0.7175, time: 0:01:53
 Epoch: 120, lr: 1.0e-02, train_loss: 0.5086, train_acc: 0.8246 test_loss: 1.0530, test_acc: 0.7090, best: 0.7175, time: 0:01:54
 Epoch: 121, lr: 1.0e-02, train_loss: 0.5230, train_acc: 0.8270 test_loss: 1.1049, test_acc: 0.7065, best: 0.7175, time: 0:01:53
 Epoch: 122, lr: 1.0e-02, train_loss: 0.5160, train_acc: 0.8176 test_loss: 1.0096, test_acc: 0.7206, best: 0.7206, time: 0:01:53
 Epoch: 123, lr: 1.0e-02, train_loss: 0.5116, train_acc: 0.8196 test_loss: 1.0944, test_acc: 0.7039, best: 0.7206, time: 0:01:52
 Epoch: 124, lr: 1.0e-02, train_loss: 0.4923, train_acc: 0.8312 test_loss: 1.0920, test_acc: 0.7070, best: 0.7206, time: 0:01:47
 Epoch: 125, lr: 1.0e-02, train_loss: 0.5092, train_acc: 0.8290 test_loss: 1.1474, test_acc: 0.7036, best: 0.7206, time: 0:01:48
 Epoch: 126, lr: 1.0e-02, train_loss: 0.4862, train_acc: 0.8360 test_loss: 1.0879, test_acc: 0.6994, best: 0.7206, time: 0:01:46
 Epoch: 127, lr: 1.0e-02, train_loss: 0.5000, train_acc: 0.8270 test_loss: 1.1381, test_acc: 0.7020, best: 0.7206, time: 0:01:51
 Epoch: 128, lr: 1.0e-02, train_loss: 0.4787, train_acc: 0.8334 test_loss: 1.1207, test_acc: 0.7105, best: 0.7206, time: 0:01:45
 Epoch: 129, lr: 1.0e-02, train_loss: 0.4908, train_acc: 0.8324 test_loss: 1.1380, test_acc: 0.7070, best: 0.7206, time: 0:01:49
 Epoch: 130, lr: 1.0e-02, train_loss: 0.4579, train_acc: 0.8392 test_loss: 1.1252, test_acc: 0.7064, best: 0.7206, time: 0:01:51
 Epoch: 131, lr: 1.0e-02, train_loss: 0.4601, train_acc: 0.8380 test_loss: 1.0898, test_acc: 0.7089, best: 0.7206, time: 0:01:49
 Epoch: 132, lr: 1.0e-02, train_loss: 0.4669, train_acc: 0.8392 test_loss: 1.2204, test_acc: 0.7057, best: 0.7206, time: 0:01:45
 Epoch: 133, lr: 1.0e-02, train_loss: 0.4666, train_acc: 0.8348 test_loss: 1.1260, test_acc: 0.7060, best: 0.7206, time: 0:01:49
 Epoch: 134, lr: 1.0e-02, train_loss: 0.4846, train_acc: 0.8380 test_loss: 1.1131, test_acc: 0.7180, best: 0.7206, time: 0:01:48
 Epoch: 135, lr: 1.0e-02, train_loss: 0.4778, train_acc: 0.8370 test_loss: 1.1333, test_acc: 0.7166, best: 0.7206, time: 0:01:49
 Epoch: 136, lr: 1.0e-02, train_loss: 0.4735, train_acc: 0.8394 test_loss: 1.1436, test_acc: 0.7056, best: 0.7206, time: 0:01:49
 Epoch: 137, lr: 1.0e-02, train_loss: 0.4509, train_acc: 0.8434 test_loss: 1.1633, test_acc: 0.7133, best: 0.7206, time: 0:01:45
 Epoch: 138, lr: 1.0e-02, train_loss: 0.4507, train_acc: 0.8508 test_loss: 1.1585, test_acc: 0.7089, best: 0.7206, time: 0:01:48
 Epoch: 139, lr: 1.0e-02, train_loss: 0.4697, train_acc: 0.8428 test_loss: 1.1878, test_acc: 0.7117, best: 0.7206, time: 0:01:49
 Epoch: 140, lr: 1.0e-02, train_loss: 0.4517, train_acc: 0.8478 test_loss: 1.1408, test_acc: 0.7090, best: 0.7206, time: 0:01:49
 Epoch: 141, lr: 1.0e-02, train_loss: 0.4391, train_acc: 0.8482 test_loss: 1.1828, test_acc: 0.7115, best: 0.7206, time: 0:01:52
 Epoch: 142, lr: 1.0e-02, train_loss: 0.4782, train_acc: 0.8348 test_loss: 1.1382, test_acc: 0.7110, best: 0.7206, time: 0:01:49
 Epoch: 143, lr: 1.0e-02, train_loss: 0.4628, train_acc: 0.8308 test_loss: 1.1372, test_acc: 0.7091, best: 0.7206, time: 0:01:48
 Epoch: 144, lr: 1.0e-02, train_loss: 0.4416, train_acc: 0.8448 test_loss: 1.0890, test_acc: 0.7188, best: 0.7206, time: 0:01:52
 Epoch: 145, lr: 1.0e-02, train_loss: 0.4567, train_acc: 0.8472 test_loss: 1.2452, test_acc: 0.6979, best: 0.7206, time: 0:01:51
 Epoch: 146, lr: 1.0e-02, train_loss: 0.4233, train_acc: 0.8558 test_loss: 1.1691, test_acc: 0.7111, best: 0.7206, time: 0:01:53
 Epoch: 147, lr: 1.0e-02, train_loss: 0.4325, train_acc: 0.8522 test_loss: 1.0960, test_acc: 0.7231, best: 0.7231, time: 0:01:54
 Epoch: 148, lr: 1.0e-02, train_loss: 0.4542, train_acc: 0.8428 test_loss: 1.1258, test_acc: 0.7191, best: 0.7231, time: 0:01:52
 Epoch: 149, lr: 1.0e-02, train_loss: 0.4218, train_acc: 0.8576 test_loss: 1.1653, test_acc: 0.7211, best: 0.7231, time: 0:01:53
 Epoch: 150, lr: 1.0e-02, train_loss: 0.4251, train_acc: 0.8552 test_loss: 1.2250, test_acc: 0.7086, best: 0.7231, time: 0:01:51
 Epoch: 151, lr: 1.0e-02, train_loss: 0.4534, train_acc: 0.8422 test_loss: 1.1378, test_acc: 0.7170, best: 0.7231, time: 0:01:48
 Epoch: 152, lr: 1.0e-02, train_loss: 0.4174, train_acc: 0.8550 test_loss: 1.1454, test_acc: 0.7220, best: 0.7231, time: 0:01:52
 Epoch: 153, lr: 1.0e-02, train_loss: 0.4252, train_acc: 0.8548 test_loss: 1.1387, test_acc: 0.7165, best: 0.7231, time: 0:01:50
 Epoch: 154, lr: 1.0e-02, train_loss: 0.4193, train_acc: 0.8608 test_loss: 1.1649, test_acc: 0.7120, best: 0.7231, time: 0:01:48
 Epoch: 155, lr: 1.0e-02, train_loss: 0.4171, train_acc: 0.8592 test_loss: 1.1432, test_acc: 0.7254, best: 0.7254, time: 0:01:54
 Epoch: 156, lr: 1.0e-02, train_loss: 0.4518, train_acc: 0.8496 test_loss: 1.1034, test_acc: 0.7254, best: 0.7254, time: 0:01:50
 Epoch: 157, lr: 1.0e-02, train_loss: 0.4346, train_acc: 0.8508 test_loss: 1.1014, test_acc: 0.7186, best: 0.7254, time: 0:01:48
 Epoch: 158, lr: 1.0e-02, train_loss: 0.4063, train_acc: 0.8630 test_loss: 1.1006, test_acc: 0.7274, best: 0.7274, time: 0:01:50
 Epoch: 159, lr: 1.0e-02, train_loss: 0.4174, train_acc: 0.8586 test_loss: 1.1394, test_acc: 0.7149, best: 0.7274, time: 0:01:48
 Epoch: 160, lr: 1.0e-02, train_loss: 0.3971, train_acc: 0.8642 test_loss: 1.1633, test_acc: 0.7074, best: 0.7274, time: 0:01:49
 Epoch: 161, lr: 1.0e-02, train_loss: 0.4205, train_acc: 0.8542 test_loss: 1.0871, test_acc: 0.7184, best: 0.7274, time: 0:01:46
 Epoch: 162, lr: 1.0e-02, train_loss: 0.4179, train_acc: 0.8554 test_loss: 1.1908, test_acc: 0.7131, best: 0.7274, time: 0:01:47
 Epoch: 163, lr: 1.0e-02, train_loss: 0.4177, train_acc: 0.8580 test_loss: 1.2136, test_acc: 0.7105, best: 0.7274, time: 0:01:50
 Epoch: 164, lr: 1.0e-02, train_loss: 0.4107, train_acc: 0.8610 test_loss: 1.2030, test_acc: 0.7107, best: 0.7274, time: 0:01:53
 Epoch: 165, lr: 1.0e-02, train_loss: 0.4120, train_acc: 0.8610 test_loss: 1.2249, test_acc: 0.7051, best: 0.7274, time: 0:01:50
 Epoch: 166, lr: 1.0e-02, train_loss: 0.4060, train_acc: 0.8598 test_loss: 1.1269, test_acc: 0.7198, best: 0.7274, time: 0:01:48
 Epoch: 167, lr: 1.0e-02, train_loss: 0.3912, train_acc: 0.8666 test_loss: 1.1277, test_acc: 0.7143, best: 0.7274, time: 0:01:53
 Epoch: 168, lr: 1.0e-02, train_loss: 0.3910, train_acc: 0.8632 test_loss: 1.2178, test_acc: 0.7281, best: 0.7281, time: 0:01:48
 Epoch: 169, lr: 1.0e-02, train_loss: 0.4017, train_acc: 0.8622 test_loss: 1.1232, test_acc: 0.7264, best: 0.7281, time: 0:01:51
 Epoch: 170, lr: 1.0e-02, train_loss: 0.3941, train_acc: 0.8710 test_loss: 1.1641, test_acc: 0.7115, best: 0.7281, time: 0:01:49
 Epoch: 171, lr: 1.0e-02, train_loss: 0.4107, train_acc: 0.8570 test_loss: 1.1458, test_acc: 0.7200, best: 0.7281, time: 0:01:48
 Epoch: 172, lr: 1.0e-02, train_loss: 0.4018, train_acc: 0.8640 test_loss: 1.1620, test_acc: 0.7296, best: 0.7296, time: 0:01:48
 Epoch: 173, lr: 1.0e-02, train_loss: 0.3813, train_acc: 0.8650 test_loss: 1.1782, test_acc: 0.7145, best: 0.7296, time: 0:01:49
 Epoch: 174, lr: 1.0e-02, train_loss: 0.3945, train_acc: 0.8676 test_loss: 1.2308, test_acc: 0.7089, best: 0.7296, time: 0:01:49
 Epoch: 175, lr: 1.0e-02, train_loss: 0.3856, train_acc: 0.8654 test_loss: 1.1394, test_acc: 0.7218, best: 0.7296, time: 0:01:51
 Epoch: 176, lr: 1.0e-02, train_loss: 0.4055, train_acc: 0.8588 test_loss: 1.0896, test_acc: 0.7272, best: 0.7296, time: 0:01:51
 Epoch: 177, lr: 1.0e-02, train_loss: 0.3855, train_acc: 0.8710 test_loss: 1.1540, test_acc: 0.7319, best: 0.7319, time: 0:01:47
 Epoch: 178, lr: 1.0e-02, train_loss: 0.3847, train_acc: 0.8688 test_loss: 1.0807, test_acc: 0.7326, best: 0.7326, time: 0:01:48
 Epoch: 179, lr: 1.0e-02, train_loss: 0.3712, train_acc: 0.8786 test_loss: 1.1247, test_acc: 0.7234, best: 0.7326, time: 0:01:51
 Epoch: 180, lr: 2.0e-03, train_loss: 0.3274, train_acc: 0.8888 test_loss: 1.0675, test_acc: 0.7430, best: 0.7430, time: 0:01:50
 Epoch: 181, lr: 2.0e-03, train_loss: 0.3278, train_acc: 0.8932 test_loss: 1.0094, test_acc: 0.7445, best: 0.7445, time: 0:01:47
 Epoch: 182, lr: 2.0e-03, train_loss: 0.3117, train_acc: 0.8912 test_loss: 1.0405, test_acc: 0.7469, best: 0.7469, time: 0:01:48
 Epoch: 183, lr: 2.0e-03, train_loss: 0.3026, train_acc: 0.8994 test_loss: 1.0608, test_acc: 0.7489, best: 0.7489, time: 0:01:48
 Epoch: 184, lr: 2.0e-03, train_loss: 0.3094, train_acc: 0.8966 test_loss: 1.0721, test_acc: 0.7472, best: 0.7489, time: 0:01:49
 Epoch: 185, lr: 2.0e-03, train_loss: 0.2867, train_acc: 0.9034 test_loss: 1.0568, test_acc: 0.7464, best: 0.7489, time: 0:01:52
 Epoch: 186, lr: 2.0e-03, train_loss: 0.2812, train_acc: 0.9042 test_loss: 1.0748, test_acc: 0.7425, best: 0.7489, time: 0:01:49
 Epoch: 187, lr: 2.0e-03, train_loss: 0.2667, train_acc: 0.9118 test_loss: 1.0644, test_acc: 0.7462, best: 0.7489, time: 0:01:47
 Epoch: 188, lr: 2.0e-03, train_loss: 0.2732, train_acc: 0.9078 test_loss: 1.0618, test_acc: 0.7482, best: 0.7489, time: 0:01:49
 Epoch: 189, lr: 2.0e-03, train_loss: 0.2583, train_acc: 0.9156 test_loss: 1.1003, test_acc: 0.7466, best: 0.7489, time: 0:01:50
 Epoch: 190, lr: 2.0e-03, train_loss: 0.2740, train_acc: 0.9102 test_loss: 1.1221, test_acc: 0.7431, best: 0.7489, time: 0:01:51
 Epoch: 191, lr: 2.0e-03, train_loss: 0.2723, train_acc: 0.9122 test_loss: 1.0826, test_acc: 0.7476, best: 0.7489, time: 0:01:50
 Epoch: 192, lr: 2.0e-03, train_loss: 0.2861, train_acc: 0.9042 test_loss: 1.0905, test_acc: 0.7446, best: 0.7489, time: 0:01:47
 Epoch: 193, lr: 2.0e-03, train_loss: 0.2708, train_acc: 0.9120 test_loss: 1.1081, test_acc: 0.7402, best: 0.7489, time: 0:01:48
 Epoch: 194, lr: 2.0e-03, train_loss: 0.2806, train_acc: 0.9050 test_loss: 1.1123, test_acc: 0.7414, best: 0.7489, time: 0:01:44
 Epoch: 195, lr: 2.0e-03, train_loss: 0.2723, train_acc: 0.9036 test_loss: 1.1153, test_acc: 0.7444, best: 0.7489, time: 0:01:52
 Epoch: 196, lr: 2.0e-03, train_loss: 0.2803, train_acc: 0.9052 test_loss: 1.1228, test_acc: 0.7430, best: 0.7489, time: 0:01:50
 Epoch: 197, lr: 2.0e-03, train_loss: 0.2824, train_acc: 0.9042 test_loss: 1.1155, test_acc: 0.7404, best: 0.7489, time: 0:01:51
 Epoch: 198, lr: 2.0e-03, train_loss: 0.2681, train_acc: 0.9106 test_loss: 1.1330, test_acc: 0.7391, best: 0.7489, time: 0:01:49
 Epoch: 199, lr: 2.0e-03, train_loss: 0.2597, train_acc: 0.9078 test_loss: 1.1024, test_acc: 0.7418, best: 0.7489, time: 0:01:51
 Epoch: 200, lr: 2.0e-03, train_loss: 0.2606, train_acc: 0.9124 test_loss: 1.0804, test_acc: 0.7486, best: 0.7489, time: 0:01:50
 Epoch: 201, lr: 2.0e-03, train_loss: 0.2510, train_acc: 0.9170 test_loss: 1.1307, test_acc: 0.7424, best: 0.7489, time: 0:01:51
 Epoch: 202, lr: 2.0e-03, train_loss: 0.2660, train_acc: 0.9100 test_loss: 1.1214, test_acc: 0.7470, best: 0.7489, time: 0:01:51
 Epoch: 203, lr: 2.0e-03, train_loss: 0.2778, train_acc: 0.9048 test_loss: 1.1249, test_acc: 0.7455, best: 0.7489, time: 0:01:53
 Epoch: 204, lr: 2.0e-03, train_loss: 0.2621, train_acc: 0.9092 test_loss: 1.1271, test_acc: 0.7421, best: 0.7489, time: 0:01:51
 Epoch: 205, lr: 2.0e-03, train_loss: 0.2694, train_acc: 0.9088 test_loss: 1.1079, test_acc: 0.7480, best: 0.7489, time: 0:01:47
 Epoch: 206, lr: 2.0e-03, train_loss: 0.2690, train_acc: 0.9106 test_loss: 1.1257, test_acc: 0.7434, best: 0.7489, time: 0:01:48
 Epoch: 207, lr: 2.0e-03, train_loss: 0.2517, train_acc: 0.9140 test_loss: 1.0857, test_acc: 0.7499, best: 0.7499, time: 0:01:54
 Epoch: 208, lr: 2.0e-03, train_loss: 0.2403, train_acc: 0.9172 test_loss: 1.1765, test_acc: 0.7445, best: 0.7499, time: 0:01:51
 Epoch: 209, lr: 2.0e-03, train_loss: 0.2611, train_acc: 0.9094 test_loss: 1.1321, test_acc: 0.7435, best: 0.7499, time: 0:01:51
 Epoch: 210, lr: 2.0e-03, train_loss: 0.2504, train_acc: 0.9148 test_loss: 1.1779, test_acc: 0.7409, best: 0.7499, time: 0:01:54
 Epoch: 211, lr: 2.0e-03, train_loss: 0.2743, train_acc: 0.9090 test_loss: 1.1256, test_acc: 0.7415, best: 0.7499, time: 0:01:51
 Epoch: 212, lr: 2.0e-03, train_loss: 0.2487, train_acc: 0.9168 test_loss: 1.1402, test_acc: 0.7471, best: 0.7499, time: 0:01:53
 Epoch: 213, lr: 2.0e-03, train_loss: 0.2466, train_acc: 0.9174 test_loss: 1.1068, test_acc: 0.7429, best: 0.7499, time: 0:01:53
 Epoch: 214, lr: 2.0e-03, train_loss: 0.2481, train_acc: 0.9158 test_loss: 1.1853, test_acc: 0.7401, best: 0.7499, time: 0:01:48
 Epoch: 215, lr: 2.0e-03, train_loss: 0.2525, train_acc: 0.9166 test_loss: 1.1528, test_acc: 0.7421, best: 0.7499, time: 0:01:46
 Epoch: 216, lr: 2.0e-03, train_loss: 0.2393, train_acc: 0.9238 test_loss: 1.1514, test_acc: 0.7419, best: 0.7499, time: 0:01:48
 Epoch: 217, lr: 2.0e-03, train_loss: 0.2479, train_acc: 0.9148 test_loss: 1.1833, test_acc: 0.7426, best: 0.7499, time: 0:01:47
 Epoch: 218, lr: 2.0e-03, train_loss: 0.2714, train_acc: 0.9080 test_loss: 1.1563, test_acc: 0.7386, best: 0.7499, time: 0:01:49
 Epoch: 219, lr: 2.0e-03, train_loss: 0.2396, train_acc: 0.9168 test_loss: 1.1818, test_acc: 0.7392, best: 0.7499, time: 0:01:48
 Epoch: 220, lr: 2.0e-03, train_loss: 0.2390, train_acc: 0.9212 test_loss: 1.1839, test_acc: 0.7379, best: 0.7499, time: 0:01:52
 Epoch: 221, lr: 2.0e-03, train_loss: 0.2524, train_acc: 0.9160 test_loss: 1.1724, test_acc: 0.7398, best: 0.7499, time: 0:01:53
 Epoch: 222, lr: 2.0e-03, train_loss: 0.2479, train_acc: 0.9174 test_loss: 1.1908, test_acc: 0.7392, best: 0.7499, time: 0:01:53
 Epoch: 223, lr: 2.0e-03, train_loss: 0.2751, train_acc: 0.8992 test_loss: 1.1565, test_acc: 0.7380, best: 0.7499, time: 0:01:48
 Epoch: 224, lr: 2.0e-03, train_loss: 0.2421, train_acc: 0.9154 test_loss: 1.1581, test_acc: 0.7386, best: 0.7499, time: 0:01:47
 Epoch: 225, lr: 2.0e-03, train_loss: 0.2463, train_acc: 0.9172 test_loss: 1.1986, test_acc: 0.7430, best: 0.7499, time: 0:01:49
 Epoch: 226, lr: 2.0e-03, train_loss: 0.2404, train_acc: 0.9176 test_loss: 1.1975, test_acc: 0.7411, best: 0.7499, time: 0:01:51
 Epoch: 227, lr: 2.0e-03, train_loss: 0.2473, train_acc: 0.9186 test_loss: 1.1461, test_acc: 0.7454, best: 0.7499, time: 0:01:49
 Epoch: 228, lr: 2.0e-03, train_loss: 0.2453, train_acc: 0.9186 test_loss: 1.1668, test_acc: 0.7450, best: 0.7499, time: 0:01:49
 Epoch: 229, lr: 2.0e-03, train_loss: 0.2394, train_acc: 0.9150 test_loss: 1.1466, test_acc: 0.7470, best: 0.7499, time: 0:01:48
 Epoch: 230, lr: 2.0e-03, train_loss: 0.2270, train_acc: 0.9234 test_loss: 1.1810, test_acc: 0.7471, best: 0.7499, time: 0:01:46
 Epoch: 231, lr: 2.0e-03, train_loss: 0.2415, train_acc: 0.9208 test_loss: 1.1563, test_acc: 0.7459, best: 0.7499, time: 0:01:51
 Epoch: 232, lr: 2.0e-03, train_loss: 0.2369, train_acc: 0.9216 test_loss: 1.1562, test_acc: 0.7479, best: 0.7499, time: 0:01:51
 Epoch: 233, lr: 2.0e-03, train_loss: 0.2477, train_acc: 0.9156 test_loss: 1.2135, test_acc: 0.7406, best: 0.7499, time: 0:01:47
 Epoch: 234, lr: 2.0e-03, train_loss: 0.2330, train_acc: 0.9212 test_loss: 1.1705, test_acc: 0.7465, best: 0.7499, time: 0:01:48
 Epoch: 235, lr: 2.0e-03, train_loss: 0.2309, train_acc: 0.9222 test_loss: 1.1439, test_acc: 0.7469, best: 0.7499, time: 0:01:45
 Epoch: 236, lr: 2.0e-03, train_loss: 0.2437, train_acc: 0.9144 test_loss: 1.1697, test_acc: 0.7430, best: 0.7499, time: 0:01:49
 Epoch: 237, lr: 2.0e-03, train_loss: 0.2435, train_acc: 0.9190 test_loss: 1.1933, test_acc: 0.7439, best: 0.7499, time: 0:01:52
 Epoch: 238, lr: 2.0e-03, train_loss: 0.2408, train_acc: 0.9160 test_loss: 1.1675, test_acc: 0.7421, best: 0.7499, time: 0:01:52
 Epoch: 239, lr: 2.0e-03, train_loss: 0.2549, train_acc: 0.9146 test_loss: 1.1701, test_acc: 0.7422, best: 0.7499, time: 0:01:54
 Epoch: 240, lr: 4.0e-04, train_loss: 0.2331, train_acc: 0.9198 test_loss: 1.1454, test_acc: 0.7470, best: 0.7499, time: 0:01:54
 Epoch: 241, lr: 4.0e-04, train_loss: 0.2185, train_acc: 0.9290 test_loss: 1.1542, test_acc: 0.7470, best: 0.7499, time: 0:01:53
 Epoch: 242, lr: 4.0e-04, train_loss: 0.2504, train_acc: 0.9188 test_loss: 1.1588, test_acc: 0.7454, best: 0.7499, time: 0:01:53
 Epoch: 243, lr: 4.0e-04, train_loss: 0.2243, train_acc: 0.9240 test_loss: 1.1231, test_acc: 0.7471, best: 0.7499, time: 0:01:51
 Epoch: 244, lr: 4.0e-04, train_loss: 0.2318, train_acc: 0.9206 test_loss: 1.1502, test_acc: 0.7454, best: 0.7499, time: 0:01:53
 Epoch: 245, lr: 4.0e-04, train_loss: 0.2345, train_acc: 0.9192 test_loss: 1.1452, test_acc: 0.7469, best: 0.7499, time: 0:01:50
 Epoch: 246, lr: 4.0e-04, train_loss: 0.2171, train_acc: 0.9222 test_loss: 1.1342, test_acc: 0.7472, best: 0.7499, time: 0:01:47
 Epoch: 247, lr: 4.0e-04, train_loss: 0.2274, train_acc: 0.9222 test_loss: 1.1259, test_acc: 0.7432, best: 0.7499, time: 0:01:47
 Epoch: 248, lr: 4.0e-04, train_loss: 0.2176, train_acc: 0.9230 test_loss: 1.1547, test_acc: 0.7496, best: 0.7499, time: 0:01:48
 Epoch: 249, lr: 4.0e-04, train_loss: 0.2180, train_acc: 0.9248 test_loss: 1.1279, test_acc: 0.7505, best: 0.7505, time: 0:01:48
 Epoch: 250, lr: 4.0e-04, train_loss: 0.2239, train_acc: 0.9200 test_loss: 1.1145, test_acc: 0.7496, best: 0.7505, time: 0:01:44
 Epoch: 251, lr: 4.0e-04, train_loss: 0.2283, train_acc: 0.9188 test_loss: 1.1563, test_acc: 0.7484, best: 0.7505, time: 0:01:47
 Epoch: 252, lr: 4.0e-04, train_loss: 0.2367, train_acc: 0.9212 test_loss: 1.1250, test_acc: 0.7484, best: 0.7505, time: 0:01:46
 Epoch: 253, lr: 4.0e-04, train_loss: 0.2212, train_acc: 0.9270 test_loss: 1.1349, test_acc: 0.7472, best: 0.7505, time: 0:01:42
 Epoch: 254, lr: 4.0e-04, train_loss: 0.2172, train_acc: 0.9262 test_loss: 1.1324, test_acc: 0.7488, best: 0.7505, time: 0:01:42
 Epoch: 255, lr: 4.0e-04, train_loss: 0.2192, train_acc: 0.9240 test_loss: 1.1206, test_acc: 0.7485, best: 0.7505, time: 0:01:43
 Epoch: 256, lr: 4.0e-04, train_loss: 0.2343, train_acc: 0.9144 test_loss: 1.1380, test_acc: 0.7475, best: 0.7505, time: 0:01:46
 Epoch: 257, lr: 4.0e-04, train_loss: 0.2080, train_acc: 0.9282 test_loss: 1.1223, test_acc: 0.7499, best: 0.7505, time: 0:01:47
 Epoch: 258, lr: 4.0e-04, train_loss: 0.2311, train_acc: 0.9224 test_loss: 1.1249, test_acc: 0.7522, best: 0.7522, time: 0:01:48
 Epoch: 259, lr: 4.0e-04, train_loss: 0.2270, train_acc: 0.9214 test_loss: 1.1130, test_acc: 0.7489, best: 0.7522, time: 0:01:48
 Epoch: 260, lr: 4.0e-04, train_loss: 0.2283, train_acc: 0.9234 test_loss: 1.1310, test_acc: 0.7476, best: 0.7522, time: 0:01:42
 Epoch: 261, lr: 4.0e-04, train_loss: 0.2215, train_acc: 0.9214 test_loss: 1.1380, test_acc: 0.7440, best: 0.7522, time: 0:01:47
 Epoch: 262, lr: 4.0e-04, train_loss: 0.2156, train_acc: 0.9282 test_loss: 1.1784, test_acc: 0.7436, best: 0.7522, time: 0:01:51
 Epoch: 263, lr: 4.0e-04, train_loss: 0.2262, train_acc: 0.9248 test_loss: 1.1556, test_acc: 0.7450, best: 0.7522, time: 0:01:45
 Epoch: 264, lr: 4.0e-04, train_loss: 0.2096, train_acc: 0.9262 test_loss: 1.1587, test_acc: 0.7476, best: 0.7522, time: 0:01:46
 Epoch: 265, lr: 4.0e-04, train_loss: 0.2173, train_acc: 0.9266 test_loss: 1.1356, test_acc: 0.7470, best: 0.7522, time: 0:01:50
 Epoch: 266, lr: 4.0e-04, train_loss: 0.2238, train_acc: 0.9230 test_loss: 1.1649, test_acc: 0.7435, best: 0.7522, time: 0:01:46
 Epoch: 267, lr: 4.0e-04, train_loss: 0.2300, train_acc: 0.9226 test_loss: 1.1334, test_acc: 0.7439, best: 0.7522, time: 0:01:48
 Epoch: 268, lr: 4.0e-04, train_loss: 0.1872, train_acc: 0.9362 test_loss: 1.1646, test_acc: 0.7472, best: 0.7522, time: 0:01:47
 Epoch: 269, lr: 4.0e-04, train_loss: 0.2278, train_acc: 0.9268 test_loss: 1.1673, test_acc: 0.7425, best: 0.7522, time: 0:01:47
 Epoch: 270, lr: 8.0e-05, train_loss: 0.2142, train_acc: 0.9308 test_loss: 1.1629, test_acc: 0.7458, best: 0.7522, time: 0:01:46
 Epoch: 271, lr: 8.0e-05, train_loss: 0.2221, train_acc: 0.9224 test_loss: 1.1418, test_acc: 0.7469, best: 0.7522, time: 0:01:46
 Epoch: 272, lr: 8.0e-05, train_loss: 0.2073, train_acc: 0.9280 test_loss: 1.1357, test_acc: 0.7441, best: 0.7522, time: 0:01:47
 Epoch: 273, lr: 8.0e-05, train_loss: 0.2064, train_acc: 0.9328 test_loss: 1.1500, test_acc: 0.7469, best: 0.7522, time: 0:01:46
 Epoch: 274, lr: 8.0e-05, train_loss: 0.2277, train_acc: 0.9260 test_loss: 1.1335, test_acc: 0.7458, best: 0.7522, time: 0:01:45
 Epoch: 275, lr: 8.0e-05, train_loss: 0.2209, train_acc: 0.9320 test_loss: 1.1552, test_acc: 0.7436, best: 0.7522, time: 0:01:50
 Epoch: 276, lr: 8.0e-05, train_loss: 0.2170, train_acc: 0.9296 test_loss: 1.1623, test_acc: 0.7474, best: 0.7522, time: 0:01:49
 Epoch: 277, lr: 8.0e-05, train_loss: 0.2297, train_acc: 0.9248 test_loss: 1.1304, test_acc: 0.7501, best: 0.7522, time: 0:01:46
 Epoch: 278, lr: 8.0e-05, train_loss: 0.2266, train_acc: 0.9248 test_loss: 1.1611, test_acc: 0.7429, best: 0.7522, time: 0:01:46
 Epoch: 279, lr: 8.0e-05, train_loss: 0.2156, train_acc: 0.9280 test_loss: 1.1670, test_acc: 0.7436, best: 0.7522, time: 0:01:46
 Epoch: 280, lr: 8.0e-05, train_loss: 0.2023, train_acc: 0.9326 test_loss: 1.1629, test_acc: 0.7426, best: 0.7522, time: 0:01:44
 Epoch: 281, lr: 8.0e-05, train_loss: 0.2060, train_acc: 0.9310 test_loss: 1.1570, test_acc: 0.7438, best: 0.7522, time: 0:01:46
 Epoch: 282, lr: 8.0e-05, train_loss: 0.2204, train_acc: 0.9260 test_loss: 1.1627, test_acc: 0.7451, best: 0.7522, time: 0:01:45
 Epoch: 283, lr: 8.0e-05, train_loss: 0.2068, train_acc: 0.9312 test_loss: 1.1727, test_acc: 0.7475, best: 0.7522, time: 0:01:42
 Epoch: 284, lr: 8.0e-05, train_loss: 0.2329, train_acc: 0.9200 test_loss: 1.1395, test_acc: 0.7478, best: 0.7522, time: 0:01:46
 Epoch: 285, lr: 8.0e-05, train_loss: 0.2126, train_acc: 0.9290 test_loss: 1.1263, test_acc: 0.7502, best: 0.7522, time: 0:01:46
 Epoch: 286, lr: 8.0e-05, train_loss: 0.2082, train_acc: 0.9276 test_loss: 1.1466, test_acc: 0.7474, best: 0.7522, time: 0:01:45
 Epoch: 287, lr: 8.0e-05, train_loss: 0.2181, train_acc: 0.9286 test_loss: 1.1507, test_acc: 0.7461, best: 0.7522, time: 0:01:44
 Epoch: 288, lr: 8.0e-05, train_loss: 0.2228, train_acc: 0.9286 test_loss: 1.1979, test_acc: 0.7436, best: 0.7522, time: 0:01:44
 Epoch: 289, lr: 8.0e-05, train_loss: 0.2236, train_acc: 0.9256 test_loss: 1.1902, test_acc: 0.7429, best: 0.7522, time: 0:01:43
 Epoch: 290, lr: 8.0e-05, train_loss: 0.2075, train_acc: 0.9318 test_loss: 1.1577, test_acc: 0.7414, best: 0.7522, time: 0:01:47
 Epoch: 291, lr: 8.0e-05, train_loss: 0.2263, train_acc: 0.9236 test_loss: 1.1400, test_acc: 0.7444, best: 0.7522, time: 0:01:47
 Epoch: 292, lr: 8.0e-05, train_loss: 0.2234, train_acc: 0.9236 test_loss: 1.2008, test_acc: 0.7421, best: 0.7522, time: 0:01:46
 Epoch: 293, lr: 8.0e-05, train_loss: 0.2251, train_acc: 0.9242 test_loss: 1.1460, test_acc: 0.7430, best: 0.7522, time: 0:01:47
 Epoch: 294, lr: 8.0e-05, train_loss: 0.2109, train_acc: 0.9290 test_loss: 1.1317, test_acc: 0.7450, best: 0.7522, time: 0:01:49
 Epoch: 295, lr: 8.0e-05, train_loss: 0.1994, train_acc: 0.9304 test_loss: 1.1615, test_acc: 0.7468, best: 0.7522, time: 0:01:48
 Epoch: 296, lr: 8.0e-05, train_loss: 0.2179, train_acc: 0.9268 test_loss: 1.1735, test_acc: 0.7470, best: 0.7522, time: 0:01:49
 Epoch: 297, lr: 8.0e-05, train_loss: 0.2068, train_acc: 0.9282 test_loss: 1.1734, test_acc: 0.7436, best: 0.7522, time: 0:01:46
 Epoch: 298, lr: 8.0e-05, train_loss: 0.2173, train_acc: 0.9282 test_loss: 1.1465, test_acc: 0.7458, best: 0.7522, time: 0:01:49
 Epoch: 299, lr: 8.0e-05, train_loss: 0.2048, train_acc: 0.9314 test_loss: 1.1440, test_acc: 0.7461, best: 0.7522, time: 0:01:46
 Highest accuracy: 0.7522