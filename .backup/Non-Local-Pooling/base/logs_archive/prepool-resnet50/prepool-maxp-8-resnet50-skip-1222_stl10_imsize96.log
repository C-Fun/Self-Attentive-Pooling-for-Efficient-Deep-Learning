
 Run on time: 2022-07-01 13:45:44.059627

 Architecture: prepool-maxp-8-resnet50-skip-1222

 Pool Config: {
    "arch": "resnet50",
    "conv1": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 1,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "pool": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "maxp",
            "_stride": 8,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "layer1": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 1,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "layer2": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 2,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "layer3": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 2,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "layer4": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 2,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    }
}

 Arguments:
	 gpu                  : True
	 log                  : True
	 seed                 : 0
	 momentum             : 0.9
	 amsgrad              : True
	 dataset              : STL10
	 batch_size           : 8
	 architecture         : PREPOOL-MAXP-8-RESNET50-SKIP-1222
	 im_size              : None
	 relu_threshold       : 4.0
	 learning_rate        : 0.01
	 pretrained_backbone  : 
	 pretrained_ann       : 
	 weight_decay         : 0.0
	 test_only            : False
	 epochs               : 300
	 lr_interval          : [180, 240, 270]
	 lr_reduce            : 5
	 optimizer            : SGD
	 dropout              : 0.2
	 kernel_size          : 3
	 dont_save            : False
	 visualize            : False
	 devices              : 0
 DataParallel(
  (module): Network(
    (net): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): MaxPool2d(kernel_size=8, stride=8, padding=0, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer2): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer3): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (3): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (4): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (5): Bottleneck(
          (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (layer4): Sequential(
        (0): Bottleneck(
          (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (downsample): Sequential(
            (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): Bottleneck(
          (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=2048, out_features=10, bias=True)
    )
  )
)
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0
)
 Epoch: 1, lr: 1.0e-02, train_loss: 3.9673, train_acc: 0.1174 test_loss: 4.8431, test_acc: 0.1354, best: 0.1354, time: 0:00:55
 Epoch: 2, lr: 1.0e-02, train_loss: 2.2955, train_acc: 0.1802 test_loss: 2.0511, test_acc: 0.2160, best: 0.2160, time: 0:00:55
 Epoch: 3, lr: 1.0e-02, train_loss: 2.0899, train_acc: 0.2046 test_loss: 2.0523, test_acc: 0.2631, best: 0.2631, time: 0:00:56
 Epoch: 4, lr: 1.0e-02, train_loss: 2.0203, train_acc: 0.2216 test_loss: 1.9371, test_acc: 0.3029, best: 0.3029, time: 0:00:56
 Epoch: 5, lr: 1.0e-02, train_loss: 1.9704, train_acc: 0.2398 test_loss: 1.8685, test_acc: 0.3003, best: 0.3029, time: 0:00:55
 Epoch: 6, lr: 1.0e-02, train_loss: 1.9530, train_acc: 0.2576 test_loss: 2.2521, test_acc: 0.3201, best: 0.3201, time: 0:00:56
 Epoch: 7, lr: 1.0e-02, train_loss: 1.9096, train_acc: 0.2756 test_loss: 1.9908, test_acc: 0.3152, best: 0.3201, time: 0:00:55
 Epoch: 8, lr: 1.0e-02, train_loss: 1.8668, train_acc: 0.2880 test_loss: 2.5255, test_acc: 0.3503, best: 0.3503, time: 0:00:56
 Epoch: 9, lr: 1.0e-02, train_loss: 1.8559, train_acc: 0.2932 test_loss: 3.4342, test_acc: 0.3590, best: 0.3590, time: 0:00:56
 Epoch: 10, lr: 1.0e-02, train_loss: 1.8122, train_acc: 0.3238 test_loss: 1.9381, test_acc: 0.3815, best: 0.3815, time: 0:00:56
 Epoch: 11, lr: 1.0e-02, train_loss: 1.8381, train_acc: 0.3002 test_loss: 1.6428, test_acc: 0.3663, best: 0.3815, time: 0:00:55
 Epoch: 12, lr: 1.0e-02, train_loss: 1.8637, train_acc: 0.2954 test_loss: 2.2636, test_acc: 0.3474, best: 0.3815, time: 0:00:55
 Epoch: 13, lr: 1.0e-02, train_loss: 1.8161, train_acc: 0.3228 test_loss: 4.0578, test_acc: 0.3660, best: 0.3815, time: 0:00:55
 Epoch: 14, lr: 1.0e-02, train_loss: 1.8172, train_acc: 0.3236 test_loss: 2.0776, test_acc: 0.3921, best: 0.3921, time: 0:00:56
 Epoch: 15, lr: 1.0e-02, train_loss: 1.7968, train_acc: 0.3278 test_loss: 2.1703, test_acc: 0.4296, best: 0.4296, time: 0:00:56
 Epoch: 16, lr: 1.0e-02, train_loss: 1.7653, train_acc: 0.3454 test_loss: 2.5627, test_acc: 0.3789, best: 0.4296, time: 0:00:55
 Epoch: 17, lr: 1.0e-02, train_loss: 1.7383, train_acc: 0.3514 test_loss: 2.0522, test_acc: 0.4091, best: 0.4296, time: 0:00:55
 Epoch: 18, lr: 1.0e-02, train_loss: 1.7581, train_acc: 0.3450 test_loss: 1.8666, test_acc: 0.4064, best: 0.4296, time: 0:00:55
 Epoch: 19, lr: 1.0e-02, train_loss: 1.7625, train_acc: 0.3388 test_loss: 2.5971, test_acc: 0.4032, best: 0.4296, time: 0:00:55
 Epoch: 20, lr: 1.0e-02, train_loss: 1.7608, train_acc: 0.3372 test_loss: 1.5044, test_acc: 0.4301, best: 0.4301, time: 0:00:56
 Epoch: 21, lr: 1.0e-02, train_loss: 1.7679, train_acc: 0.3410 test_loss: 1.6632, test_acc: 0.3797, best: 0.4301, time: 0:00:55
 Epoch: 22, lr: 1.0e-02, train_loss: 1.7675, train_acc: 0.3362 test_loss: 1.6484, test_acc: 0.4329, best: 0.4329, time: 0:00:56
 Epoch: 23, lr: 1.0e-02, train_loss: 1.7387, train_acc: 0.3500 test_loss: 1.6322, test_acc: 0.4159, best: 0.4329, time: 0:00:55
 Epoch: 24, lr: 1.0e-02, train_loss: 1.7954, train_acc: 0.3340 test_loss: 1.5932, test_acc: 0.4098, best: 0.4329, time: 0:00:55
 Epoch: 25, lr: 1.0e-02, train_loss: 1.7370, train_acc: 0.3482 test_loss: 1.5627, test_acc: 0.4392, best: 0.4392, time: 0:00:56
 Epoch: 26, lr: 1.0e-02, train_loss: 1.7234, train_acc: 0.3560 test_loss: 1.5123, test_acc: 0.4415, best: 0.4415, time: 0:00:56
 Epoch: 27, lr: 1.0e-02, train_loss: 1.7016, train_acc: 0.3538 test_loss: 1.4837, test_acc: 0.4338, best: 0.4415, time: 0:00:55
 Epoch: 28, lr: 1.0e-02, train_loss: 1.7055, train_acc: 0.3664 test_loss: 1.5129, test_acc: 0.4405, best: 0.4415, time: 0:00:55
 Epoch: 29, lr: 1.0e-02, train_loss: 1.6689, train_acc: 0.3770 test_loss: 1.4290, test_acc: 0.4614, best: 0.4614, time: 0:00:56
 Epoch: 30, lr: 1.0e-02, train_loss: 1.6566, train_acc: 0.3788 test_loss: 1.5322, test_acc: 0.4259, best: 0.4614, time: 0:00:55
 Epoch: 31, lr: 1.0e-02, train_loss: 1.6655, train_acc: 0.3700 test_loss: 1.6376, test_acc: 0.4586, best: 0.4614, time: 0:00:55
 Epoch: 32, lr: 1.0e-02, train_loss: 1.6325, train_acc: 0.3860 test_loss: 1.5256, test_acc: 0.4218, best: 0.4614, time: 0:00:55
 Epoch: 33, lr: 1.0e-02, train_loss: 1.6182, train_acc: 0.3928 test_loss: 1.5135, test_acc: 0.4484, best: 0.4614, time: 0:00:55
 Epoch: 34, lr: 1.0e-02, train_loss: 1.6214, train_acc: 0.3858 test_loss: 1.4999, test_acc: 0.4595, best: 0.4614, time: 0:00:55
 Epoch: 35, lr: 1.0e-02, train_loss: 1.6260, train_acc: 0.3888 test_loss: 1.4892, test_acc: 0.4576, best: 0.4614, time: 0:00:55
 Epoch: 36, lr: 1.0e-02, train_loss: 1.6119, train_acc: 0.3974 test_loss: 1.6408, test_acc: 0.4600, best: 0.4614, time: 0:00:55
 Epoch: 37, lr: 1.0e-02, train_loss: 1.6299, train_acc: 0.3788 test_loss: 2.0136, test_acc: 0.3971, best: 0.4614, time: 0:00:55
 Epoch: 38, lr: 1.0e-02, train_loss: 1.6488, train_acc: 0.3732 test_loss: 1.4827, test_acc: 0.4576, best: 0.4614, time: 0:00:55
 Epoch: 39, lr: 1.0e-02, train_loss: 1.6201, train_acc: 0.3996 test_loss: 1.8201, test_acc: 0.4401, best: 0.4614, time: 0:00:55
 Epoch: 40, lr: 1.0e-02, train_loss: 1.6022, train_acc: 0.4032 test_loss: 1.4785, test_acc: 0.4760, best: 0.4760, time: 0:00:55
 Epoch: 41, lr: 1.0e-02, train_loss: 1.5811, train_acc: 0.4094 test_loss: 1.4100, test_acc: 0.4935, best: 0.4935, time: 0:00:55
 Epoch: 42, lr: 1.0e-02, train_loss: 1.5901, train_acc: 0.4060 test_loss: 1.4469, test_acc: 0.4893, best: 0.4935, time: 0:00:55
 Epoch: 43, lr: 1.0e-02, train_loss: 1.5731, train_acc: 0.4210 test_loss: 1.8095, test_acc: 0.4734, best: 0.4935, time: 0:00:55
 Epoch: 44, lr: 1.0e-02, train_loss: 1.5574, train_acc: 0.4224 test_loss: 1.5037, test_acc: 0.5061, best: 0.5061, time: 0:00:55
 Epoch: 45, lr: 1.0e-02, train_loss: 1.5299, train_acc: 0.4330 test_loss: 1.4402, test_acc: 0.5041, best: 0.5061, time: 0:00:55
 Epoch: 46, lr: 1.0e-02, train_loss: 1.5423, train_acc: 0.4250 test_loss: 1.4012, test_acc: 0.4878, best: 0.5061, time: 0:00:55
 Epoch: 47, lr: 1.0e-02, train_loss: 1.5703, train_acc: 0.4086 test_loss: 1.4261, test_acc: 0.4983, best: 0.5061, time: 0:00:55
 Epoch: 48, lr: 1.0e-02, train_loss: 1.5356, train_acc: 0.4326 test_loss: 1.6452, test_acc: 0.4893, best: 0.5061, time: 0:00:55
 Epoch: 49, lr: 1.0e-02, train_loss: 1.5202, train_acc: 0.4320 test_loss: 1.5591, test_acc: 0.5045, best: 0.5061, time: 0:00:55
 Epoch: 50, lr: 1.0e-02, train_loss: 1.5124, train_acc: 0.4292 test_loss: 1.5148, test_acc: 0.4923, best: 0.5061, time: 0:00:55
 Epoch: 51, lr: 1.0e-02, train_loss: 1.5029, train_acc: 0.4384 test_loss: 1.5240, test_acc: 0.5046, best: 0.5061, time: 0:00:54
 Epoch: 52, lr: 1.0e-02, train_loss: 1.4910, train_acc: 0.4462 test_loss: 1.4402, test_acc: 0.5109, best: 0.5109, time: 0:00:55
 Epoch: 53, lr: 1.0e-02, train_loss: 1.4514, train_acc: 0.4630 test_loss: 1.3059, test_acc: 0.5339, best: 0.5339, time: 0:00:55
 Epoch: 54, lr: 1.0e-02, train_loss: 1.4468, train_acc: 0.4592 test_loss: 1.6991, test_acc: 0.5098, best: 0.5339, time: 0:00:54
 Epoch: 55, lr: 1.0e-02, train_loss: 1.4631, train_acc: 0.4534 test_loss: 1.5714, test_acc: 0.5051, best: 0.5339, time: 0:00:54
 Epoch: 56, lr: 1.0e-02, train_loss: 1.4443, train_acc: 0.4664 test_loss: 1.8679, test_acc: 0.5010, best: 0.5339, time: 0:00:54
 Epoch: 57, lr: 1.0e-02, train_loss: 1.4288, train_acc: 0.4768 test_loss: 1.7001, test_acc: 0.5140, best: 0.5339, time: 0:00:54
 Epoch: 58, lr: 1.0e-02, train_loss: 1.4368, train_acc: 0.4760 test_loss: 2.0706, test_acc: 0.5310, best: 0.5339, time: 0:00:54
 Epoch: 59, lr: 1.0e-02, train_loss: 1.4100, train_acc: 0.4758 test_loss: 1.6769, test_acc: 0.5470, best: 0.5470, time: 0:00:55
 Epoch: 60, lr: 1.0e-02, train_loss: 1.4123, train_acc: 0.4822 test_loss: 1.5028, test_acc: 0.5166, best: 0.5470, time: 0:00:54
 Epoch: 61, lr: 1.0e-02, train_loss: 1.3893, train_acc: 0.4890 test_loss: 1.9411, test_acc: 0.5339, best: 0.5470, time: 0:00:54
 Epoch: 62, lr: 1.0e-02, train_loss: 1.3917, train_acc: 0.4928 test_loss: 1.7782, test_acc: 0.5294, best: 0.5470, time: 0:00:54
 Epoch: 63, lr: 1.0e-02, train_loss: 1.4391, train_acc: 0.4646 test_loss: 1.3564, test_acc: 0.5176, best: 0.5470, time: 0:00:54
 Epoch: 64, lr: 1.0e-02, train_loss: 1.4413, train_acc: 0.4700 test_loss: 1.3021, test_acc: 0.5380, best: 0.5470, time: 0:00:54
 Epoch: 65, lr: 1.0e-02, train_loss: 1.4145, train_acc: 0.4770 test_loss: 1.2635, test_acc: 0.5413, best: 0.5470, time: 0:00:54
 Epoch: 66, lr: 1.0e-02, train_loss: 1.4168, train_acc: 0.4724 test_loss: 2.1070, test_acc: 0.5118, best: 0.5470, time: 0:00:54
 Epoch: 67, lr: 1.0e-02, train_loss: 1.4109, train_acc: 0.4856 test_loss: 1.3680, test_acc: 0.5333, best: 0.5470, time: 0:00:54
 Epoch: 68, lr: 1.0e-02, train_loss: 1.3733, train_acc: 0.4966 test_loss: 1.4757, test_acc: 0.5230, best: 0.5470, time: 0:00:54
 Epoch: 69, lr: 1.0e-02, train_loss: 1.3813, train_acc: 0.4942 test_loss: 1.6576, test_acc: 0.5317, best: 0.5470, time: 0:00:54
 Epoch: 70, lr: 1.0e-02, train_loss: 1.3677, train_acc: 0.5000 test_loss: 1.3662, test_acc: 0.5539, best: 0.5539, time: 0:00:55
 Epoch: 71, lr: 1.0e-02, train_loss: 1.3327, train_acc: 0.5096 test_loss: 1.2521, test_acc: 0.5690, best: 0.5690, time: 0:00:55
 Epoch: 72, lr: 1.0e-02, train_loss: 1.4209, train_acc: 0.4740 test_loss: 8.9403, test_acc: 0.4015, best: 0.5690, time: 0:00:54
 Epoch: 73, lr: 1.0e-02, train_loss: 1.3855, train_acc: 0.4854 test_loss: 1.2811, test_acc: 0.5495, best: 0.5690, time: 0:00:54
 Epoch: 74, lr: 1.0e-02, train_loss: 1.3547, train_acc: 0.4996 test_loss: 1.7577, test_acc: 0.5431, best: 0.5690, time: 0:00:54
 Epoch: 75, lr: 1.0e-02, train_loss: 1.3377, train_acc: 0.5102 test_loss: 1.4221, test_acc: 0.5479, best: 0.5690, time: 0:00:54
 Epoch: 76, lr: 1.0e-02, train_loss: 1.3281, train_acc: 0.5052 test_loss: 2.1422, test_acc: 0.4996, best: 0.5690, time: 0:00:54
 Epoch: 77, lr: 1.0e-02, train_loss: 1.3198, train_acc: 0.5228 test_loss: 1.5332, test_acc: 0.5564, best: 0.5690, time: 0:00:54
 Epoch: 78, lr: 1.0e-02, train_loss: 1.3127, train_acc: 0.5154 test_loss: 1.8380, test_acc: 0.5665, best: 0.5690, time: 0:00:54
 Epoch: 79, lr: 1.0e-02, train_loss: 1.2843, train_acc: 0.5278 test_loss: 1.7267, test_acc: 0.5380, best: 0.5690, time: 0:00:54
 Epoch: 80, lr: 1.0e-02, train_loss: 1.2904, train_acc: 0.5214 test_loss: 1.6643, test_acc: 0.5665, best: 0.5690, time: 0:00:54
 Epoch: 81, lr: 1.0e-02, train_loss: 1.2719, train_acc: 0.5334 test_loss: 1.9181, test_acc: 0.5869, best: 0.5869, time: 0:00:55
 Epoch: 82, lr: 1.0e-02, train_loss: 1.2774, train_acc: 0.5336 test_loss: 1.4665, test_acc: 0.5591, best: 0.5869, time: 0:00:54
 Epoch: 83, lr: 1.0e-02, train_loss: 1.2986, train_acc: 0.5158 test_loss: 2.0306, test_acc: 0.5566, best: 0.5869, time: 0:00:54
 Epoch: 84, lr: 1.0e-02, train_loss: 1.2954, train_acc: 0.5324 test_loss: 1.5474, test_acc: 0.5715, best: 0.5869, time: 0:00:54
 Epoch: 85, lr: 1.0e-02, train_loss: 1.3152, train_acc: 0.5194 test_loss: 1.3020, test_acc: 0.5705, best: 0.5869, time: 0:00:54
 Epoch: 86, lr: 1.0e-02, train_loss: 1.3335, train_acc: 0.5076 test_loss: 1.4864, test_acc: 0.5457, best: 0.5869, time: 0:00:54
 Epoch: 87, lr: 1.0e-02, train_loss: 1.3090, train_acc: 0.5230 test_loss: 1.4700, test_acc: 0.5770, best: 0.5869, time: 0:00:54
 Epoch: 88, lr: 1.0e-02, train_loss: 1.2928, train_acc: 0.5234 test_loss: 1.3002, test_acc: 0.5794, best: 0.5869, time: 0:00:54
 Epoch: 89, lr: 1.0e-02, train_loss: 1.3047, train_acc: 0.5338 test_loss: 1.2784, test_acc: 0.5899, best: 0.5899, time: 0:00:55
 Epoch: 90, lr: 1.0e-02, train_loss: 1.3311, train_acc: 0.5166 test_loss: 4.8581, test_acc: 0.4831, best: 0.5899, time: 0:00:54
 Epoch: 91, lr: 1.0e-02, train_loss: 1.4447, train_acc: 0.4730 test_loss: 2.8318, test_acc: 0.5272, best: 0.5899, time: 0:00:54
 Epoch: 92, lr: 1.0e-02, train_loss: 1.3426, train_acc: 0.5054 test_loss: 3.5159, test_acc: 0.5284, best: 0.5899, time: 0:00:54
 Epoch: 93, lr: 1.0e-02, train_loss: 1.3014, train_acc: 0.5304 test_loss: 1.8496, test_acc: 0.5323, best: 0.5899, time: 0:00:54
 Epoch: 94, lr: 1.0e-02, train_loss: 1.2462, train_acc: 0.5406 test_loss: 1.2272, test_acc: 0.5810, best: 0.5899, time: 0:00:54
 Epoch: 95, lr: 1.0e-02, train_loss: 1.2553, train_acc: 0.5402 test_loss: 3.6731, test_acc: 0.5405, best: 0.5899, time: 0:00:54
 Epoch: 96, lr: 1.0e-02, train_loss: 1.2480, train_acc: 0.5416 test_loss: 2.4021, test_acc: 0.5375, best: 0.5899, time: 0:00:54
 Epoch: 97, lr: 1.0e-02, train_loss: 1.2424, train_acc: 0.5484 test_loss: 1.2972, test_acc: 0.5791, best: 0.5899, time: 0:00:54
 Epoch: 98, lr: 1.0e-02, train_loss: 1.2855, train_acc: 0.5294 test_loss: 3.5333, test_acc: 0.5505, best: 0.5899, time: 0:00:54
 Epoch: 99, lr: 1.0e-02, train_loss: 1.2586, train_acc: 0.5330 test_loss: 3.3622, test_acc: 0.5566, best: 0.5899, time: 0:00:54
 Epoch: 100, lr: 1.0e-02, train_loss: 1.2800, train_acc: 0.5326 test_loss: 2.6016, test_acc: 0.5475, best: 0.5899, time: 0:00:54
 Epoch: 101, lr: 1.0e-02, train_loss: 1.3017, train_acc: 0.5196 test_loss: 1.5552, test_acc: 0.5651, best: 0.5899, time: 0:00:54
 Epoch: 102, lr: 1.0e-02, train_loss: 1.2158, train_acc: 0.5460 test_loss: 1.5424, test_acc: 0.5945, best: 0.5945, time: 0:00:55
 Epoch: 103, lr: 1.0e-02, train_loss: 1.2130, train_acc: 0.5580 test_loss: 2.0050, test_acc: 0.5654, best: 0.5945, time: 0:00:54
 Epoch: 104, lr: 1.0e-02, train_loss: 1.2205, train_acc: 0.5620 test_loss: 3.0726, test_acc: 0.5323, best: 0.5945, time: 0:00:54
 Epoch: 105, lr: 1.0e-02, train_loss: 1.2006, train_acc: 0.5556 test_loss: 1.1721, test_acc: 0.6050, best: 0.6050, time: 0:00:55
 Epoch: 106, lr: 1.0e-02, train_loss: 1.1952, train_acc: 0.5688 test_loss: 1.4121, test_acc: 0.5821, best: 0.6050, time: 0:00:54
 Epoch: 107, lr: 1.0e-02, train_loss: 1.1828, train_acc: 0.5696 test_loss: 1.2344, test_acc: 0.5964, best: 0.6050, time: 0:00:54
 Epoch: 108, lr: 1.0e-02, train_loss: 1.2301, train_acc: 0.5540 test_loss: 1.3705, test_acc: 0.5849, best: 0.6050, time: 0:00:54
 Epoch: 109, lr: 1.0e-02, train_loss: 1.2928, train_acc: 0.5304 test_loss: 2.3372, test_acc: 0.5704, best: 0.6050, time: 0:00:54
 Epoch: 110, lr: 1.0e-02, train_loss: 1.2166, train_acc: 0.5576 test_loss: 1.6385, test_acc: 0.5827, best: 0.6050, time: 0:00:54
 Epoch: 111, lr: 1.0e-02, train_loss: 1.1708, train_acc: 0.5714 test_loss: 1.2914, test_acc: 0.5966, best: 0.6050, time: 0:00:54
 Epoch: 112, lr: 1.0e-02, train_loss: 1.2217, train_acc: 0.5542 test_loss: 1.5653, test_acc: 0.5881, best: 0.6050, time: 0:00:54
 Epoch: 113, lr: 1.0e-02, train_loss: 1.1758, train_acc: 0.5712 test_loss: 1.7269, test_acc: 0.5756, best: 0.6050, time: 0:00:54
 Epoch: 114, lr: 1.0e-02, train_loss: 1.1919, train_acc: 0.5672 test_loss: 1.2564, test_acc: 0.6000, best: 0.6050, time: 0:00:54
 Epoch: 115, lr: 1.0e-02, train_loss: 1.2214, train_acc: 0.5582 test_loss: 1.7612, test_acc: 0.5700, best: 0.6050, time: 0:00:54
 Epoch: 116, lr: 1.0e-02, train_loss: 1.1933, train_acc: 0.5726 test_loss: 1.5595, test_acc: 0.5939, best: 0.6050, time: 0:00:54
 Epoch: 117, lr: 1.0e-02, train_loss: 1.1695, train_acc: 0.5826 test_loss: 1.1818, test_acc: 0.6039, best: 0.6050, time: 0:00:54
 Epoch: 118, lr: 1.0e-02, train_loss: 1.2947, train_acc: 0.5278 test_loss: 2.5296, test_acc: 0.4730, best: 0.6050, time: 0:00:54
 Epoch: 119, lr: 1.0e-02, train_loss: 1.3152, train_acc: 0.5230 test_loss: 1.2608, test_acc: 0.5797, best: 0.6050, time: 0:00:54
 Epoch: 120, lr: 1.0e-02, train_loss: 1.2605, train_acc: 0.5386 test_loss: 1.2586, test_acc: 0.5797, best: 0.6050, time: 0:00:54
 Epoch: 121, lr: 1.0e-02, train_loss: 1.2106, train_acc: 0.5612 test_loss: 1.7198, test_acc: 0.5741, best: 0.6050, time: 0:00:54
 Epoch: 122, lr: 1.0e-02, train_loss: 1.2256, train_acc: 0.5526 test_loss: 1.2749, test_acc: 0.5984, best: 0.6050, time: 0:00:54
 Epoch: 123, lr: 1.0e-02, train_loss: 1.2317, train_acc: 0.5578 test_loss: 1.1657, test_acc: 0.6009, best: 0.6050, time: 0:00:54
 Epoch: 124, lr: 1.0e-02, train_loss: 1.1939, train_acc: 0.5694 test_loss: 1.2970, test_acc: 0.6058, best: 0.6058, time: 0:00:55
 Epoch: 125, lr: 1.0e-02, train_loss: 1.1487, train_acc: 0.5854 test_loss: 1.4701, test_acc: 0.5914, best: 0.6058, time: 0:00:54
 Epoch: 126, lr: 1.0e-02, train_loss: 1.1831, train_acc: 0.5610 test_loss: 1.4762, test_acc: 0.5656, best: 0.6058, time: 0:00:54
 Epoch: 127, lr: 1.0e-02, train_loss: 1.1817, train_acc: 0.5720 test_loss: 1.2191, test_acc: 0.6054, best: 0.6058, time: 0:00:54
 Epoch: 128, lr: 1.0e-02, train_loss: 1.1366, train_acc: 0.5824 test_loss: 2.2516, test_acc: 0.5667, best: 0.6058, time: 0:00:54
 Epoch: 129, lr: 1.0e-02, train_loss: 1.1572, train_acc: 0.5778 test_loss: 1.8913, test_acc: 0.5865, best: 0.6058, time: 0:00:54
 Epoch: 130, lr: 1.0e-02, train_loss: 1.1263, train_acc: 0.5950 test_loss: 1.1830, test_acc: 0.6159, best: 0.6159, time: 0:00:55
 Epoch: 131, lr: 1.0e-02, train_loss: 1.0686, train_acc: 0.6098 test_loss: 2.1270, test_acc: 0.6056, best: 0.6159, time: 0:00:54
 Epoch: 132, lr: 1.0e-02, train_loss: 1.1176, train_acc: 0.5886 test_loss: 1.7378, test_acc: 0.5958, best: 0.6159, time: 0:00:54
 Epoch: 133, lr: 1.0e-02, train_loss: 1.0822, train_acc: 0.6092 test_loss: 1.2860, test_acc: 0.6045, best: 0.6159, time: 0:00:54
 Epoch: 134, lr: 1.0e-02, train_loss: 1.1166, train_acc: 0.5986 test_loss: 1.2805, test_acc: 0.6125, best: 0.6159, time: 0:00:54
 Epoch: 135, lr: 1.0e-02, train_loss: 1.0976, train_acc: 0.5976 test_loss: 1.3089, test_acc: 0.6162, best: 0.6162, time: 0:00:55
 Epoch: 136, lr: 1.0e-02, train_loss: 1.0678, train_acc: 0.6156 test_loss: 1.1163, test_acc: 0.6321, best: 0.6321, time: 0:00:55
 Epoch: 137, lr: 1.0e-02, train_loss: 1.0673, train_acc: 0.6188 test_loss: 1.5789, test_acc: 0.6156, best: 0.6321, time: 0:00:54
 Epoch: 138, lr: 1.0e-02, train_loss: 1.0958, train_acc: 0.5976 test_loss: 1.7368, test_acc: 0.6232, best: 0.6321, time: 0:00:54
 Epoch: 139, lr: 1.0e-02, train_loss: 1.0640, train_acc: 0.6160 test_loss: 3.7793, test_acc: 0.5981, best: 0.6321, time: 0:00:54
 Epoch: 140, lr: 1.0e-02, train_loss: 1.0983, train_acc: 0.6062 test_loss: 1.6736, test_acc: 0.6019, best: 0.6321, time: 0:00:54
 Epoch: 141, lr: 1.0e-02, train_loss: 1.0977, train_acc: 0.6016 test_loss: 1.3073, test_acc: 0.6241, best: 0.6321, time: 0:00:54
 Epoch: 142, lr: 1.0e-02, train_loss: 1.0251, train_acc: 0.6300 test_loss: 1.3234, test_acc: 0.6461, best: 0.6461, time: 0:00:55
 Epoch: 143, lr: 1.0e-02, train_loss: 1.0385, train_acc: 0.6250 test_loss: 1.2124, test_acc: 0.6398, best: 0.6461, time: 0:00:54
 Epoch: 144, lr: 1.0e-02, train_loss: 1.0631, train_acc: 0.6146 test_loss: 1.3369, test_acc: 0.6320, best: 0.6461, time: 0:00:54
 Epoch: 145, lr: 1.0e-02, train_loss: 1.0543, train_acc: 0.6100 test_loss: 1.7947, test_acc: 0.6118, best: 0.6461, time: 0:00:54
 Epoch: 146, lr: 1.0e-02, train_loss: 1.0345, train_acc: 0.6218 test_loss: 1.4535, test_acc: 0.6076, best: 0.6461, time: 0:00:54
 Epoch: 147, lr: 1.0e-02, train_loss: 1.0324, train_acc: 0.6194 test_loss: 1.1077, test_acc: 0.6304, best: 0.6461, time: 0:00:54
 Epoch: 148, lr: 1.0e-02, train_loss: 1.0450, train_acc: 0.6166 test_loss: 1.1538, test_acc: 0.6399, best: 0.6461, time: 0:00:54
 Epoch: 149, lr: 1.0e-02, train_loss: 1.0287, train_acc: 0.6284 test_loss: 1.2008, test_acc: 0.6350, best: 0.6461, time: 0:00:54
 Epoch: 150, lr: 1.0e-02, train_loss: 0.9915, train_acc: 0.6396 test_loss: 1.1190, test_acc: 0.6508, best: 0.6508, time: 0:00:55
 Epoch: 151, lr: 1.0e-02, train_loss: 0.9693, train_acc: 0.6452 test_loss: 1.2718, test_acc: 0.6206, best: 0.6508, time: 0:00:54
 Epoch: 152, lr: 1.0e-02, train_loss: 0.9607, train_acc: 0.6584 test_loss: 1.1025, test_acc: 0.6381, best: 0.6508, time: 0:00:54
 Epoch: 153, lr: 1.0e-02, train_loss: 1.0042, train_acc: 0.6400 test_loss: 1.3484, test_acc: 0.6389, best: 0.6508, time: 0:00:54
 Epoch: 154, lr: 1.0e-02, train_loss: 0.9737, train_acc: 0.6422 test_loss: 1.2013, test_acc: 0.6301, best: 0.6508, time: 0:00:54
 Epoch: 155, lr: 1.0e-02, train_loss: 1.0318, train_acc: 0.6292 test_loss: 1.3759, test_acc: 0.6350, best: 0.6508, time: 0:00:54
 Epoch: 156, lr: 1.0e-02, train_loss: 0.9950, train_acc: 0.6470 test_loss: 1.1634, test_acc: 0.6512, best: 0.6512, time: 0:00:55
 Epoch: 157, lr: 1.0e-02, train_loss: 1.0059, train_acc: 0.6352 test_loss: 1.1495, test_acc: 0.6464, best: 0.6512, time: 0:00:54
 Epoch: 158, lr: 1.0e-02, train_loss: 0.9886, train_acc: 0.6414 test_loss: 1.1448, test_acc: 0.6250, best: 0.6512, time: 0:00:54
 Epoch: 159, lr: 1.0e-02, train_loss: 0.9631, train_acc: 0.6550 test_loss: 1.4432, test_acc: 0.6345, best: 0.6512, time: 0:00:54
 Epoch: 160, lr: 1.0e-02, train_loss: 1.0053, train_acc: 0.6428 test_loss: 1.1504, test_acc: 0.6348, best: 0.6512, time: 0:00:54
 Epoch: 161, lr: 1.0e-02, train_loss: 0.9647, train_acc: 0.6556 test_loss: 1.2665, test_acc: 0.6251, best: 0.6512, time: 0:00:54
 Epoch: 162, lr: 1.0e-02, train_loss: 0.9960, train_acc: 0.6406 test_loss: 2.8607, test_acc: 0.6121, best: 0.6512, time: 0:00:54
 Epoch: 163, lr: 1.0e-02, train_loss: 0.9466, train_acc: 0.6632 test_loss: 2.3092, test_acc: 0.6224, best: 0.6512, time: 0:00:54
 Epoch: 164, lr: 1.0e-02, train_loss: 0.9702, train_acc: 0.6558 test_loss: 1.5411, test_acc: 0.6471, best: 0.6512, time: 0:00:54
 Epoch: 165, lr: 1.0e-02, train_loss: 0.9714, train_acc: 0.6562 test_loss: 1.6384, test_acc: 0.6256, best: 0.6512, time: 0:00:54
 Epoch: 166, lr: 1.0e-02, train_loss: 0.9461, train_acc: 0.6660 test_loss: 1.1543, test_acc: 0.6474, best: 0.6512, time: 0:00:54
 Epoch: 167, lr: 1.0e-02, train_loss: 0.9397, train_acc: 0.6544 test_loss: 1.1898, test_acc: 0.6421, best: 0.6512, time: 0:00:54
 Epoch: 168, lr: 1.0e-02, train_loss: 1.0755, train_acc: 0.6140 test_loss: 1.2487, test_acc: 0.6348, best: 0.6512, time: 0:00:54
 Epoch: 169, lr: 1.0e-02, train_loss: 1.0155, train_acc: 0.6340 test_loss: 1.4423, test_acc: 0.6281, best: 0.6512, time: 0:00:54
 Epoch: 170, lr: 1.0e-02, train_loss: 0.9656, train_acc: 0.6576 test_loss: 1.3359, test_acc: 0.6051, best: 0.6512, time: 0:00:54
 Epoch: 171, lr: 1.0e-02, train_loss: 0.9391, train_acc: 0.6644 test_loss: 1.4827, test_acc: 0.6298, best: 0.6512, time: 0:00:54
 Epoch: 172, lr: 1.0e-02, train_loss: 0.9287, train_acc: 0.6656 test_loss: 1.1511, test_acc: 0.6448, best: 0.6512, time: 0:00:54
 Epoch: 173, lr: 1.0e-02, train_loss: 0.9106, train_acc: 0.6696 test_loss: 1.2356, test_acc: 0.6374, best: 0.6512, time: 0:00:54
 Epoch: 174, lr: 1.0e-02, train_loss: 0.9000, train_acc: 0.6838 test_loss: 1.2885, test_acc: 0.6350, best: 0.6512, time: 0:00:54
 Epoch: 175, lr: 1.0e-02, train_loss: 0.9211, train_acc: 0.6652 test_loss: 1.0380, test_acc: 0.6534, best: 0.6534, time: 0:00:55
 Epoch: 176, lr: 1.0e-02, train_loss: 0.9323, train_acc: 0.6668 test_loss: 1.2746, test_acc: 0.6401, best: 0.6534, time: 0:00:54
 Epoch: 177, lr: 1.0e-02, train_loss: 0.9191, train_acc: 0.6728 test_loss: 1.1689, test_acc: 0.6364, best: 0.6534, time: 0:00:54
 Epoch: 178, lr: 1.0e-02, train_loss: 0.9048, train_acc: 0.6708 test_loss: 1.1315, test_acc: 0.6428, best: 0.6534, time: 0:00:54
 Epoch: 179, lr: 1.0e-02, train_loss: 0.8911, train_acc: 0.6796 test_loss: 1.0722, test_acc: 0.6528, best: 0.6534, time: 0:00:54
 Epoch: 180, lr: 2.0e-03, train_loss: 0.8253, train_acc: 0.7084 test_loss: 1.0767, test_acc: 0.6731, best: 0.6731, time: 0:00:55
 Epoch: 181, lr: 2.0e-03, train_loss: 0.7902, train_acc: 0.7088 test_loss: 1.1476, test_acc: 0.6693, best: 0.6731, time: 0:00:54
 Epoch: 182, lr: 2.0e-03, train_loss: 0.7759, train_acc: 0.7202 test_loss: 1.1694, test_acc: 0.6614, best: 0.6731, time: 0:00:54
 Epoch: 183, lr: 2.0e-03, train_loss: 0.7761, train_acc: 0.7190 test_loss: 1.1756, test_acc: 0.6680, best: 0.6731, time: 0:00:54
 Epoch: 184, lr: 2.0e-03, train_loss: 0.7923, train_acc: 0.7130 test_loss: 1.0761, test_acc: 0.6691, best: 0.6731, time: 0:00:54
 Epoch: 185, lr: 2.0e-03, train_loss: 0.7433, train_acc: 0.7406 test_loss: 1.1400, test_acc: 0.6673, best: 0.6731, time: 0:00:54
 Epoch: 186, lr: 2.0e-03, train_loss: 0.7455, train_acc: 0.7372 test_loss: 1.1968, test_acc: 0.6655, best: 0.6731, time: 0:00:54
 Epoch: 187, lr: 2.0e-03, train_loss: 0.7403, train_acc: 0.7324 test_loss: 1.1288, test_acc: 0.6671, best: 0.6731, time: 0:00:54
 Epoch: 188, lr: 2.0e-03, train_loss: 0.7264, train_acc: 0.7420 test_loss: 1.1340, test_acc: 0.6709, best: 0.6731, time: 0:00:54
 Epoch: 189, lr: 2.0e-03, train_loss: 0.7446, train_acc: 0.7362 test_loss: 1.2438, test_acc: 0.6669, best: 0.6731, time: 0:00:54
 Epoch: 190, lr: 2.0e-03, train_loss: 0.7626, train_acc: 0.7268 test_loss: 1.4421, test_acc: 0.6656, best: 0.6731, time: 0:00:54
 Epoch: 191, lr: 2.0e-03, train_loss: 0.7433, train_acc: 0.7346 test_loss: 1.1673, test_acc: 0.6723, best: 0.6731, time: 0:00:54
 Epoch: 192, lr: 2.0e-03, train_loss: 0.7264, train_acc: 0.7368 test_loss: 1.2607, test_acc: 0.6640, best: 0.6731, time: 0:00:54
 Epoch: 193, lr: 2.0e-03, train_loss: 0.7354, train_acc: 0.7332 test_loss: 1.1860, test_acc: 0.6700, best: 0.6731, time: 0:00:54
 Epoch: 194, lr: 2.0e-03, train_loss: 0.7099, train_acc: 0.7470 test_loss: 1.2253, test_acc: 0.6745, best: 0.6745, time: 0:00:55
 Epoch: 195, lr: 2.0e-03, train_loss: 0.7228, train_acc: 0.7506 test_loss: 1.4696, test_acc: 0.6596, best: 0.6745, time: 0:00:54
 Epoch: 196, lr: 2.0e-03, train_loss: 0.7341, train_acc: 0.7396 test_loss: 1.2269, test_acc: 0.6626, best: 0.6745, time: 0:00:54
 Epoch: 197, lr: 2.0e-03, train_loss: 0.7083, train_acc: 0.7524 test_loss: 1.1742, test_acc: 0.6664, best: 0.6745, time: 0:00:54
 Epoch: 198, lr: 2.0e-03, train_loss: 0.7227, train_acc: 0.7432 test_loss: 1.2240, test_acc: 0.6633, best: 0.6745, time: 0:00:54
 Epoch: 199, lr: 2.0e-03, train_loss: 0.7359, train_acc: 0.7416 test_loss: 1.1835, test_acc: 0.6645, best: 0.6745, time: 0:00:54
 Epoch: 200, lr: 2.0e-03, train_loss: 0.7142, train_acc: 0.7506 test_loss: 1.5715, test_acc: 0.6583, best: 0.6745, time: 0:00:54
 Epoch: 201, lr: 2.0e-03, train_loss: 0.7140, train_acc: 0.7540 test_loss: 1.1988, test_acc: 0.6667, best: 0.6745, time: 0:00:54
 Epoch: 202, lr: 2.0e-03, train_loss: 0.6715, train_acc: 0.7732 test_loss: 1.1714, test_acc: 0.6606, best: 0.6745, time: 0:00:54
 Epoch: 203, lr: 2.0e-03, train_loss: 0.7040, train_acc: 0.7498 test_loss: 1.3033, test_acc: 0.6683, best: 0.6745, time: 0:00:54
 Epoch: 204, lr: 2.0e-03, train_loss: 0.6967, train_acc: 0.7524 test_loss: 1.2190, test_acc: 0.6725, best: 0.6745, time: 0:00:54
 Epoch: 205, lr: 2.0e-03, train_loss: 0.6667, train_acc: 0.7684 test_loss: 1.1478, test_acc: 0.6724, best: 0.6745, time: 0:00:54
 Epoch: 206, lr: 2.0e-03, train_loss: 0.7010, train_acc: 0.7568 test_loss: 1.4130, test_acc: 0.6737, best: 0.6745, time: 0:00:54
 Epoch: 207, lr: 2.0e-03, train_loss: 0.7011, train_acc: 0.7552 test_loss: 1.2529, test_acc: 0.6613, best: 0.6745, time: 0:00:54
 Epoch: 208, lr: 2.0e-03, train_loss: 0.6920, train_acc: 0.7592 test_loss: 1.3148, test_acc: 0.6661, best: 0.6745, time: 0:00:54
 Epoch: 209, lr: 2.0e-03, train_loss: 0.6889, train_acc: 0.7582 test_loss: 1.1684, test_acc: 0.6705, best: 0.6745, time: 0:00:54
 Epoch: 210, lr: 2.0e-03, train_loss: 0.6923, train_acc: 0.7530 test_loss: 1.2170, test_acc: 0.6686, best: 0.6745, time: 0:00:54
 Epoch: 211, lr: 2.0e-03, train_loss: 0.6824, train_acc: 0.7566 test_loss: 1.1304, test_acc: 0.6721, best: 0.6745, time: 0:00:54
 Epoch: 212, lr: 2.0e-03, train_loss: 0.6630, train_acc: 0.7670 test_loss: 1.2450, test_acc: 0.6746, best: 0.6746, time: 0:00:55
 Epoch: 213, lr: 2.0e-03, train_loss: 0.6994, train_acc: 0.7520 test_loss: 1.2612, test_acc: 0.6627, best: 0.6746, time: 0:00:54
 Epoch: 214, lr: 2.0e-03, train_loss: 0.6931, train_acc: 0.7558 test_loss: 1.1084, test_acc: 0.6770, best: 0.6770, time: 0:00:55
 Epoch: 215, lr: 2.0e-03, train_loss: 0.6729, train_acc: 0.7634 test_loss: 1.1351, test_acc: 0.6726, best: 0.6770, time: 0:00:54
 Epoch: 216, lr: 2.0e-03, train_loss: 0.6708, train_acc: 0.7714 test_loss: 1.2457, test_acc: 0.6640, best: 0.6770, time: 0:00:54
 Epoch: 217, lr: 2.0e-03, train_loss: 0.6895, train_acc: 0.7600 test_loss: 1.1466, test_acc: 0.6770, best: 0.6770, time: 0:00:54
 Epoch: 218, lr: 2.0e-03, train_loss: 0.6703, train_acc: 0.7662 test_loss: 1.1528, test_acc: 0.6790, best: 0.6790, time: 0:00:55
 Epoch: 219, lr: 2.0e-03, train_loss: 0.6843, train_acc: 0.7562 test_loss: 1.1858, test_acc: 0.6714, best: 0.6790, time: 0:00:54
 Epoch: 220, lr: 2.0e-03, train_loss: 0.6766, train_acc: 0.7628 test_loss: 1.2455, test_acc: 0.6579, best: 0.6790, time: 0:00:54
 Epoch: 221, lr: 2.0e-03, train_loss: 0.6569, train_acc: 0.7638 test_loss: 1.3972, test_acc: 0.6699, best: 0.6790, time: 0:00:54
 Epoch: 222, lr: 2.0e-03, train_loss: 0.6746, train_acc: 0.7712 test_loss: 1.1249, test_acc: 0.6717, best: 0.6790, time: 0:00:54
 Epoch: 223, lr: 2.0e-03, train_loss: 0.6465, train_acc: 0.7726 test_loss: 1.2445, test_acc: 0.6737, best: 0.6790, time: 0:00:54
 Epoch: 224, lr: 2.0e-03, train_loss: 0.6504, train_acc: 0.7714 test_loss: 1.3307, test_acc: 0.6610, best: 0.6790, time: 0:00:54
 Epoch: 225, lr: 2.0e-03, train_loss: 0.6771, train_acc: 0.7652 test_loss: 1.2046, test_acc: 0.6677, best: 0.6790, time: 0:00:54
 Epoch: 226, lr: 2.0e-03, train_loss: 0.6717, train_acc: 0.7664 test_loss: 1.1375, test_acc: 0.6685, best: 0.6790, time: 0:00:54
 Epoch: 227, lr: 2.0e-03, train_loss: 0.6496, train_acc: 0.7752 test_loss: 1.6287, test_acc: 0.6639, best: 0.6790, time: 0:00:54
 Epoch: 228, lr: 2.0e-03, train_loss: 0.6472, train_acc: 0.7744 test_loss: 1.3304, test_acc: 0.6625, best: 0.6790, time: 0:00:54
 Epoch: 229, lr: 2.0e-03, train_loss: 0.6642, train_acc: 0.7718 test_loss: 1.1582, test_acc: 0.6704, best: 0.6790, time: 0:00:54
 Epoch: 230, lr: 2.0e-03, train_loss: 0.6649, train_acc: 0.7656 test_loss: 1.1355, test_acc: 0.6736, best: 0.6790, time: 0:00:54
 Epoch: 231, lr: 2.0e-03, train_loss: 0.6376, train_acc: 0.7724 test_loss: 1.3786, test_acc: 0.6654, best: 0.6790, time: 0:00:54
 Epoch: 232, lr: 2.0e-03, train_loss: 0.6368, train_acc: 0.7754 test_loss: 1.1427, test_acc: 0.6721, best: 0.6790, time: 0:00:54
 Epoch: 233, lr: 2.0e-03, train_loss: 0.6525, train_acc: 0.7692 test_loss: 1.1662, test_acc: 0.6659, best: 0.6790, time: 0:00:54
 Epoch: 234, lr: 2.0e-03, train_loss: 0.6774, train_acc: 0.7702 test_loss: 1.1412, test_acc: 0.6666, best: 0.6790, time: 0:00:54
 Epoch: 235, lr: 2.0e-03, train_loss: 0.6486, train_acc: 0.7682 test_loss: 1.1721, test_acc: 0.6646, best: 0.6790, time: 0:00:54
 Epoch: 236, lr: 2.0e-03, train_loss: 0.6513, train_acc: 0.7674 test_loss: 1.4039, test_acc: 0.6610, best: 0.6790, time: 0:00:54
 Epoch: 237, lr: 2.0e-03, train_loss: 0.6419, train_acc: 0.7772 test_loss: 1.1837, test_acc: 0.6720, best: 0.6790, time: 0:00:54
 Epoch: 238, lr: 2.0e-03, train_loss: 0.6513, train_acc: 0.7734 test_loss: 1.3997, test_acc: 0.6693, best: 0.6790, time: 0:00:54
 Epoch: 239, lr: 2.0e-03, train_loss: 0.6410, train_acc: 0.7742 test_loss: 1.2623, test_acc: 0.6615, best: 0.6790, time: 0:00:54
 Epoch: 240, lr: 4.0e-04, train_loss: 0.6447, train_acc: 0.7742 test_loss: 1.2974, test_acc: 0.6574, best: 0.6790, time: 0:00:54
 Epoch: 241, lr: 4.0e-04, train_loss: 0.6240, train_acc: 0.7840 test_loss: 1.9464, test_acc: 0.6727, best: 0.6790, time: 0:00:54
 Epoch: 242, lr: 4.0e-04, train_loss: 0.6194, train_acc: 0.7850 test_loss: 1.2161, test_acc: 0.6719, best: 0.6790, time: 0:00:54
 Epoch: 243, lr: 4.0e-04, train_loss: 0.6053, train_acc: 0.7920 test_loss: 2.1780, test_acc: 0.6651, best: 0.6790, time: 0:00:54
 Epoch: 244, lr: 4.0e-04, train_loss: 0.6129, train_acc: 0.7836 test_loss: 1.3929, test_acc: 0.6717, best: 0.6790, time: 0:00:54
 Epoch: 245, lr: 4.0e-04, train_loss: 0.6079, train_acc: 0.7894 test_loss: 2.1659, test_acc: 0.6677, best: 0.6790, time: 0:00:54
 Epoch: 246, lr: 4.0e-04, train_loss: 0.6013, train_acc: 0.7932 test_loss: 1.4881, test_acc: 0.6671, best: 0.6790, time: 0:00:55
 Epoch: 247, lr: 4.0e-04, train_loss: 0.6091, train_acc: 0.7852 test_loss: 1.4275, test_acc: 0.6701, best: 0.6790, time: 0:00:54
 Epoch: 248, lr: 4.0e-04, train_loss: 0.6003, train_acc: 0.7962 test_loss: 1.5535, test_acc: 0.6741, best: 0.6790, time: 0:00:54
 Epoch: 249, lr: 4.0e-04, train_loss: 0.6009, train_acc: 0.7892 test_loss: 1.2643, test_acc: 0.6714, best: 0.6790, time: 0:00:54
 Epoch: 250, lr: 4.0e-04, train_loss: 0.5811, train_acc: 0.7966 test_loss: 1.6036, test_acc: 0.6763, best: 0.6790, time: 0:00:54
 Epoch: 251, lr: 4.0e-04, train_loss: 0.6147, train_acc: 0.7830 test_loss: 1.2379, test_acc: 0.6740, best: 0.6790, time: 0:00:54
 Epoch: 252, lr: 4.0e-04, train_loss: 0.6040, train_acc: 0.7902 test_loss: 1.2352, test_acc: 0.6780, best: 0.6790, time: 0:00:54
 Epoch: 253, lr: 4.0e-04, train_loss: 0.5940, train_acc: 0.7886 test_loss: 1.4932, test_acc: 0.6695, best: 0.6790, time: 0:00:54
 Epoch: 254, lr: 4.0e-04, train_loss: 0.5946, train_acc: 0.7938 test_loss: 1.3070, test_acc: 0.6723, best: 0.6790, time: 0:00:54
 Epoch: 255, lr: 4.0e-04, train_loss: 0.5674, train_acc: 0.8044 test_loss: 1.2626, test_acc: 0.6737, best: 0.6790, time: 0:00:54
 Epoch: 256, lr: 4.0e-04, train_loss: 0.6066, train_acc: 0.7876 test_loss: 1.3220, test_acc: 0.6715, best: 0.6790, time: 0:00:54
 Epoch: 257, lr: 4.0e-04, train_loss: 0.6105, train_acc: 0.7878 test_loss: 1.2612, test_acc: 0.6744, best: 0.6790, time: 0:00:54
 Epoch: 258, lr: 4.0e-04, train_loss: 0.5795, train_acc: 0.8006 test_loss: 1.3009, test_acc: 0.6724, best: 0.6790, time: 0:00:54
 Epoch: 259, lr: 4.0e-04, train_loss: 0.5874, train_acc: 0.7942 test_loss: 1.3926, test_acc: 0.6746, best: 0.6790, time: 0:00:54
 Epoch: 260, lr: 4.0e-04, train_loss: 0.6076, train_acc: 0.7916 test_loss: 1.2545, test_acc: 0.6715, best: 0.6790, time: 0:00:54
 Epoch: 261, lr: 4.0e-04, train_loss: 0.5809, train_acc: 0.7912 test_loss: 1.4405, test_acc: 0.6710, best: 0.6790, time: 0:00:54
 Epoch: 262, lr: 4.0e-04, train_loss: 0.5780, train_acc: 0.7996 test_loss: 1.3325, test_acc: 0.6729, best: 0.6790, time: 0:00:54
 Epoch: 263, lr: 4.0e-04, train_loss: 0.5624, train_acc: 0.8018 test_loss: 1.6107, test_acc: 0.6690, best: 0.6790, time: 0:00:54
 Epoch: 264, lr: 4.0e-04, train_loss: 0.5964, train_acc: 0.7924 test_loss: 1.3110, test_acc: 0.6715, best: 0.6790, time: 0:00:54
 Epoch: 265, lr: 4.0e-04, train_loss: 0.5836, train_acc: 0.7986 test_loss: 1.6813, test_acc: 0.6726, best: 0.6790, time: 0:00:54
 Epoch: 266, lr: 4.0e-04, train_loss: 0.5566, train_acc: 0.8048 test_loss: 1.2885, test_acc: 0.6791, best: 0.6791, time: 0:00:55
 Epoch: 267, lr: 4.0e-04, train_loss: 0.5908, train_acc: 0.7956 test_loss: 1.1659, test_acc: 0.6824, best: 0.6824, time: 0:00:55
 Epoch: 268, lr: 4.0e-04, train_loss: 0.5763, train_acc: 0.7956 test_loss: 1.4316, test_acc: 0.6725, best: 0.6824, time: 0:00:54
 Epoch: 269, lr: 4.0e-04, train_loss: 0.5852, train_acc: 0.7952 test_loss: 1.2600, test_acc: 0.6695, best: 0.6824, time: 0:00:54
 Epoch: 270, lr: 8.0e-05, train_loss: 0.5805, train_acc: 0.8088 test_loss: 1.2028, test_acc: 0.6775, best: 0.6824, time: 0:00:54
 Epoch: 271, lr: 8.0e-05, train_loss: 0.5572, train_acc: 0.8080 test_loss: 1.2547, test_acc: 0.6754, best: 0.6824, time: 0:00:54
 Epoch: 272, lr: 8.0e-05, train_loss: 0.5633, train_acc: 0.8118 test_loss: 1.3887, test_acc: 0.6715, best: 0.6824, time: 0:00:54
 Epoch: 273, lr: 8.0e-05, train_loss: 0.5857, train_acc: 0.7976 test_loss: 1.3217, test_acc: 0.6731, best: 0.6824, time: 0:00:54
 Epoch: 274, lr: 8.0e-05, train_loss: 0.5687, train_acc: 0.8054 test_loss: 1.2261, test_acc: 0.6769, best: 0.6824, time: 0:00:54
 Epoch: 275, lr: 8.0e-05, train_loss: 0.5682, train_acc: 0.8046 test_loss: 1.3195, test_acc: 0.6746, best: 0.6824, time: 0:00:54
 Epoch: 276, lr: 8.0e-05, train_loss: 0.5696, train_acc: 0.8042 test_loss: 1.2691, test_acc: 0.6769, best: 0.6824, time: 0:00:54
 Epoch: 277, lr: 8.0e-05, train_loss: 0.5516, train_acc: 0.8042 test_loss: 1.2083, test_acc: 0.6715, best: 0.6824, time: 0:00:54
 Epoch: 278, lr: 8.0e-05, train_loss: 0.5533, train_acc: 0.8098 test_loss: 1.5398, test_acc: 0.6747, best: 0.6824, time: 0:00:54
 Epoch: 279, lr: 8.0e-05, train_loss: 0.5675, train_acc: 0.8018 test_loss: 1.5992, test_acc: 0.6719, best: 0.6824, time: 0:00:54
 Epoch: 280, lr: 8.0e-05, train_loss: 0.5706, train_acc: 0.8064 test_loss: 1.3411, test_acc: 0.6787, best: 0.6824, time: 0:01:34
 Epoch: 281, lr: 8.0e-05, train_loss: 0.5834, train_acc: 0.7988 test_loss: 1.2689, test_acc: 0.6744, best: 0.6824, time: 0:00:54
 Epoch: 282, lr: 8.0e-05, train_loss: 0.5780, train_acc: 0.8012 test_loss: 1.1310, test_acc: 0.6831, best: 0.6831, time: 0:00:54
 Epoch: 283, lr: 8.0e-05, train_loss: 0.5356, train_acc: 0.8160 test_loss: 1.6165, test_acc: 0.6720, best: 0.6831, time: 0:00:53
 Epoch: 284, lr: 8.0e-05, train_loss: 0.5835, train_acc: 0.7990 test_loss: 1.5745, test_acc: 0.6740, best: 0.6831, time: 0:00:53
 Epoch: 285, lr: 8.0e-05, train_loss: 0.5590, train_acc: 0.8080 test_loss: 1.3277, test_acc: 0.6791, best: 0.6831, time: 0:00:53
 Epoch: 286, lr: 8.0e-05, train_loss: 0.5800, train_acc: 0.8010 test_loss: 1.2629, test_acc: 0.6729, best: 0.6831, time: 0:00:53
 Epoch: 287, lr: 8.0e-05, train_loss: 0.5911, train_acc: 0.7926 test_loss: 1.2307, test_acc: 0.6741, best: 0.6831, time: 0:00:53
 Epoch: 288, lr: 8.0e-05, train_loss: 0.5633, train_acc: 0.8004 test_loss: 1.3921, test_acc: 0.6731, best: 0.6831, time: 0:00:53
 Epoch: 289, lr: 8.0e-05, train_loss: 0.5833, train_acc: 0.7940 test_loss: 1.2435, test_acc: 0.6781, best: 0.6831, time: 0:00:53
 Epoch: 290, lr: 8.0e-05, train_loss: 0.5642, train_acc: 0.8044 test_loss: 1.2705, test_acc: 0.6737, best: 0.6831, time: 0:00:53
 Epoch: 291, lr: 8.0e-05, train_loss: 0.5946, train_acc: 0.7966 test_loss: 1.3290, test_acc: 0.6773, best: 0.6831, time: 0:00:53
 Epoch: 292, lr: 8.0e-05, train_loss: 0.5643, train_acc: 0.8030 test_loss: 1.3951, test_acc: 0.6726, best: 0.6831, time: 0:00:53
 Epoch: 293, lr: 8.0e-05, train_loss: 0.5759, train_acc: 0.7968 test_loss: 1.3558, test_acc: 0.6795, best: 0.6831, time: 0:00:53
 Epoch: 294, lr: 8.0e-05, train_loss: 0.5544, train_acc: 0.8064 test_loss: 1.3259, test_acc: 0.6766, best: 0.6831, time: 0:00:53
 Epoch: 295, lr: 8.0e-05, train_loss: 0.5734, train_acc: 0.8020 test_loss: 1.2657, test_acc: 0.6786, best: 0.6831, time: 0:00:53
 Epoch: 296, lr: 8.0e-05, train_loss: 0.5596, train_acc: 0.8090 test_loss: 1.4320, test_acc: 0.6740, best: 0.6831, time: 0:00:53
 Epoch: 297, lr: 8.0e-05, train_loss: 0.5552, train_acc: 0.8052 test_loss: 1.3727, test_acc: 0.6663, best: 0.6831, time: 0:00:53
 Epoch: 298, lr: 8.0e-05, train_loss: 0.5757, train_acc: 0.7988 test_loss: 1.2261, test_acc: 0.6759, best: 0.6831, time: 0:00:53
 Epoch: 299, lr: 8.0e-05, train_loss: 0.5546, train_acc: 0.8130 test_loss: 1.4769, test_acc: 0.6721, best: 0.6831, time: 0:00:53
 Highest accuracy: 0.6831