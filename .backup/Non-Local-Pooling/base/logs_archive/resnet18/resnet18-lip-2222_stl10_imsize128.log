
 Run on time: 2022-06-29 16:01:11.360573

 Arguments:
	 gpu                  : True
	 log                  : True
	 seed                 : 0
	 momentum             : 0.9
	 amsgrad              : True
	 dataset              : STL10
	 batch_size           : 8
	 architecture         : RESNET18_LIP_2222
	 im_size              : 128
	 relu_threshold       : 4.0
	 learning_rate        : 0.01
	 pretrained_backbone  : 
	 pretrained_ann       : 
	 weight_decay         : 0.0
	 test_only            : False
	 epochs               : 300
	 lr_interval          : [180, 240, 270]
	 lr_reduce            : 5
	 optimizer            : SGD
	 dropout              : 0.2
	 kernel_size          : 3
	 dont_save            : False
	 visualize            : False
	 devices              : 0
 DataParallel(
  (module): NetworkByName(
    (net): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): LIP_BASE(
              (logit): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): LIP_BASE(
              (logit): Sequential(
                (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer3): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): LIP_BASE(
              (logit): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer4): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): LIP_BASE(
              (logit): Sequential(
                (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=512, out_features=10, bias=True)
    )
  )
)
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0
)
 Epoch: 1, lr: 1.0e-02, train_loss: 2.3547, train_acc: 0.1884 test_loss: 1.8104, test_acc: 0.2988, best: 0.2988, time: 0:00:48
 Epoch: 2, lr: 1.0e-02, train_loss: 1.9698, train_acc: 0.2512 test_loss: 1.9121, test_acc: 0.3379, best: 0.3379, time: 0:00:47
 Epoch: 3, lr: 1.0e-02, train_loss: 1.8691, train_acc: 0.2838 test_loss: 1.6119, test_acc: 0.3509, best: 0.3509, time: 0:00:48
 Epoch: 4, lr: 1.0e-02, train_loss: 1.8088, train_acc: 0.3098 test_loss: 1.6678, test_acc: 0.3924, best: 0.3924, time: 0:00:48
 Epoch: 5, lr: 1.0e-02, train_loss: 1.7315, train_acc: 0.3536 test_loss: 1.4906, test_acc: 0.4344, best: 0.4344, time: 0:00:48
 Epoch: 6, lr: 1.0e-02, train_loss: 1.6871, train_acc: 0.3694 test_loss: 1.4230, test_acc: 0.4666, best: 0.4666, time: 0:00:48
 Epoch: 7, lr: 1.0e-02, train_loss: 1.6187, train_acc: 0.3986 test_loss: 1.3973, test_acc: 0.4690, best: 0.4690, time: 0:00:48
 Epoch: 8, lr: 1.0e-02, train_loss: 1.5736, train_acc: 0.4164 test_loss: 1.5299, test_acc: 0.4334, best: 0.4690, time: 0:00:47
 Epoch: 9, lr: 1.0e-02, train_loss: 1.5081, train_acc: 0.4474 test_loss: 1.3841, test_acc: 0.4941, best: 0.4941, time: 0:00:48
 Epoch: 10, lr: 1.0e-02, train_loss: 1.4638, train_acc: 0.4626 test_loss: 1.2884, test_acc: 0.5152, best: 0.5152, time: 0:00:47
 Epoch: 11, lr: 1.0e-02, train_loss: 1.4465, train_acc: 0.4734 test_loss: 1.2332, test_acc: 0.5513, best: 0.5513, time: 0:00:47
 Epoch: 12, lr: 1.0e-02, train_loss: 1.4066, train_acc: 0.4862 test_loss: 1.2159, test_acc: 0.5549, best: 0.5549, time: 0:00:47
 Epoch: 13, lr: 1.0e-02, train_loss: 1.3530, train_acc: 0.5092 test_loss: 1.2313, test_acc: 0.5415, best: 0.5549, time: 0:00:47
 Epoch: 14, lr: 1.0e-02, train_loss: 1.3323, train_acc: 0.5144 test_loss: 1.2108, test_acc: 0.5630, best: 0.5630, time: 0:00:47
 Epoch: 15, lr: 1.0e-02, train_loss: 1.2940, train_acc: 0.5348 test_loss: 1.2065, test_acc: 0.5643, best: 0.5643, time: 0:00:47
 Epoch: 16, lr: 1.0e-02, train_loss: 1.2907, train_acc: 0.5236 test_loss: 1.0993, test_acc: 0.6069, best: 0.6069, time: 0:00:47
 Epoch: 17, lr: 1.0e-02, train_loss: 1.2547, train_acc: 0.5466 test_loss: 1.1029, test_acc: 0.6114, best: 0.6114, time: 0:00:47
 Epoch: 18, lr: 1.0e-02, train_loss: 1.2275, train_acc: 0.5516 test_loss: 1.1663, test_acc: 0.5849, best: 0.6114, time: 0:00:47
 Epoch: 19, lr: 1.0e-02, train_loss: 1.2482, train_acc: 0.5460 test_loss: 1.2141, test_acc: 0.5689, best: 0.6114, time: 0:00:47
 Epoch: 20, lr: 1.0e-02, train_loss: 1.1864, train_acc: 0.5732 test_loss: 1.0751, test_acc: 0.6181, best: 0.6181, time: 0:00:47
 Epoch: 21, lr: 1.0e-02, train_loss: 1.1737, train_acc: 0.5794 test_loss: 1.0891, test_acc: 0.6118, best: 0.6181, time: 0:00:47
 Epoch: 22, lr: 1.0e-02, train_loss: 1.1482, train_acc: 0.5816 test_loss: 1.1058, test_acc: 0.6152, best: 0.6181, time: 0:00:47
 Epoch: 23, lr: 1.0e-02, train_loss: 1.1160, train_acc: 0.6044 test_loss: 0.9894, test_acc: 0.6374, best: 0.6374, time: 0:00:47
 Epoch: 24, lr: 1.0e-02, train_loss: 1.1019, train_acc: 0.5960 test_loss: 0.9993, test_acc: 0.6365, best: 0.6374, time: 0:00:47
 Epoch: 25, lr: 1.0e-02, train_loss: 1.0954, train_acc: 0.6034 test_loss: 1.0309, test_acc: 0.6425, best: 0.6425, time: 0:00:47
 Epoch: 26, lr: 1.0e-02, train_loss: 1.0568, train_acc: 0.6148 test_loss: 0.9749, test_acc: 0.6570, best: 0.6570, time: 0:00:47
 Epoch: 27, lr: 1.0e-02, train_loss: 1.0414, train_acc: 0.6218 test_loss: 1.0449, test_acc: 0.6478, best: 0.6570, time: 0:00:47
 Epoch: 28, lr: 1.0e-02, train_loss: 1.0146, train_acc: 0.6382 test_loss: 0.9464, test_acc: 0.6699, best: 0.6699, time: 0:00:47
 Epoch: 29, lr: 1.0e-02, train_loss: 1.0318, train_acc: 0.6300 test_loss: 0.9643, test_acc: 0.6657, best: 0.6699, time: 0:00:47
 Epoch: 30, lr: 1.0e-02, train_loss: 1.0059, train_acc: 0.6312 test_loss: 0.9623, test_acc: 0.6595, best: 0.6699, time: 0:00:47
 Epoch: 31, lr: 1.0e-02, train_loss: 0.9655, train_acc: 0.6496 test_loss: 0.9541, test_acc: 0.6660, best: 0.6699, time: 0:00:47
 Epoch: 32, lr: 1.0e-02, train_loss: 0.9718, train_acc: 0.6534 test_loss: 0.9043, test_acc: 0.6845, best: 0.6845, time: 0:00:47
 Epoch: 33, lr: 1.0e-02, train_loss: 0.9414, train_acc: 0.6690 test_loss: 1.0589, test_acc: 0.6311, best: 0.6845, time: 0:00:47
 Epoch: 34, lr: 1.0e-02, train_loss: 0.9333, train_acc: 0.6658 test_loss: 0.9898, test_acc: 0.6706, best: 0.6845, time: 0:00:47
 Epoch: 35, lr: 1.0e-02, train_loss: 0.9161, train_acc: 0.6702 test_loss: 1.0109, test_acc: 0.6561, best: 0.6845, time: 0:00:47
 Epoch: 36, lr: 1.0e-02, train_loss: 0.9183, train_acc: 0.6720 test_loss: 0.9495, test_acc: 0.6770, best: 0.6845, time: 0:00:47
 Epoch: 37, lr: 1.0e-02, train_loss: 0.8873, train_acc: 0.6824 test_loss: 0.8777, test_acc: 0.6866, best: 0.6866, time: 0:00:47
 Epoch: 38, lr: 1.0e-02, train_loss: 0.8746, train_acc: 0.6880 test_loss: 0.9127, test_acc: 0.6834, best: 0.6866, time: 0:00:47
 Epoch: 39, lr: 1.0e-02, train_loss: 0.8681, train_acc: 0.6934 test_loss: 0.8915, test_acc: 0.6909, best: 0.6909, time: 0:00:47
 Epoch: 40, lr: 1.0e-02, train_loss: 0.8423, train_acc: 0.7032 test_loss: 1.0783, test_acc: 0.6549, best: 0.6909, time: 0:00:46
 Epoch: 41, lr: 1.0e-02, train_loss: 0.8622, train_acc: 0.6892 test_loss: 0.8325, test_acc: 0.7100, best: 0.7100, time: 0:00:47
 Epoch: 42, lr: 1.0e-02, train_loss: 0.8337, train_acc: 0.7044 test_loss: 0.8760, test_acc: 0.6979, best: 0.7100, time: 0:00:46
 Epoch: 43, lr: 1.0e-02, train_loss: 0.8276, train_acc: 0.7042 test_loss: 0.8449, test_acc: 0.7167, best: 0.7167, time: 0:00:47
 Epoch: 44, lr: 1.0e-02, train_loss: 0.8015, train_acc: 0.7106 test_loss: 0.8722, test_acc: 0.7120, best: 0.7167, time: 0:00:47
 Epoch: 45, lr: 1.0e-02, train_loss: 0.8012, train_acc: 0.7120 test_loss: 0.9250, test_acc: 0.6955, best: 0.7167, time: 0:00:47
 Epoch: 46, lr: 1.0e-02, train_loss: 0.7797, train_acc: 0.7186 test_loss: 0.8898, test_acc: 0.7120, best: 0.7167, time: 0:00:47
 Epoch: 47, lr: 1.0e-02, train_loss: 0.7736, train_acc: 0.7286 test_loss: 0.9003, test_acc: 0.7026, best: 0.7167, time: 0:00:47
 Epoch: 48, lr: 1.0e-02, train_loss: 0.7693, train_acc: 0.7232 test_loss: 0.8395, test_acc: 0.7218, best: 0.7218, time: 0:00:47
 Epoch: 49, lr: 1.0e-02, train_loss: 0.7517, train_acc: 0.7306 test_loss: 1.0101, test_acc: 0.6807, best: 0.7218, time: 0:00:46
 Epoch: 50, lr: 1.0e-02, train_loss: 0.7619, train_acc: 0.7290 test_loss: 0.8826, test_acc: 0.7147, best: 0.7218, time: 0:00:47
 Epoch: 51, lr: 1.0e-02, train_loss: 0.7372, train_acc: 0.7384 test_loss: 0.9058, test_acc: 0.7070, best: 0.7218, time: 0:00:47
 Epoch: 52, lr: 1.0e-02, train_loss: 0.7209, train_acc: 0.7366 test_loss: 0.9251, test_acc: 0.7020, best: 0.7218, time: 0:00:47
 Epoch: 53, lr: 1.0e-02, train_loss: 0.7171, train_acc: 0.7482 test_loss: 0.8203, test_acc: 0.7361, best: 0.7361, time: 0:00:47
 Epoch: 54, lr: 1.0e-02, train_loss: 0.7054, train_acc: 0.7472 test_loss: 0.8747, test_acc: 0.7315, best: 0.7361, time: 0:00:47
 Epoch: 55, lr: 1.0e-02, train_loss: 0.7090, train_acc: 0.7534 test_loss: 0.8934, test_acc: 0.7153, best: 0.7361, time: 0:00:46
 Epoch: 56, lr: 1.0e-02, train_loss: 0.6821, train_acc: 0.7540 test_loss: 0.8953, test_acc: 0.7225, best: 0.7361, time: 0:00:46
 Epoch: 57, lr: 1.0e-02, train_loss: 0.6693, train_acc: 0.7596 test_loss: 0.9068, test_acc: 0.7174, best: 0.7361, time: 0:00:46
 Epoch: 58, lr: 1.0e-02, train_loss: 0.6925, train_acc: 0.7462 test_loss: 0.8490, test_acc: 0.7382, best: 0.7382, time: 0:00:47
 Epoch: 59, lr: 1.0e-02, train_loss: 0.6632, train_acc: 0.7632 test_loss: 0.8523, test_acc: 0.7278, best: 0.7382, time: 0:00:47
 Epoch: 60, lr: 1.0e-02, train_loss: 0.6539, train_acc: 0.7634 test_loss: 0.9705, test_acc: 0.7161, best: 0.7382, time: 0:00:47
 Epoch: 61, lr: 1.0e-02, train_loss: 0.6435, train_acc: 0.7750 test_loss: 0.8815, test_acc: 0.7314, best: 0.7382, time: 0:00:46
 Epoch: 62, lr: 1.0e-02, train_loss: 0.6224, train_acc: 0.7848 test_loss: 0.8184, test_acc: 0.7404, best: 0.7404, time: 0:00:47
 Epoch: 63, lr: 1.0e-02, train_loss: 0.6400, train_acc: 0.7724 test_loss: 0.8573, test_acc: 0.7420, best: 0.7420, time: 0:00:47
 Epoch: 64, lr: 1.0e-02, train_loss: 0.6121, train_acc: 0.7826 test_loss: 0.8907, test_acc: 0.7345, best: 0.7420, time: 0:00:47
 Epoch: 65, lr: 1.0e-02, train_loss: 0.6174, train_acc: 0.7874 test_loss: 0.8721, test_acc: 0.7402, best: 0.7420, time: 0:00:47
 Epoch: 66, lr: 1.0e-02, train_loss: 0.6010, train_acc: 0.7818 test_loss: 0.9596, test_acc: 0.7289, best: 0.7420, time: 0:00:46
 Epoch: 67, lr: 1.0e-02, train_loss: 0.6101, train_acc: 0.7796 test_loss: 0.8187, test_acc: 0.7488, best: 0.7488, time: 0:00:47
 Epoch: 68, lr: 1.0e-02, train_loss: 0.5960, train_acc: 0.7870 test_loss: 0.9008, test_acc: 0.7314, best: 0.7488, time: 0:00:47
 Epoch: 69, lr: 1.0e-02, train_loss: 0.5776, train_acc: 0.7930 test_loss: 0.8417, test_acc: 0.7444, best: 0.7488, time: 0:00:46
 Epoch: 70, lr: 1.0e-02, train_loss: 0.5494, train_acc: 0.8020 test_loss: 0.8718, test_acc: 0.7434, best: 0.7488, time: 0:00:47
 Epoch: 71, lr: 1.0e-02, train_loss: 0.5682, train_acc: 0.7968 test_loss: 0.9670, test_acc: 0.7171, best: 0.7488, time: 0:00:47
 Epoch: 72, lr: 1.0e-02, train_loss: 0.5547, train_acc: 0.8060 test_loss: 0.8181, test_acc: 0.7575, best: 0.7575, time: 0:00:47
 Epoch: 73, lr: 1.0e-02, train_loss: 0.5595, train_acc: 0.8054 test_loss: 0.8976, test_acc: 0.7318, best: 0.7575, time: 0:00:46
 Epoch: 74, lr: 1.0e-02, train_loss: 0.5469, train_acc: 0.8048 test_loss: 0.8900, test_acc: 0.7428, best: 0.7575, time: 0:00:47
 Epoch: 75, lr: 1.0e-02, train_loss: 0.5379, train_acc: 0.8112 test_loss: 0.8445, test_acc: 0.7569, best: 0.7575, time: 0:00:47
 Epoch: 76, lr: 1.0e-02, train_loss: 0.5182, train_acc: 0.8198 test_loss: 0.9175, test_acc: 0.7414, best: 0.7575, time: 0:00:46
 Epoch: 77, lr: 1.0e-02, train_loss: 0.5449, train_acc: 0.8110 test_loss: 0.9024, test_acc: 0.7471, best: 0.7575, time: 0:00:46
 Epoch: 78, lr: 1.0e-02, train_loss: 0.5198, train_acc: 0.8158 test_loss: 0.9376, test_acc: 0.7348, best: 0.7575, time: 0:00:47
 Epoch: 79, lr: 1.0e-02, train_loss: 0.5084, train_acc: 0.8246 test_loss: 0.9445, test_acc: 0.7388, best: 0.7575, time: 0:00:47
 Epoch: 80, lr: 1.0e-02, train_loss: 0.5121, train_acc: 0.8258 test_loss: 1.0147, test_acc: 0.7269, best: 0.7575, time: 0:00:47
 Epoch: 81, lr: 1.0e-02, train_loss: 0.5048, train_acc: 0.8274 test_loss: 0.9018, test_acc: 0.7441, best: 0.7575, time: 0:00:49
 Epoch: 82, lr: 1.0e-02, train_loss: 0.5029, train_acc: 0.8216 test_loss: 0.9160, test_acc: 0.7566, best: 0.7575, time: 0:00:47
 Epoch: 83, lr: 1.0e-02, train_loss: 0.4934, train_acc: 0.8252 test_loss: 0.8990, test_acc: 0.7578, best: 0.7578, time: 0:00:47
 Epoch: 84, lr: 1.0e-02, train_loss: 0.4932, train_acc: 0.8262 test_loss: 0.8340, test_acc: 0.7489, best: 0.7578, time: 0:00:46
 Epoch: 85, lr: 1.0e-02, train_loss: 0.4817, train_acc: 0.8292 test_loss: 0.7990, test_acc: 0.7611, best: 0.7611, time: 0:00:47
 Epoch: 86, lr: 1.0e-02, train_loss: 0.4847, train_acc: 0.8274 test_loss: 0.9650, test_acc: 0.7311, best: 0.7611, time: 0:00:46
 Epoch: 87, lr: 1.0e-02, train_loss: 0.4627, train_acc: 0.8334 test_loss: 0.9302, test_acc: 0.7399, best: 0.7611, time: 0:00:46
 Epoch: 88, lr: 1.0e-02, train_loss: 0.4751, train_acc: 0.8390 test_loss: 0.8739, test_acc: 0.7612, best: 0.7612, time: 0:00:47
 Epoch: 89, lr: 1.0e-02, train_loss: 0.5061, train_acc: 0.8262 test_loss: 0.9255, test_acc: 0.7532, best: 0.7612, time: 0:00:47
 Epoch: 90, lr: 1.0e-02, train_loss: 0.4633, train_acc: 0.8380 test_loss: 0.8540, test_acc: 0.7581, best: 0.7612, time: 0:00:47
 Epoch: 91, lr: 1.0e-02, train_loss: 0.4458, train_acc: 0.8468 test_loss: 0.8903, test_acc: 0.7540, best: 0.7612, time: 0:00:46
 Epoch: 92, lr: 1.0e-02, train_loss: 0.4647, train_acc: 0.8368 test_loss: 0.9935, test_acc: 0.7390, best: 0.7612, time: 0:00:47
 Epoch: 93, lr: 1.0e-02, train_loss: 0.4339, train_acc: 0.8488 test_loss: 0.9550, test_acc: 0.7498, best: 0.7612, time: 0:00:47
 Epoch: 94, lr: 1.0e-02, train_loss: 0.4616, train_acc: 0.8386 test_loss: 0.8862, test_acc: 0.7549, best: 0.7612, time: 0:00:47
 Epoch: 95, lr: 1.0e-02, train_loss: 0.4371, train_acc: 0.8468 test_loss: 0.8491, test_acc: 0.7626, best: 0.7626, time: 0:00:47
 Epoch: 96, lr: 1.0e-02, train_loss: 0.4354, train_acc: 0.8468 test_loss: 1.0358, test_acc: 0.7390, best: 0.7626, time: 0:00:47
 Epoch: 97, lr: 1.0e-02, train_loss: 0.4253, train_acc: 0.8540 test_loss: 0.8622, test_acc: 0.7631, best: 0.7631, time: 0:00:47
 Epoch: 98, lr: 1.0e-02, train_loss: 0.4460, train_acc: 0.8476 test_loss: 0.8901, test_acc: 0.7594, best: 0.7631, time: 0:00:46
 Epoch: 99, lr: 1.0e-02, train_loss: 0.4130, train_acc: 0.8514 test_loss: 0.9781, test_acc: 0.7448, best: 0.7631, time: 0:00:46
 Epoch: 100, lr: 1.0e-02, train_loss: 0.3988, train_acc: 0.8576 test_loss: 0.9240, test_acc: 0.7574, best: 0.7631, time: 0:00:47
 Epoch: 101, lr: 1.0e-02, train_loss: 0.4059, train_acc: 0.8574 test_loss: 1.0258, test_acc: 0.7351, best: 0.7631, time: 0:00:46
 Epoch: 102, lr: 1.0e-02, train_loss: 0.4002, train_acc: 0.8568 test_loss: 0.9089, test_acc: 0.7654, best: 0.7654, time: 0:00:47
 Epoch: 103, lr: 1.0e-02, train_loss: 0.4354, train_acc: 0.8444 test_loss: 0.8945, test_acc: 0.7506, best: 0.7654, time: 0:00:46
 Epoch: 104, lr: 1.0e-02, train_loss: 0.4313, train_acc: 0.8466 test_loss: 0.9010, test_acc: 0.7752, best: 0.7752, time: 0:00:47
 Epoch: 105, lr: 1.0e-02, train_loss: 0.4158, train_acc: 0.8578 test_loss: 0.8888, test_acc: 0.7682, best: 0.7752, time: 0:00:47
 Epoch: 106, lr: 1.0e-02, train_loss: 0.4015, train_acc: 0.8574 test_loss: 0.8750, test_acc: 0.7674, best: 0.7752, time: 0:00:46
 Epoch: 107, lr: 1.0e-02, train_loss: 0.4092, train_acc: 0.8650 test_loss: 0.8611, test_acc: 0.7615, best: 0.7752, time: 0:00:47
 Epoch: 108, lr: 1.0e-02, train_loss: 0.4083, train_acc: 0.8554 test_loss: 0.8807, test_acc: 0.7688, best: 0.7752, time: 0:00:46
 Epoch: 109, lr: 1.0e-02, train_loss: 0.3889, train_acc: 0.8666 test_loss: 0.9510, test_acc: 0.7574, best: 0.7752, time: 0:00:46
 Epoch: 110, lr: 1.0e-02, train_loss: 0.4005, train_acc: 0.8618 test_loss: 0.9555, test_acc: 0.7568, best: 0.7752, time: 0:00:46
 Epoch: 111, lr: 1.0e-02, train_loss: 0.3633, train_acc: 0.8712 test_loss: 0.9300, test_acc: 0.7698, best: 0.7752, time: 0:00:47
 Epoch: 112, lr: 1.0e-02, train_loss: 0.3641, train_acc: 0.8770 test_loss: 1.0009, test_acc: 0.7525, best: 0.7752, time: 0:00:47
 Epoch: 113, lr: 1.0e-02, train_loss: 0.3934, train_acc: 0.8622 test_loss: 0.9378, test_acc: 0.7609, best: 0.7752, time: 0:00:46
 Epoch: 114, lr: 1.0e-02, train_loss: 0.3703, train_acc: 0.8692 test_loss: 1.1792, test_acc: 0.7381, best: 0.7752, time: 0:00:47
 Epoch: 115, lr: 1.0e-02, train_loss: 0.3932, train_acc: 0.8600 test_loss: 0.9438, test_acc: 0.7625, best: 0.7752, time: 0:00:46
 Epoch: 116, lr: 1.0e-02, train_loss: 0.3741, train_acc: 0.8620 test_loss: 0.9409, test_acc: 0.7691, best: 0.7752, time: 0:00:46
 Epoch: 117, lr: 1.0e-02, train_loss: 0.3674, train_acc: 0.8724 test_loss: 0.8755, test_acc: 0.7704, best: 0.7752, time: 0:00:46
 Epoch: 118, lr: 1.0e-02, train_loss: 0.3692, train_acc: 0.8706 test_loss: 0.9677, test_acc: 0.7571, best: 0.7752, time: 0:00:46
 Epoch: 119, lr: 1.0e-02, train_loss: 0.3781, train_acc: 0.8658 test_loss: 0.8951, test_acc: 0.7728, best: 0.7752, time: 0:00:46
 Epoch: 120, lr: 1.0e-02, train_loss: 0.3460, train_acc: 0.8832 test_loss: 0.9096, test_acc: 0.7732, best: 0.7752, time: 0:00:47
 Epoch: 121, lr: 1.0e-02, train_loss: 0.3558, train_acc: 0.8826 test_loss: 0.9017, test_acc: 0.7716, best: 0.7752, time: 0:00:46
 Epoch: 122, lr: 1.0e-02, train_loss: 0.3648, train_acc: 0.8710 test_loss: 0.8843, test_acc: 0.7725, best: 0.7752, time: 0:00:46
 Epoch: 123, lr: 1.0e-02, train_loss: 0.3473, train_acc: 0.8806 test_loss: 0.8995, test_acc: 0.7740, best: 0.7752, time: 0:00:47
 Epoch: 124, lr: 1.0e-02, train_loss: 0.3563, train_acc: 0.8788 test_loss: 0.9450, test_acc: 0.7680, best: 0.7752, time: 0:00:47
 Epoch: 125, lr: 1.0e-02, train_loss: 0.3468, train_acc: 0.8784 test_loss: 0.9382, test_acc: 0.7661, best: 0.7752, time: 0:00:47
 Epoch: 126, lr: 1.0e-02, train_loss: 0.3526, train_acc: 0.8818 test_loss: 0.9868, test_acc: 0.7620, best: 0.7752, time: 0:00:46
 Epoch: 127, lr: 1.0e-02, train_loss: 0.3499, train_acc: 0.8776 test_loss: 1.0856, test_acc: 0.7556, best: 0.7752, time: 0:00:46
 Epoch: 128, lr: 1.0e-02, train_loss: 0.3289, train_acc: 0.8820 test_loss: 0.9322, test_acc: 0.7709, best: 0.7752, time: 0:00:47
 Epoch: 129, lr: 1.0e-02, train_loss: 0.3437, train_acc: 0.8792 test_loss: 0.9420, test_acc: 0.7714, best: 0.7752, time: 0:00:47
 Epoch: 130, lr: 1.0e-02, train_loss: 0.3403, train_acc: 0.8866 test_loss: 0.9283, test_acc: 0.7702, best: 0.7752, time: 0:00:46
 Epoch: 131, lr: 1.0e-02, train_loss: 0.3319, train_acc: 0.8830 test_loss: 0.9061, test_acc: 0.7780, best: 0.7780, time: 0:00:47
 Epoch: 132, lr: 1.0e-02, train_loss: 0.3340, train_acc: 0.8832 test_loss: 0.9194, test_acc: 0.7686, best: 0.7780, time: 0:00:47
 Epoch: 133, lr: 1.0e-02, train_loss: 0.3291, train_acc: 0.8882 test_loss: 0.9192, test_acc: 0.7740, best: 0.7780, time: 0:00:46
 Epoch: 134, lr: 1.0e-02, train_loss: 0.3360, train_acc: 0.8870 test_loss: 0.9717, test_acc: 0.7608, best: 0.7780, time: 0:00:47
 Epoch: 135, lr: 1.0e-02, train_loss: 0.3265, train_acc: 0.8850 test_loss: 0.9298, test_acc: 0.7695, best: 0.7780, time: 0:00:47
 Epoch: 136, lr: 1.0e-02, train_loss: 0.3374, train_acc: 0.8824 test_loss: 1.0390, test_acc: 0.7609, best: 0.7780, time: 0:00:47
 Epoch: 137, lr: 1.0e-02, train_loss: 0.3170, train_acc: 0.8880 test_loss: 0.9001, test_acc: 0.7792, best: 0.7792, time: 0:00:47
 Epoch: 138, lr: 1.0e-02, train_loss: 0.2919, train_acc: 0.8986 test_loss: 1.0600, test_acc: 0.7618, best: 0.7792, time: 0:00:46
 Epoch: 139, lr: 1.0e-02, train_loss: 0.3264, train_acc: 0.8886 test_loss: 0.9256, test_acc: 0.7682, best: 0.7792, time: 0:00:47
 Epoch: 140, lr: 1.0e-02, train_loss: 0.3254, train_acc: 0.8884 test_loss: 0.9616, test_acc: 0.7685, best: 0.7792, time: 0:00:46
 Epoch: 141, lr: 1.0e-02, train_loss: 0.3161, train_acc: 0.8892 test_loss: 0.9662, test_acc: 0.7589, best: 0.7792, time: 0:00:47
 Epoch: 142, lr: 1.0e-02, train_loss: 0.2949, train_acc: 0.8992 test_loss: 0.9962, test_acc: 0.7742, best: 0.7792, time: 0:00:47
 Epoch: 143, lr: 1.0e-02, train_loss: 0.3049, train_acc: 0.8932 test_loss: 0.9975, test_acc: 0.7706, best: 0.7792, time: 0:00:46
 Epoch: 144, lr: 1.0e-02, train_loss: 0.3113, train_acc: 0.8906 test_loss: 1.0008, test_acc: 0.7655, best: 0.7792, time: 0:00:47
 Epoch: 145, lr: 1.0e-02, train_loss: 0.3206, train_acc: 0.8896 test_loss: 0.9318, test_acc: 0.7765, best: 0.7792, time: 0:00:47
 Epoch: 146, lr: 1.0e-02, train_loss: 0.3157, train_acc: 0.8894 test_loss: 0.9420, test_acc: 0.7779, best: 0.7792, time: 0:00:47
 Epoch: 147, lr: 1.0e-02, train_loss: 0.3084, train_acc: 0.8946 test_loss: 0.9576, test_acc: 0.7710, best: 0.7792, time: 0:00:47
 Epoch: 148, lr: 1.0e-02, train_loss: 0.3067, train_acc: 0.8962 test_loss: 0.9667, test_acc: 0.7640, best: 0.7792, time: 0:00:47
 Epoch: 149, lr: 1.0e-02, train_loss: 0.3122, train_acc: 0.8920 test_loss: 0.9249, test_acc: 0.7769, best: 0.7792, time: 0:00:47
 Epoch: 150, lr: 1.0e-02, train_loss: 0.3163, train_acc: 0.8878 test_loss: 1.0021, test_acc: 0.7685, best: 0.7792, time: 0:00:47
 Epoch: 151, lr: 1.0e-02, train_loss: 0.2945, train_acc: 0.8988 test_loss: 1.0850, test_acc: 0.7579, best: 0.7792, time: 0:00:47
 Epoch: 152, lr: 1.0e-02, train_loss: 0.2897, train_acc: 0.8940 test_loss: 1.0373, test_acc: 0.7698, best: 0.7792, time: 0:00:47
 Epoch: 153, lr: 1.0e-02, train_loss: 0.3015, train_acc: 0.9002 test_loss: 0.9412, test_acc: 0.7819, best: 0.7819, time: 0:00:47
 Epoch: 154, lr: 1.0e-02, train_loss: 0.3156, train_acc: 0.8912 test_loss: 0.9207, test_acc: 0.7799, best: 0.7819, time: 0:00:47
 Epoch: 155, lr: 1.0e-02, train_loss: 0.2772, train_acc: 0.9028 test_loss: 0.9609, test_acc: 0.7834, best: 0.7834, time: 0:00:47
 Epoch: 156, lr: 1.0e-02, train_loss: 0.3135, train_acc: 0.8900 test_loss: 0.9927, test_acc: 0.7730, best: 0.7834, time: 0:00:46
 Epoch: 157, lr: 1.0e-02, train_loss: 0.2956, train_acc: 0.8950 test_loss: 1.0865, test_acc: 0.7552, best: 0.7834, time: 0:00:46
 Epoch: 158, lr: 1.0e-02, train_loss: 0.2904, train_acc: 0.8996 test_loss: 1.0743, test_acc: 0.7670, best: 0.7834, time: 0:00:47
 Epoch: 159, lr: 1.0e-02, train_loss: 0.2940, train_acc: 0.8998 test_loss: 1.0338, test_acc: 0.7639, best: 0.7834, time: 0:00:46
 Epoch: 160, lr: 1.0e-02, train_loss: 0.2804, train_acc: 0.9026 test_loss: 1.0770, test_acc: 0.7720, best: 0.7834, time: 0:00:46
 Epoch: 161, lr: 1.0e-02, train_loss: 0.2914, train_acc: 0.8966 test_loss: 1.0210, test_acc: 0.7648, best: 0.7834, time: 0:00:47
 Epoch: 162, lr: 1.0e-02, train_loss: 0.2935, train_acc: 0.8962 test_loss: 1.0047, test_acc: 0.7668, best: 0.7834, time: 0:00:46
 Epoch: 163, lr: 1.0e-02, train_loss: 0.2918, train_acc: 0.8972 test_loss: 0.9931, test_acc: 0.7764, best: 0.7834, time: 0:00:47
 Epoch: 164, lr: 1.0e-02, train_loss: 0.2784, train_acc: 0.9044 test_loss: 0.9604, test_acc: 0.7736, best: 0.7834, time: 0:00:46
 Epoch: 165, lr: 1.0e-02, train_loss: 0.2684, train_acc: 0.9054 test_loss: 0.8905, test_acc: 0.7864, best: 0.7864, time: 0:00:47
 Epoch: 166, lr: 1.0e-02, train_loss: 0.2735, train_acc: 0.9036 test_loss: 0.9934, test_acc: 0.7680, best: 0.7864, time: 0:00:47
 Epoch: 167, lr: 1.0e-02, train_loss: 0.2918, train_acc: 0.8966 test_loss: 0.9857, test_acc: 0.7732, best: 0.7864, time: 0:00:47
 Epoch: 168, lr: 1.0e-02, train_loss: 0.2724, train_acc: 0.9054 test_loss: 0.9817, test_acc: 0.7794, best: 0.7864, time: 0:00:48
 Epoch: 169, lr: 1.0e-02, train_loss: 0.2886, train_acc: 0.8980 test_loss: 1.0105, test_acc: 0.7746, best: 0.7864, time: 0:00:47
 Epoch: 170, lr: 1.0e-02, train_loss: 0.2644, train_acc: 0.9082 test_loss: 0.9614, test_acc: 0.7887, best: 0.7887, time: 0:00:47
 Epoch: 171, lr: 1.0e-02, train_loss: 0.2770, train_acc: 0.8984 test_loss: 1.0321, test_acc: 0.7646, best: 0.7887, time: 0:00:47
 Epoch: 172, lr: 1.0e-02, train_loss: 0.2683, train_acc: 0.9096 test_loss: 0.9078, test_acc: 0.7857, best: 0.7887, time: 0:00:47
 Epoch: 173, lr: 1.0e-02, train_loss: 0.2481, train_acc: 0.9140 test_loss: 1.0048, test_acc: 0.7755, best: 0.7887, time: 0:00:47
 Epoch: 174, lr: 1.0e-02, train_loss: 0.2779, train_acc: 0.9080 test_loss: 0.9616, test_acc: 0.7801, best: 0.7887, time: 0:00:46
 Epoch: 175, lr: 1.0e-02, train_loss: 0.2684, train_acc: 0.9068 test_loss: 0.9904, test_acc: 0.7748, best: 0.7887, time: 0:00:46
 Epoch: 176, lr: 1.0e-02, train_loss: 0.2640, train_acc: 0.9110 test_loss: 1.0042, test_acc: 0.7668, best: 0.7887, time: 0:00:47
 Epoch: 177, lr: 1.0e-02, train_loss: 0.2539, train_acc: 0.9102 test_loss: 0.9753, test_acc: 0.7821, best: 0.7887, time: 0:00:47
 Epoch: 178, lr: 1.0e-02, train_loss: 0.2844, train_acc: 0.9026 test_loss: 0.9452, test_acc: 0.7758, best: 0.7887, time: 0:00:46
 Epoch: 179, lr: 1.0e-02, train_loss: 0.2773, train_acc: 0.9076 test_loss: 0.9898, test_acc: 0.7692, best: 0.7887, time: 0:00:46
 Epoch: 180, lr: 2.0e-03, train_loss: 0.2319, train_acc: 0.9218 test_loss: 0.9086, test_acc: 0.7875, best: 0.7887, time: 0:00:46
 Epoch: 181, lr: 2.0e-03, train_loss: 0.1953, train_acc: 0.9328 test_loss: 0.8738, test_acc: 0.7944, best: 0.7944, time: 0:00:47
 Epoch: 182, lr: 2.0e-03, train_loss: 0.2217, train_acc: 0.9238 test_loss: 0.8935, test_acc: 0.7989, best: 0.7989, time: 0:00:47
 Epoch: 183, lr: 2.0e-03, train_loss: 0.1975, train_acc: 0.9332 test_loss: 0.8960, test_acc: 0.7961, best: 0.7989, time: 0:00:47
 Epoch: 184, lr: 2.0e-03, train_loss: 0.1884, train_acc: 0.9394 test_loss: 0.9222, test_acc: 0.7959, best: 0.7989, time: 0:00:46
 Epoch: 185, lr: 2.0e-03, train_loss: 0.1988, train_acc: 0.9316 test_loss: 0.8970, test_acc: 0.7983, best: 0.7989, time: 0:00:47
 Epoch: 186, lr: 2.0e-03, train_loss: 0.1826, train_acc: 0.9350 test_loss: 0.9013, test_acc: 0.7977, best: 0.7989, time: 0:00:46
 Epoch: 187, lr: 2.0e-03, train_loss: 0.1883, train_acc: 0.9374 test_loss: 0.8748, test_acc: 0.7974, best: 0.7989, time: 0:00:46
 Epoch: 188, lr: 2.0e-03, train_loss: 0.2002, train_acc: 0.9330 test_loss: 0.9088, test_acc: 0.7965, best: 0.7989, time: 0:00:46
 Epoch: 189, lr: 2.0e-03, train_loss: 0.1894, train_acc: 0.9354 test_loss: 0.8794, test_acc: 0.7997, best: 0.7997, time: 0:00:47
 Epoch: 190, lr: 2.0e-03, train_loss: 0.1763, train_acc: 0.9408 test_loss: 0.8928, test_acc: 0.7965, best: 0.7997, time: 0:00:46
 Epoch: 191, lr: 2.0e-03, train_loss: 0.1949, train_acc: 0.9370 test_loss: 0.9287, test_acc: 0.7986, best: 0.7997, time: 0:00:47
 Epoch: 192, lr: 2.0e-03, train_loss: 0.1858, train_acc: 0.9394 test_loss: 0.9160, test_acc: 0.8016, best: 0.8016, time: 0:00:47
 Epoch: 193, lr: 2.0e-03, train_loss: 0.1819, train_acc: 0.9330 test_loss: 0.8873, test_acc: 0.7946, best: 0.8016, time: 0:00:47
 Epoch: 194, lr: 2.0e-03, train_loss: 0.1689, train_acc: 0.9402 test_loss: 0.8975, test_acc: 0.7955, best: 0.8016, time: 0:00:47
 Epoch: 195, lr: 2.0e-03, train_loss: 0.1693, train_acc: 0.9398 test_loss: 0.8853, test_acc: 0.7993, best: 0.8016, time: 0:00:47
 Epoch: 196, lr: 2.0e-03, train_loss: 0.1812, train_acc: 0.9358 test_loss: 0.9137, test_acc: 0.7950, best: 0.8016, time: 0:00:47
 Epoch: 197, lr: 2.0e-03, train_loss: 0.1784, train_acc: 0.9362 test_loss: 0.9151, test_acc: 0.7993, best: 0.8016, time: 0:00:46
 Epoch: 198, lr: 2.0e-03, train_loss: 0.1598, train_acc: 0.9476 test_loss: 0.9031, test_acc: 0.8000, best: 0.8016, time: 0:00:46
 Epoch: 199, lr: 2.0e-03, train_loss: 0.1866, train_acc: 0.9368 test_loss: 0.8822, test_acc: 0.8004, best: 0.8016, time: 0:00:46
 Epoch: 200, lr: 2.0e-03, train_loss: 0.1672, train_acc: 0.9434 test_loss: 0.9210, test_acc: 0.7953, best: 0.8016, time: 0:00:46
 Epoch: 201, lr: 2.0e-03, train_loss: 0.1747, train_acc: 0.9428 test_loss: 0.9248, test_acc: 0.8006, best: 0.8016, time: 0:00:46
 Epoch: 202, lr: 2.0e-03, train_loss: 0.1752, train_acc: 0.9416 test_loss: 0.9164, test_acc: 0.8025, best: 0.8025, time: 0:00:47
 Epoch: 203, lr: 2.0e-03, train_loss: 0.1638, train_acc: 0.9436 test_loss: 0.9119, test_acc: 0.7961, best: 0.8025, time: 0:00:47
 Epoch: 204, lr: 2.0e-03, train_loss: 0.1740, train_acc: 0.9382 test_loss: 0.9289, test_acc: 0.7944, best: 0.8025, time: 0:00:47
 Epoch: 205, lr: 2.0e-03, train_loss: 0.1748, train_acc: 0.9398 test_loss: 0.8823, test_acc: 0.8003, best: 0.8025, time: 0:00:46
 Epoch: 206, lr: 2.0e-03, train_loss: 0.1639, train_acc: 0.9432 test_loss: 0.9333, test_acc: 0.7950, best: 0.8025, time: 0:00:46
 Epoch: 207, lr: 2.0e-03, train_loss: 0.1683, train_acc: 0.9426 test_loss: 0.8809, test_acc: 0.8014, best: 0.8025, time: 0:00:47
 Epoch: 208, lr: 2.0e-03, train_loss: 0.1715, train_acc: 0.9392 test_loss: 0.9010, test_acc: 0.7965, best: 0.8025, time: 0:00:46
 Epoch: 209, lr: 2.0e-03, train_loss: 0.1714, train_acc: 0.9422 test_loss: 0.9081, test_acc: 0.7977, best: 0.8025, time: 0:00:46
 Epoch: 210, lr: 2.0e-03, train_loss: 0.1625, train_acc: 0.9488 test_loss: 0.9040, test_acc: 0.8011, best: 0.8025, time: 0:00:46
 Epoch: 211, lr: 2.0e-03, train_loss: 0.1618, train_acc: 0.9444 test_loss: 0.9078, test_acc: 0.8005, best: 0.8025, time: 0:00:47
 Epoch: 212, lr: 2.0e-03, train_loss: 0.1705, train_acc: 0.9438 test_loss: 0.9016, test_acc: 0.7964, best: 0.8025, time: 0:00:46
 Epoch: 213, lr: 2.0e-03, train_loss: 0.1639, train_acc: 0.9422 test_loss: 0.9040, test_acc: 0.7994, best: 0.8025, time: 0:00:46
 Epoch: 214, lr: 2.0e-03, train_loss: 0.1732, train_acc: 0.9398 test_loss: 0.9307, test_acc: 0.7955, best: 0.8025, time: 0:00:46
 Epoch: 215, lr: 2.0e-03, train_loss: 0.1698, train_acc: 0.9424 test_loss: 0.9220, test_acc: 0.7931, best: 0.8025, time: 0:00:47
 Epoch: 216, lr: 2.0e-03, train_loss: 0.1538, train_acc: 0.9456 test_loss: 0.9206, test_acc: 0.7996, best: 0.8025, time: 0:00:46
 Epoch: 217, lr: 2.0e-03, train_loss: 0.1589, train_acc: 0.9464 test_loss: 0.8991, test_acc: 0.7991, best: 0.8025, time: 0:00:46
 Epoch: 218, lr: 2.0e-03, train_loss: 0.1679, train_acc: 0.9454 test_loss: 0.9375, test_acc: 0.8006, best: 0.8025, time: 0:00:46
 Epoch: 219, lr: 2.0e-03, train_loss: 0.1766, train_acc: 0.9414 test_loss: 0.9201, test_acc: 0.7965, best: 0.8025, time: 0:00:46
 Epoch: 220, lr: 2.0e-03, train_loss: 0.1673, train_acc: 0.9464 test_loss: 0.9498, test_acc: 0.7884, best: 0.8025, time: 0:00:46
 Epoch: 221, lr: 2.0e-03, train_loss: 0.1552, train_acc: 0.9460 test_loss: 0.9360, test_acc: 0.7975, best: 0.8025, time: 0:00:47
 Epoch: 222, lr: 2.0e-03, train_loss: 0.1653, train_acc: 0.9446 test_loss: 0.9531, test_acc: 0.7971, best: 0.8025, time: 0:00:46
 Epoch: 223, lr: 2.0e-03, train_loss: 0.1594, train_acc: 0.9444 test_loss: 0.9402, test_acc: 0.7983, best: 0.8025, time: 0:00:46
 Epoch: 224, lr: 2.0e-03, train_loss: 0.1655, train_acc: 0.9412 test_loss: 0.9449, test_acc: 0.7975, best: 0.8025, time: 0:00:46
 Epoch: 225, lr: 2.0e-03, train_loss: 0.1497, train_acc: 0.9482 test_loss: 0.9047, test_acc: 0.8044, best: 0.8044, time: 0:00:47
 Epoch: 226, lr: 2.0e-03, train_loss: 0.1460, train_acc: 0.9514 test_loss: 0.8955, test_acc: 0.7961, best: 0.8044, time: 0:00:47
 Epoch: 227, lr: 2.0e-03, train_loss: 0.1535, train_acc: 0.9448 test_loss: 0.9093, test_acc: 0.8004, best: 0.8044, time: 0:00:47
 Epoch: 228, lr: 2.0e-03, train_loss: 0.1595, train_acc: 0.9456 test_loss: 0.9111, test_acc: 0.8000, best: 0.8044, time: 0:00:46
 Epoch: 229, lr: 2.0e-03, train_loss: 0.1592, train_acc: 0.9460 test_loss: 0.9230, test_acc: 0.7993, best: 0.8044, time: 0:00:46
 Epoch: 230, lr: 2.0e-03, train_loss: 0.1561, train_acc: 0.9450 test_loss: 0.9078, test_acc: 0.8004, best: 0.8044, time: 0:00:46
 Epoch: 231, lr: 2.0e-03, train_loss: 0.1564, train_acc: 0.9490 test_loss: 0.9210, test_acc: 0.8014, best: 0.8044, time: 0:00:47
 Epoch: 232, lr: 2.0e-03, train_loss: 0.1656, train_acc: 0.9448 test_loss: 0.9258, test_acc: 0.7991, best: 0.8044, time: 0:00:47
 Epoch: 233, lr: 2.0e-03, train_loss: 0.1554, train_acc: 0.9470 test_loss: 0.9015, test_acc: 0.7967, best: 0.8044, time: 0:00:46
 Epoch: 234, lr: 2.0e-03, train_loss: 0.1705, train_acc: 0.9404 test_loss: 0.9155, test_acc: 0.7999, best: 0.8044, time: 0:00:47
 Epoch: 235, lr: 2.0e-03, train_loss: 0.1589, train_acc: 0.9434 test_loss: 0.9402, test_acc: 0.7985, best: 0.8044, time: 0:00:46
 Epoch: 236, lr: 2.0e-03, train_loss: 0.1583, train_acc: 0.9454 test_loss: 0.9148, test_acc: 0.7974, best: 0.8044, time: 0:00:47
 Epoch: 237, lr: 2.0e-03, train_loss: 0.1599, train_acc: 0.9444 test_loss: 0.9031, test_acc: 0.7996, best: 0.8044, time: 0:00:46
 Epoch: 238, lr: 2.0e-03, train_loss: 0.1446, train_acc: 0.9486 test_loss: 0.9278, test_acc: 0.7990, best: 0.8044, time: 0:00:46
 Epoch: 239, lr: 2.0e-03, train_loss: 0.1585, train_acc: 0.9426 test_loss: 0.9085, test_acc: 0.7963, best: 0.8044, time: 0:00:46
 Epoch: 240, lr: 4.0e-04, train_loss: 0.1608, train_acc: 0.9466 test_loss: 0.9191, test_acc: 0.7965, best: 0.8044, time: 0:00:46
 Epoch: 241, lr: 4.0e-04, train_loss: 0.1441, train_acc: 0.9526 test_loss: 0.9243, test_acc: 0.7973, best: 0.8044, time: 0:00:46
 Epoch: 242, lr: 4.0e-04, train_loss: 0.1442, train_acc: 0.9488 test_loss: 0.9304, test_acc: 0.7966, best: 0.8044, time: 0:00:47
 Epoch: 243, lr: 4.0e-04, train_loss: 0.1439, train_acc: 0.9498 test_loss: 0.9032, test_acc: 0.8037, best: 0.8044, time: 0:00:47
 Epoch: 244, lr: 4.0e-04, train_loss: 0.1563, train_acc: 0.9488 test_loss: 0.9109, test_acc: 0.8007, best: 0.8044, time: 0:00:46
 Epoch: 245, lr: 4.0e-04, train_loss: 0.1500, train_acc: 0.9490 test_loss: 0.8948, test_acc: 0.8019, best: 0.8044, time: 0:00:46
 Epoch: 246, lr: 4.0e-04, train_loss: 0.1441, train_acc: 0.9484 test_loss: 0.8840, test_acc: 0.8019, best: 0.8044, time: 0:00:47
 Epoch: 247, lr: 4.0e-04, train_loss: 0.1456, train_acc: 0.9506 test_loss: 0.9255, test_acc: 0.7974, best: 0.8044, time: 0:00:46
 Epoch: 248, lr: 4.0e-04, train_loss: 0.1411, train_acc: 0.9486 test_loss: 0.9141, test_acc: 0.8017, best: 0.8044, time: 0:00:46
 Epoch: 249, lr: 4.0e-04, train_loss: 0.1467, train_acc: 0.9526 test_loss: 0.9020, test_acc: 0.7994, best: 0.8044, time: 0:00:46
 Epoch: 250, lr: 4.0e-04, train_loss: 0.1545, train_acc: 0.9476 test_loss: 0.9113, test_acc: 0.8035, best: 0.8044, time: 0:00:47
 Epoch: 251, lr: 4.0e-04, train_loss: 0.1375, train_acc: 0.9518 test_loss: 0.8923, test_acc: 0.8009, best: 0.8044, time: 0:00:46
 Epoch: 252, lr: 4.0e-04, train_loss: 0.1511, train_acc: 0.9532 test_loss: 0.8966, test_acc: 0.8019, best: 0.8044, time: 0:00:47
 Epoch: 253, lr: 4.0e-04, train_loss: 0.1309, train_acc: 0.9566 test_loss: 0.9084, test_acc: 0.7986, best: 0.8044, time: 0:00:46
 Epoch: 254, lr: 4.0e-04, train_loss: 0.1453, train_acc: 0.9510 test_loss: 0.8884, test_acc: 0.8040, best: 0.8044, time: 0:00:46
 Epoch: 255, lr: 4.0e-04, train_loss: 0.1437, train_acc: 0.9522 test_loss: 0.8908, test_acc: 0.8021, best: 0.8044, time: 0:00:47
 Epoch: 256, lr: 4.0e-04, train_loss: 0.1430, train_acc: 0.9502 test_loss: 0.8923, test_acc: 0.8031, best: 0.8044, time: 0:00:46
 Epoch: 257, lr: 4.0e-04, train_loss: 0.1529, train_acc: 0.9470 test_loss: 0.9134, test_acc: 0.7985, best: 0.8044, time: 0:00:46
 Epoch: 258, lr: 4.0e-04, train_loss: 0.1440, train_acc: 0.9502 test_loss: 0.9024, test_acc: 0.8053, best: 0.8053, time: 0:00:47
 Epoch: 259, lr: 4.0e-04, train_loss: 0.1547, train_acc: 0.9524 test_loss: 0.9024, test_acc: 0.8020, best: 0.8053, time: 0:00:47
 Epoch: 260, lr: 4.0e-04, train_loss: 0.1519, train_acc: 0.9472 test_loss: 0.9168, test_acc: 0.7980, best: 0.8053, time: 0:00:46
 Epoch: 261, lr: 4.0e-04, train_loss: 0.1384, train_acc: 0.9506 test_loss: 0.9043, test_acc: 0.8025, best: 0.8053, time: 0:00:46
 Epoch: 262, lr: 4.0e-04, train_loss: 0.1467, train_acc: 0.9476 test_loss: 0.8683, test_acc: 0.8039, best: 0.8053, time: 0:00:47
 Epoch: 263, lr: 4.0e-04, train_loss: 0.1450, train_acc: 0.9518 test_loss: 0.9065, test_acc: 0.8031, best: 0.8053, time: 0:00:46
 Epoch: 264, lr: 4.0e-04, train_loss: 0.1414, train_acc: 0.9522 test_loss: 0.9122, test_acc: 0.7989, best: 0.8053, time: 0:00:46
 Epoch: 265, lr: 4.0e-04, train_loss: 0.1382, train_acc: 0.9506 test_loss: 0.9104, test_acc: 0.8007, best: 0.8053, time: 0:00:46
 Epoch: 266, lr: 4.0e-04, train_loss: 0.1411, train_acc: 0.9524 test_loss: 0.8979, test_acc: 0.8004, best: 0.8053, time: 0:00:46
 Epoch: 267, lr: 4.0e-04, train_loss: 0.1376, train_acc: 0.9504 test_loss: 0.9062, test_acc: 0.8017, best: 0.8053, time: 0:00:46
 Epoch: 268, lr: 4.0e-04, train_loss: 0.1526, train_acc: 0.9492 test_loss: 0.9241, test_acc: 0.8011, best: 0.8053, time: 0:00:46
 Epoch: 269, lr: 4.0e-04, train_loss: 0.1504, train_acc: 0.9518 test_loss: 0.9196, test_acc: 0.7980, best: 0.8053, time: 0:00:46
 Epoch: 270, lr: 8.0e-05, train_loss: 0.1369, train_acc: 0.9526 test_loss: 0.8869, test_acc: 0.8015, best: 0.8053, time: 0:00:46
 Epoch: 271, lr: 8.0e-05, train_loss: 0.1467, train_acc: 0.9536 test_loss: 0.9053, test_acc: 0.8034, best: 0.8053, time: 0:00:46
 Epoch: 272, lr: 8.0e-05, train_loss: 0.1452, train_acc: 0.9500 test_loss: 0.9018, test_acc: 0.8016, best: 0.8053, time: 0:00:46
 Epoch: 273, lr: 8.0e-05, train_loss: 0.1533, train_acc: 0.9460 test_loss: 0.9134, test_acc: 0.8005, best: 0.8053, time: 0:00:46
 Epoch: 274, lr: 8.0e-05, train_loss: 0.1409, train_acc: 0.9504 test_loss: 0.9342, test_acc: 0.8023, best: 0.8053, time: 0:00:46
 Epoch: 275, lr: 8.0e-05, train_loss: 0.1441, train_acc: 0.9512 test_loss: 0.8812, test_acc: 0.8025, best: 0.8053, time: 0:00:46
 Epoch: 276, lr: 8.0e-05, train_loss: 0.1361, train_acc: 0.9556 test_loss: 0.9089, test_acc: 0.7996, best: 0.8053, time: 0:00:46
 Epoch: 277, lr: 8.0e-05, train_loss: 0.1356, train_acc: 0.9526 test_loss: 0.8851, test_acc: 0.8035, best: 0.8053, time: 0:00:46
 Epoch: 278, lr: 8.0e-05, train_loss: 0.1372, train_acc: 0.9550 test_loss: 0.9174, test_acc: 0.8007, best: 0.8053, time: 0:00:46
 Epoch: 279, lr: 8.0e-05, train_loss: 0.1459, train_acc: 0.9508 test_loss: 0.8901, test_acc: 0.8051, best: 0.8053, time: 0:00:46
 Epoch: 280, lr: 8.0e-05, train_loss: 0.1438, train_acc: 0.9530 test_loss: 0.9157, test_acc: 0.8011, best: 0.8053, time: 0:00:46
 Epoch: 281, lr: 8.0e-05, train_loss: 0.1311, train_acc: 0.9560 test_loss: 0.9117, test_acc: 0.8030, best: 0.8053, time: 0:00:46
 Epoch: 282, lr: 8.0e-05, train_loss: 0.1497, train_acc: 0.9508 test_loss: 0.9076, test_acc: 0.7991, best: 0.8053, time: 0:00:46
 Epoch: 283, lr: 8.0e-05, train_loss: 0.1294, train_acc: 0.9554 test_loss: 0.9074, test_acc: 0.8001, best: 0.8053, time: 0:00:46
 Epoch: 284, lr: 8.0e-05, train_loss: 0.1527, train_acc: 0.9476 test_loss: 0.8956, test_acc: 0.8019, best: 0.8053, time: 0:00:46
 Epoch: 285, lr: 8.0e-05, train_loss: 0.1282, train_acc: 0.9558 test_loss: 0.8855, test_acc: 0.8046, best: 0.8053, time: 0:00:46
 Epoch: 286, lr: 8.0e-05, train_loss: 0.1344, train_acc: 0.9548 test_loss: 0.9024, test_acc: 0.8015, best: 0.8053, time: 0:00:46
 Epoch: 287, lr: 8.0e-05, train_loss: 0.1395, train_acc: 0.9500 test_loss: 0.9005, test_acc: 0.8039, best: 0.8053, time: 0:00:46
 Epoch: 288, lr: 8.0e-05, train_loss: 0.1333, train_acc: 0.9526 test_loss: 0.9136, test_acc: 0.8033, best: 0.8053, time: 0:00:46
 Epoch: 289, lr: 8.0e-05, train_loss: 0.1392, train_acc: 0.9530 test_loss: 0.9060, test_acc: 0.8009, best: 0.8053, time: 0:00:46
 Epoch: 290, lr: 8.0e-05, train_loss: 0.1374, train_acc: 0.9550 test_loss: 0.8955, test_acc: 0.8034, best: 0.8053, time: 0:00:46
 Epoch: 291, lr: 8.0e-05, train_loss: 0.1321, train_acc: 0.9564 test_loss: 0.9197, test_acc: 0.8050, best: 0.8053, time: 0:00:46
 Epoch: 292, lr: 8.0e-05, train_loss: 0.1470, train_acc: 0.9486 test_loss: 0.8966, test_acc: 0.8033, best: 0.8053, time: 0:00:46
 Epoch: 293, lr: 8.0e-05, train_loss: 0.1488, train_acc: 0.9508 test_loss: 0.9047, test_acc: 0.8026, best: 0.8053, time: 0:00:46
 Epoch: 294, lr: 8.0e-05, train_loss: 0.1436, train_acc: 0.9508 test_loss: 0.8889, test_acc: 0.8051, best: 0.8053, time: 0:00:46
 Epoch: 295, lr: 8.0e-05, train_loss: 0.1536, train_acc: 0.9496 test_loss: 0.9031, test_acc: 0.7999, best: 0.8053, time: 0:00:46
 Epoch: 296, lr: 8.0e-05, train_loss: 0.1357, train_acc: 0.9552 test_loss: 0.8854, test_acc: 0.8035, best: 0.8053, time: 0:00:46
 Epoch: 297, lr: 8.0e-05, train_loss: 0.1475, train_acc: 0.9508 test_loss: 0.8896, test_acc: 0.8020, best: 0.8053, time: 0:00:46
 Epoch: 298, lr: 8.0e-05, train_loss: 0.1400, train_acc: 0.9506 test_loss: 0.8872, test_acc: 0.8025, best: 0.8053, time: 0:00:46
 Epoch: 299, lr: 8.0e-05, train_loss: 0.1358, train_acc: 0.9570 test_loss: 0.8854, test_acc: 0.8024, best: 0.8053, time: 0:00:46
 Highest accuracy: 0.8053