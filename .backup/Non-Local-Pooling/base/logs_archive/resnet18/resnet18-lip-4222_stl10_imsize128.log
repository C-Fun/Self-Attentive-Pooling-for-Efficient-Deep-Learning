
 Run on time: 2022-06-29 16:01:11.362378

 Arguments:
	 gpu                  : True
	 log                  : True
	 seed                 : 0
	 momentum             : 0.9
	 amsgrad              : True
	 dataset              : STL10
	 batch_size           : 8
	 architecture         : RESNET18_LIP_4222
	 im_size              : 128
	 relu_threshold       : 4.0
	 learning_rate        : 0.01
	 pretrained_backbone  : 
	 pretrained_ann       : 
	 weight_decay         : 0.0
	 test_only            : False
	 epochs               : 300
	 lr_interval          : [180, 240, 270]
	 lr_reduce            : 5
	 optimizer            : SGD
	 dropout              : 0.2
	 kernel_size          : 3
	 dont_save            : False
	 visualize            : False
	 devices              : 0
 DataParallel(
  (module): NetworkByName(
    (net): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): LIP_BASE(
              (logit): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=4, stride=4, padding=0)
        )
      )
      (layer2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): LIP_BASE(
              (logit): Sequential(
                (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer3): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): LIP_BASE(
              (logit): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer4): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): LIP_BASE(
              (logit): Sequential(
                (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=512, out_features=10, bias=True)
    )
  )
)
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0
)
 Epoch: 1, lr: 1.0e-02, train_loss: 2.3391, train_acc: 0.1902 test_loss: 1.7738, test_acc: 0.3309, best: 0.3309, time: 0:00:42
 Epoch: 2, lr: 1.0e-02, train_loss: 1.9884, train_acc: 0.2490 test_loss: 1.7155, test_acc: 0.3689, best: 0.3689, time: 0:00:42
 Epoch: 3, lr: 1.0e-02, train_loss: 1.8933, train_acc: 0.2846 test_loss: 1.6962, test_acc: 0.3731, best: 0.3731, time: 0:00:42
 Epoch: 4, lr: 1.0e-02, train_loss: 1.8341, train_acc: 0.3192 test_loss: 1.7256, test_acc: 0.3748, best: 0.3748, time: 0:00:42
 Epoch: 5, lr: 1.0e-02, train_loss: 1.7914, train_acc: 0.3358 test_loss: 1.4837, test_acc: 0.4335, best: 0.4335, time: 0:00:42
 Epoch: 6, lr: 1.0e-02, train_loss: 1.7256, train_acc: 0.3646 test_loss: 1.4593, test_acc: 0.4679, best: 0.4679, time: 0:00:42
 Epoch: 7, lr: 1.0e-02, train_loss: 1.6810, train_acc: 0.3824 test_loss: 1.4481, test_acc: 0.4531, best: 0.4679, time: 0:00:42
 Epoch: 8, lr: 1.0e-02, train_loss: 1.6372, train_acc: 0.3864 test_loss: 1.4249, test_acc: 0.4703, best: 0.4703, time: 0:00:42
 Epoch: 9, lr: 1.0e-02, train_loss: 1.5922, train_acc: 0.4134 test_loss: 1.3743, test_acc: 0.4933, best: 0.4933, time: 0:00:42
 Epoch: 10, lr: 1.0e-02, train_loss: 1.5458, train_acc: 0.4292 test_loss: 1.3948, test_acc: 0.5044, best: 0.5044, time: 0:00:42
 Epoch: 11, lr: 1.0e-02, train_loss: 1.5123, train_acc: 0.4456 test_loss: 1.2279, test_acc: 0.5407, best: 0.5407, time: 0:00:42
 Epoch: 12, lr: 1.0e-02, train_loss: 1.4783, train_acc: 0.4592 test_loss: 1.2496, test_acc: 0.5394, best: 0.5407, time: 0:00:42
 Epoch: 13, lr: 1.0e-02, train_loss: 1.4276, train_acc: 0.4680 test_loss: 1.3150, test_acc: 0.5180, best: 0.5407, time: 0:00:42
 Epoch: 14, lr: 1.0e-02, train_loss: 1.3959, train_acc: 0.4878 test_loss: 1.2537, test_acc: 0.5401, best: 0.5407, time: 0:00:42
 Epoch: 15, lr: 1.0e-02, train_loss: 1.3790, train_acc: 0.4992 test_loss: 1.1868, test_acc: 0.5681, best: 0.5681, time: 0:00:42
 Epoch: 16, lr: 1.0e-02, train_loss: 1.3650, train_acc: 0.4978 test_loss: 1.1509, test_acc: 0.5739, best: 0.5739, time: 0:00:42
 Epoch: 17, lr: 1.0e-02, train_loss: 1.3329, train_acc: 0.5138 test_loss: 1.1861, test_acc: 0.5721, best: 0.5739, time: 0:00:42
 Epoch: 18, lr: 1.0e-02, train_loss: 1.3001, train_acc: 0.5198 test_loss: 1.1966, test_acc: 0.5711, best: 0.5739, time: 0:00:42
 Epoch: 19, lr: 1.0e-02, train_loss: 1.3228, train_acc: 0.5218 test_loss: 1.2758, test_acc: 0.5401, best: 0.5739, time: 0:00:42
 Epoch: 20, lr: 1.0e-02, train_loss: 1.2689, train_acc: 0.5354 test_loss: 1.0820, test_acc: 0.6080, best: 0.6080, time: 0:00:42
 Epoch: 21, lr: 1.0e-02, train_loss: 1.2611, train_acc: 0.5400 test_loss: 1.2094, test_acc: 0.5744, best: 0.6080, time: 0:00:42
 Epoch: 22, lr: 1.0e-02, train_loss: 1.2290, train_acc: 0.5462 test_loss: 1.0995, test_acc: 0.5989, best: 0.6080, time: 0:00:42
 Epoch: 23, lr: 1.0e-02, train_loss: 1.2066, train_acc: 0.5570 test_loss: 1.1259, test_acc: 0.5916, best: 0.6080, time: 0:00:42
 Epoch: 24, lr: 1.0e-02, train_loss: 1.2003, train_acc: 0.5602 test_loss: 1.0372, test_acc: 0.6211, best: 0.6211, time: 0:00:42
 Epoch: 25, lr: 1.0e-02, train_loss: 1.1890, train_acc: 0.5628 test_loss: 1.0895, test_acc: 0.6129, best: 0.6211, time: 0:00:42
 Epoch: 26, lr: 1.0e-02, train_loss: 1.1501, train_acc: 0.5800 test_loss: 1.0959, test_acc: 0.6021, best: 0.6211, time: 0:00:42
 Epoch: 27, lr: 1.0e-02, train_loss: 1.1409, train_acc: 0.5896 test_loss: 1.0625, test_acc: 0.6288, best: 0.6288, time: 0:00:42
 Epoch: 28, lr: 1.0e-02, train_loss: 1.1192, train_acc: 0.5954 test_loss: 1.0039, test_acc: 0.6395, best: 0.6395, time: 0:00:42
 Epoch: 29, lr: 1.0e-02, train_loss: 1.1317, train_acc: 0.5798 test_loss: 1.0264, test_acc: 0.6399, best: 0.6399, time: 0:00:42
 Epoch: 30, lr: 1.0e-02, train_loss: 1.1186, train_acc: 0.5952 test_loss: 0.9952, test_acc: 0.6395, best: 0.6399, time: 0:00:42
 Epoch: 31, lr: 1.0e-02, train_loss: 1.0754, train_acc: 0.6086 test_loss: 0.9906, test_acc: 0.6481, best: 0.6481, time: 0:00:42
 Epoch: 32, lr: 1.0e-02, train_loss: 1.0749, train_acc: 0.6076 test_loss: 1.0119, test_acc: 0.6472, best: 0.6481, time: 0:00:42
 Epoch: 33, lr: 1.0e-02, train_loss: 1.0469, train_acc: 0.6334 test_loss: 1.0683, test_acc: 0.6204, best: 0.6481, time: 0:00:42
 Epoch: 34, lr: 1.0e-02, train_loss: 1.0200, train_acc: 0.6274 test_loss: 1.1544, test_acc: 0.6174, best: 0.6481, time: 0:00:42
 Epoch: 35, lr: 1.0e-02, train_loss: 1.0422, train_acc: 0.6176 test_loss: 1.0262, test_acc: 0.6380, best: 0.6481, time: 0:00:42
 Epoch: 36, lr: 1.0e-02, train_loss: 1.0300, train_acc: 0.6266 test_loss: 1.0480, test_acc: 0.6382, best: 0.6481, time: 0:00:42
 Epoch: 37, lr: 1.0e-02, train_loss: 1.0144, train_acc: 0.6344 test_loss: 1.0192, test_acc: 0.6479, best: 0.6481, time: 0:00:42
 Epoch: 38, lr: 1.0e-02, train_loss: 0.9985, train_acc: 0.6446 test_loss: 0.9754, test_acc: 0.6657, best: 0.6657, time: 0:00:42
 Epoch: 39, lr: 1.0e-02, train_loss: 0.9841, train_acc: 0.6568 test_loss: 0.9048, test_acc: 0.6823, best: 0.6823, time: 0:00:42
 Epoch: 40, lr: 1.0e-02, train_loss: 0.9624, train_acc: 0.6474 test_loss: 1.1304, test_acc: 0.6295, best: 0.6823, time: 0:00:42
 Epoch: 41, lr: 1.0e-02, train_loss: 0.9679, train_acc: 0.6534 test_loss: 0.9049, test_acc: 0.6904, best: 0.6904, time: 0:00:42
 Epoch: 42, lr: 1.0e-02, train_loss: 0.9509, train_acc: 0.6586 test_loss: 0.9429, test_acc: 0.6777, best: 0.6904, time: 0:00:42
 Epoch: 43, lr: 1.0e-02, train_loss: 0.9508, train_acc: 0.6484 test_loss: 0.9540, test_acc: 0.6734, best: 0.6904, time: 0:00:42
 Epoch: 44, lr: 1.0e-02, train_loss: 0.9414, train_acc: 0.6590 test_loss: 0.8850, test_acc: 0.6970, best: 0.6970, time: 0:00:42
 Epoch: 45, lr: 1.0e-02, train_loss: 0.9263, train_acc: 0.6670 test_loss: 0.9783, test_acc: 0.6695, best: 0.6970, time: 0:00:42
 Epoch: 46, lr: 1.0e-02, train_loss: 0.9174, train_acc: 0.6714 test_loss: 0.8973, test_acc: 0.7000, best: 0.7000, time: 0:00:42
 Epoch: 47, lr: 1.0e-02, train_loss: 0.8969, train_acc: 0.6732 test_loss: 1.0528, test_acc: 0.6605, best: 0.7000, time: 0:00:41
 Epoch: 48, lr: 1.0e-02, train_loss: 0.9099, train_acc: 0.6684 test_loss: 0.8988, test_acc: 0.6941, best: 0.7000, time: 0:00:41
 Epoch: 49, lr: 1.0e-02, train_loss: 0.8813, train_acc: 0.6846 test_loss: 1.0564, test_acc: 0.6529, best: 0.7000, time: 0:00:41
 Epoch: 50, lr: 1.0e-02, train_loss: 0.8835, train_acc: 0.6796 test_loss: 0.9800, test_acc: 0.6739, best: 0.7000, time: 0:00:42
 Epoch: 51, lr: 1.0e-02, train_loss: 0.8772, train_acc: 0.6888 test_loss: 0.9812, test_acc: 0.6724, best: 0.7000, time: 0:00:41
 Epoch: 52, lr: 1.0e-02, train_loss: 0.8522, train_acc: 0.6918 test_loss: 0.9500, test_acc: 0.6866, best: 0.7000, time: 0:00:42
 Epoch: 53, lr: 1.0e-02, train_loss: 0.8706, train_acc: 0.6892 test_loss: 0.8886, test_acc: 0.7026, best: 0.7026, time: 0:00:42
 Epoch: 54, lr: 1.0e-02, train_loss: 0.8484, train_acc: 0.6940 test_loss: 0.8824, test_acc: 0.7071, best: 0.7071, time: 0:00:42
 Epoch: 55, lr: 1.0e-02, train_loss: 0.8608, train_acc: 0.6916 test_loss: 0.8426, test_acc: 0.7087, best: 0.7087, time: 0:00:42
 Epoch: 56, lr: 1.0e-02, train_loss: 0.8225, train_acc: 0.7116 test_loss: 0.9388, test_acc: 0.6953, best: 0.7087, time: 0:00:42
 Epoch: 57, lr: 1.0e-02, train_loss: 0.8142, train_acc: 0.7116 test_loss: 0.9586, test_acc: 0.6906, best: 0.7087, time: 0:00:42
 Epoch: 58, lr: 1.0e-02, train_loss: 0.8366, train_acc: 0.7004 test_loss: 0.8983, test_acc: 0.7104, best: 0.7104, time: 0:00:42
 Epoch: 59, lr: 1.0e-02, train_loss: 0.8029, train_acc: 0.7142 test_loss: 0.9441, test_acc: 0.6994, best: 0.7104, time: 0:00:42
 Epoch: 60, lr: 1.0e-02, train_loss: 0.8136, train_acc: 0.7118 test_loss: 1.0354, test_acc: 0.6756, best: 0.7104, time: 0:00:42
 Epoch: 61, lr: 1.0e-02, train_loss: 0.7909, train_acc: 0.7188 test_loss: 0.9795, test_acc: 0.6857, best: 0.7104, time: 0:00:42
 Epoch: 62, lr: 1.0e-02, train_loss: 0.7608, train_acc: 0.7226 test_loss: 0.9592, test_acc: 0.6949, best: 0.7104, time: 0:00:41
 Epoch: 63, lr: 1.0e-02, train_loss: 0.7805, train_acc: 0.7244 test_loss: 0.9170, test_acc: 0.7121, best: 0.7121, time: 0:00:42
 Epoch: 64, lr: 1.0e-02, train_loss: 0.7632, train_acc: 0.7286 test_loss: 0.9540, test_acc: 0.6967, best: 0.7121, time: 0:00:41
 Epoch: 65, lr: 1.0e-02, train_loss: 0.7721, train_acc: 0.7264 test_loss: 0.9126, test_acc: 0.7179, best: 0.7179, time: 0:00:42
 Epoch: 66, lr: 1.0e-02, train_loss: 0.7601, train_acc: 0.7248 test_loss: 0.8747, test_acc: 0.7196, best: 0.7196, time: 0:00:42
 Epoch: 67, lr: 1.0e-02, train_loss: 0.7413, train_acc: 0.7284 test_loss: 0.9352, test_acc: 0.7067, best: 0.7196, time: 0:00:41
 Epoch: 68, lr: 1.0e-02, train_loss: 0.7394, train_acc: 0.7408 test_loss: 0.8939, test_acc: 0.7151, best: 0.7196, time: 0:00:41
 Epoch: 69, lr: 1.0e-02, train_loss: 0.7372, train_acc: 0.7402 test_loss: 0.8854, test_acc: 0.7174, best: 0.7196, time: 0:00:41
 Epoch: 70, lr: 1.0e-02, train_loss: 0.7183, train_acc: 0.7424 test_loss: 0.8673, test_acc: 0.7130, best: 0.7196, time: 0:00:42
 Epoch: 71, lr: 1.0e-02, train_loss: 0.7287, train_acc: 0.7434 test_loss: 0.8692, test_acc: 0.7171, best: 0.7196, time: 0:00:42
 Epoch: 72, lr: 1.0e-02, train_loss: 0.7134, train_acc: 0.7424 test_loss: 0.8566, test_acc: 0.7281, best: 0.7281, time: 0:00:42
 Epoch: 73, lr: 1.0e-02, train_loss: 0.7263, train_acc: 0.7436 test_loss: 0.8879, test_acc: 0.7103, best: 0.7281, time: 0:00:42
 Epoch: 74, lr: 1.0e-02, train_loss: 0.7087, train_acc: 0.7508 test_loss: 0.9088, test_acc: 0.7230, best: 0.7281, time: 0:00:41
 Epoch: 75, lr: 1.0e-02, train_loss: 0.7009, train_acc: 0.7512 test_loss: 0.9768, test_acc: 0.7101, best: 0.7281, time: 0:00:42
 Epoch: 76, lr: 1.0e-02, train_loss: 0.6696, train_acc: 0.7604 test_loss: 0.9347, test_acc: 0.7215, best: 0.7281, time: 0:00:41
 Epoch: 77, lr: 1.0e-02, train_loss: 0.6926, train_acc: 0.7606 test_loss: 0.8914, test_acc: 0.7186, best: 0.7281, time: 0:00:41
 Epoch: 78, lr: 1.0e-02, train_loss: 0.6877, train_acc: 0.7556 test_loss: 0.8818, test_acc: 0.7265, best: 0.7281, time: 0:00:42
 Epoch: 79, lr: 1.0e-02, train_loss: 0.6637, train_acc: 0.7666 test_loss: 0.9119, test_acc: 0.7239, best: 0.7281, time: 0:00:41
 Epoch: 80, lr: 1.0e-02, train_loss: 0.6709, train_acc: 0.7668 test_loss: 0.9375, test_acc: 0.7151, best: 0.7281, time: 0:00:41
 Epoch: 81, lr: 1.0e-02, train_loss: 0.6750, train_acc: 0.7620 test_loss: 0.9351, test_acc: 0.7124, best: 0.7281, time: 0:00:41
 Epoch: 82, lr: 1.0e-02, train_loss: 0.6648, train_acc: 0.7656 test_loss: 0.9216, test_acc: 0.7240, best: 0.7281, time: 0:00:41
 Epoch: 83, lr: 1.0e-02, train_loss: 0.6639, train_acc: 0.7638 test_loss: 0.8447, test_acc: 0.7331, best: 0.7331, time: 0:00:42
 Epoch: 84, lr: 1.0e-02, train_loss: 0.6394, train_acc: 0.7742 test_loss: 0.8654, test_acc: 0.7364, best: 0.7364, time: 0:00:42
 Epoch: 85, lr: 1.0e-02, train_loss: 0.6288, train_acc: 0.7770 test_loss: 0.9219, test_acc: 0.7224, best: 0.7364, time: 0:00:41
 Epoch: 86, lr: 1.0e-02, train_loss: 0.6369, train_acc: 0.7708 test_loss: 1.0675, test_acc: 0.6931, best: 0.7364, time: 0:00:41
 Epoch: 87, lr: 1.0e-02, train_loss: 0.6458, train_acc: 0.7704 test_loss: 0.8651, test_acc: 0.7410, best: 0.7410, time: 0:00:41
 Epoch: 88, lr: 1.0e-02, train_loss: 0.6375, train_acc: 0.7710 test_loss: 0.9801, test_acc: 0.7238, best: 0.7410, time: 0:00:41
 Epoch: 89, lr: 1.0e-02, train_loss: 0.6516, train_acc: 0.7684 test_loss: 0.9134, test_acc: 0.7254, best: 0.7410, time: 0:00:41
 Epoch: 90, lr: 1.0e-02, train_loss: 0.6278, train_acc: 0.7790 test_loss: 0.9668, test_acc: 0.7204, best: 0.7410, time: 0:00:41
 Epoch: 91, lr: 1.0e-02, train_loss: 0.5972, train_acc: 0.7878 test_loss: 0.9074, test_acc: 0.7334, best: 0.7410, time: 0:00:41
 Epoch: 92, lr: 1.0e-02, train_loss: 0.6034, train_acc: 0.7938 test_loss: 0.9377, test_acc: 0.7308, best: 0.7410, time: 0:00:42
 Epoch: 93, lr: 1.0e-02, train_loss: 0.6068, train_acc: 0.7912 test_loss: 0.8630, test_acc: 0.7458, best: 0.7458, time: 0:00:41
 Epoch: 94, lr: 1.0e-02, train_loss: 0.5958, train_acc: 0.7888 test_loss: 0.8844, test_acc: 0.7460, best: 0.7460, time: 0:00:41
 Epoch: 95, lr: 1.0e-02, train_loss: 0.5754, train_acc: 0.7978 test_loss: 0.9238, test_acc: 0.7364, best: 0.7460, time: 0:00:41
 Epoch: 96, lr: 1.0e-02, train_loss: 0.5814, train_acc: 0.7960 test_loss: 0.9659, test_acc: 0.7261, best: 0.7460, time: 0:00:41
 Epoch: 97, lr: 1.0e-02, train_loss: 0.5741, train_acc: 0.7994 test_loss: 0.9927, test_acc: 0.7300, best: 0.7460, time: 0:00:41
 Epoch: 98, lr: 1.0e-02, train_loss: 0.5884, train_acc: 0.7906 test_loss: 0.9481, test_acc: 0.7336, best: 0.7460, time: 0:00:41
 Epoch: 99, lr: 1.0e-02, train_loss: 0.5743, train_acc: 0.7958 test_loss: 1.0931, test_acc: 0.7194, best: 0.7460, time: 0:00:41
 Epoch: 100, lr: 1.0e-02, train_loss: 0.5457, train_acc: 0.8066 test_loss: 0.9414, test_acc: 0.7395, best: 0.7460, time: 0:00:41
 Epoch: 101, lr: 1.0e-02, train_loss: 0.5653, train_acc: 0.7972 test_loss: 0.9588, test_acc: 0.7299, best: 0.7460, time: 0:00:42
 Epoch: 102, lr: 1.0e-02, train_loss: 0.5620, train_acc: 0.8006 test_loss: 0.9959, test_acc: 0.7270, best: 0.7460, time: 0:00:41
 Epoch: 103, lr: 1.0e-02, train_loss: 0.5733, train_acc: 0.7904 test_loss: 0.8968, test_acc: 0.7446, best: 0.7460, time: 0:00:41
 Epoch: 104, lr: 1.0e-02, train_loss: 0.5744, train_acc: 0.7988 test_loss: 0.9519, test_acc: 0.7378, best: 0.7460, time: 0:00:41
 Epoch: 105, lr: 1.0e-02, train_loss: 0.5649, train_acc: 0.8006 test_loss: 0.9306, test_acc: 0.7381, best: 0.7460, time: 0:00:41
 Epoch: 106, lr: 1.0e-02, train_loss: 0.5555, train_acc: 0.8036 test_loss: 0.9068, test_acc: 0.7414, best: 0.7460, time: 0:00:41
 Epoch: 107, lr: 1.0e-02, train_loss: 0.5469, train_acc: 0.8102 test_loss: 0.8833, test_acc: 0.7458, best: 0.7460, time: 0:00:41
 Epoch: 108, lr: 1.0e-02, train_loss: 0.5631, train_acc: 0.8000 test_loss: 0.9262, test_acc: 0.7478, best: 0.7478, time: 0:00:42
 Epoch: 109, lr: 1.0e-02, train_loss: 0.5502, train_acc: 0.8036 test_loss: 0.9521, test_acc: 0.7459, best: 0.7478, time: 0:00:41
 Epoch: 110, lr: 1.0e-02, train_loss: 0.5381, train_acc: 0.8136 test_loss: 1.0366, test_acc: 0.7350, best: 0.7478, time: 0:00:41
 Epoch: 111, lr: 1.0e-02, train_loss: 0.5182, train_acc: 0.8170 test_loss: 0.9360, test_acc: 0.7469, best: 0.7478, time: 0:00:41
 Epoch: 112, lr: 1.0e-02, train_loss: 0.5041, train_acc: 0.8258 test_loss: 1.1247, test_acc: 0.7198, best: 0.7478, time: 0:00:41
 Epoch: 113, lr: 1.0e-02, train_loss: 0.5365, train_acc: 0.8128 test_loss: 0.9214, test_acc: 0.7498, best: 0.7498, time: 0:00:41
 Epoch: 114, lr: 1.0e-02, train_loss: 0.5098, train_acc: 0.8268 test_loss: 1.0444, test_acc: 0.7368, best: 0.7498, time: 0:00:41
 Epoch: 115, lr: 1.0e-02, train_loss: 0.5368, train_acc: 0.8076 test_loss: 0.9111, test_acc: 0.7504, best: 0.7504, time: 0:00:42
 Epoch: 116, lr: 1.0e-02, train_loss: 0.5075, train_acc: 0.8184 test_loss: 1.0026, test_acc: 0.7388, best: 0.7504, time: 0:00:41
 Epoch: 117, lr: 1.0e-02, train_loss: 0.5139, train_acc: 0.8208 test_loss: 0.9675, test_acc: 0.7419, best: 0.7504, time: 0:00:41
 Epoch: 118, lr: 1.0e-02, train_loss: 0.5205, train_acc: 0.8172 test_loss: 1.0411, test_acc: 0.7292, best: 0.7504, time: 0:00:41
 Epoch: 119, lr: 1.0e-02, train_loss: 0.5293, train_acc: 0.8106 test_loss: 0.8565, test_acc: 0.7568, best: 0.7568, time: 0:00:41
 Epoch: 120, lr: 1.0e-02, train_loss: 0.4978, train_acc: 0.8238 test_loss: 0.9577, test_acc: 0.7506, best: 0.7568, time: 0:00:41
 Epoch: 121, lr: 1.0e-02, train_loss: 0.4903, train_acc: 0.8336 test_loss: 0.9855, test_acc: 0.7414, best: 0.7568, time: 0:00:41
 Epoch: 122, lr: 1.0e-02, train_loss: 0.5042, train_acc: 0.8182 test_loss: 0.9665, test_acc: 0.7486, best: 0.7568, time: 0:00:41
 Epoch: 123, lr: 1.0e-02, train_loss: 0.5085, train_acc: 0.8222 test_loss: 0.9303, test_acc: 0.7492, best: 0.7568, time: 0:00:41
 Epoch: 124, lr: 1.0e-02, train_loss: 0.5085, train_acc: 0.8276 test_loss: 0.9026, test_acc: 0.7484, best: 0.7568, time: 0:00:41
 Epoch: 125, lr: 1.0e-02, train_loss: 0.4744, train_acc: 0.8378 test_loss: 0.9106, test_acc: 0.7542, best: 0.7568, time: 0:00:41
 Epoch: 126, lr: 1.0e-02, train_loss: 0.4974, train_acc: 0.8250 test_loss: 0.9400, test_acc: 0.7522, best: 0.7568, time: 0:00:41
 Epoch: 127, lr: 1.0e-02, train_loss: 0.4863, train_acc: 0.8298 test_loss: 0.9120, test_acc: 0.7525, best: 0.7568, time: 0:00:41
 Epoch: 128, lr: 1.0e-02, train_loss: 0.4811, train_acc: 0.8316 test_loss: 0.9253, test_acc: 0.7489, best: 0.7568, time: 0:00:41
 Epoch: 129, lr: 1.0e-02, train_loss: 0.4791, train_acc: 0.8314 test_loss: 0.9784, test_acc: 0.7500, best: 0.7568, time: 0:00:41
 Epoch: 130, lr: 1.0e-02, train_loss: 0.4762, train_acc: 0.8340 test_loss: 1.0333, test_acc: 0.7419, best: 0.7568, time: 0:00:41
 Epoch: 131, lr: 1.0e-02, train_loss: 0.4780, train_acc: 0.8334 test_loss: 0.9097, test_acc: 0.7574, best: 0.7574, time: 0:00:41
 Epoch: 132, lr: 1.0e-02, train_loss: 0.4675, train_acc: 0.8336 test_loss: 1.0021, test_acc: 0.7395, best: 0.7574, time: 0:00:41
 Epoch: 133, lr: 1.0e-02, train_loss: 0.4743, train_acc: 0.8374 test_loss: 0.8967, test_acc: 0.7602, best: 0.7602, time: 0:00:41
 Epoch: 134, lr: 1.0e-02, train_loss: 0.4528, train_acc: 0.8430 test_loss: 0.9414, test_acc: 0.7556, best: 0.7602, time: 0:00:41
 Epoch: 135, lr: 1.0e-02, train_loss: 0.4712, train_acc: 0.8362 test_loss: 0.9657, test_acc: 0.7430, best: 0.7602, time: 0:00:41
 Epoch: 136, lr: 1.0e-02, train_loss: 0.4731, train_acc: 0.8294 test_loss: 0.9645, test_acc: 0.7500, best: 0.7602, time: 0:00:41
 Epoch: 137, lr: 1.0e-02, train_loss: 0.4581, train_acc: 0.8378 test_loss: 0.9312, test_acc: 0.7584, best: 0.7602, time: 0:00:41
 Epoch: 138, lr: 1.0e-02, train_loss: 0.4339, train_acc: 0.8466 test_loss: 1.0045, test_acc: 0.7406, best: 0.7602, time: 0:00:41
 Epoch: 139, lr: 1.0e-02, train_loss: 0.4587, train_acc: 0.8386 test_loss: 0.9600, test_acc: 0.7565, best: 0.7602, time: 0:00:41
 Epoch: 140, lr: 1.0e-02, train_loss: 0.4232, train_acc: 0.8542 test_loss: 1.0207, test_acc: 0.7432, best: 0.7602, time: 0:00:41
 Epoch: 141, lr: 1.0e-02, train_loss: 0.4329, train_acc: 0.8452 test_loss: 1.0051, test_acc: 0.7476, best: 0.7602, time: 0:00:41
 Epoch: 142, lr: 1.0e-02, train_loss: 0.4207, train_acc: 0.8558 test_loss: 0.9401, test_acc: 0.7636, best: 0.7636, time: 0:00:41
 Epoch: 143, lr: 1.0e-02, train_loss: 0.4371, train_acc: 0.8466 test_loss: 1.0165, test_acc: 0.7471, best: 0.7636, time: 0:00:41
 Epoch: 144, lr: 1.0e-02, train_loss: 0.4465, train_acc: 0.8488 test_loss: 0.9212, test_acc: 0.7574, best: 0.7636, time: 0:00:41
 Epoch: 145, lr: 1.0e-02, train_loss: 0.4467, train_acc: 0.8488 test_loss: 0.9936, test_acc: 0.7470, best: 0.7636, time: 0:00:41
 Epoch: 146, lr: 1.0e-02, train_loss: 0.4337, train_acc: 0.8554 test_loss: 1.0240, test_acc: 0.7488, best: 0.7636, time: 0:00:41
 Epoch: 147, lr: 1.0e-02, train_loss: 0.4381, train_acc: 0.8556 test_loss: 1.0262, test_acc: 0.7529, best: 0.7636, time: 0:00:41
 Epoch: 148, lr: 1.0e-02, train_loss: 0.4309, train_acc: 0.8542 test_loss: 1.0579, test_acc: 0.7425, best: 0.7636, time: 0:00:41
 Epoch: 149, lr: 1.0e-02, train_loss: 0.4421, train_acc: 0.8450 test_loss: 1.0373, test_acc: 0.7522, best: 0.7636, time: 0:00:41
 Epoch: 150, lr: 1.0e-02, train_loss: 0.4374, train_acc: 0.8490 test_loss: 1.0619, test_acc: 0.7441, best: 0.7636, time: 0:00:41
 Epoch: 151, lr: 1.0e-02, train_loss: 0.4242, train_acc: 0.8536 test_loss: 1.1389, test_acc: 0.7260, best: 0.7636, time: 0:00:41
 Epoch: 152, lr: 1.0e-02, train_loss: 0.4073, train_acc: 0.8628 test_loss: 1.0938, test_acc: 0.7406, best: 0.7636, time: 0:00:41
 Epoch: 153, lr: 1.0e-02, train_loss: 0.4211, train_acc: 0.8534 test_loss: 1.0366, test_acc: 0.7535, best: 0.7636, time: 0:00:41
 Epoch: 154, lr: 1.0e-02, train_loss: 0.4315, train_acc: 0.8542 test_loss: 1.0382, test_acc: 0.7479, best: 0.7636, time: 0:00:41
 Epoch: 155, lr: 1.0e-02, train_loss: 0.4255, train_acc: 0.8472 test_loss: 1.0689, test_acc: 0.7446, best: 0.7636, time: 0:00:41
 Epoch: 156, lr: 1.0e-02, train_loss: 0.4438, train_acc: 0.8508 test_loss: 0.9957, test_acc: 0.7465, best: 0.7636, time: 0:00:41
 Epoch: 157, lr: 1.0e-02, train_loss: 0.4284, train_acc: 0.8504 test_loss: 0.9725, test_acc: 0.7629, best: 0.7636, time: 0:00:41
 Epoch: 158, lr: 1.0e-02, train_loss: 0.3946, train_acc: 0.8676 test_loss: 1.0593, test_acc: 0.7469, best: 0.7636, time: 0:00:42
 Epoch: 159, lr: 1.0e-02, train_loss: 0.4077, train_acc: 0.8612 test_loss: 0.9742, test_acc: 0.7516, best: 0.7636, time: 0:00:42
 Epoch: 160, lr: 1.0e-02, train_loss: 0.3938, train_acc: 0.8602 test_loss: 0.9753, test_acc: 0.7626, best: 0.7636, time: 0:00:41
 Epoch: 161, lr: 1.0e-02, train_loss: 0.4096, train_acc: 0.8616 test_loss: 0.9625, test_acc: 0.7568, best: 0.7636, time: 0:00:41
 Epoch: 162, lr: 1.0e-02, train_loss: 0.4254, train_acc: 0.8474 test_loss: 1.0044, test_acc: 0.7495, best: 0.7636, time: 0:00:41
 Epoch: 163, lr: 1.0e-02, train_loss: 0.4039, train_acc: 0.8632 test_loss: 0.9607, test_acc: 0.7635, best: 0.7636, time: 0:00:42
 Epoch: 164, lr: 1.0e-02, train_loss: 0.3767, train_acc: 0.8682 test_loss: 1.0226, test_acc: 0.7524, best: 0.7636, time: 0:00:41
 Epoch: 165, lr: 1.0e-02, train_loss: 0.4075, train_acc: 0.8564 test_loss: 0.9456, test_acc: 0.7544, best: 0.7636, time: 0:00:41
 Epoch: 166, lr: 1.0e-02, train_loss: 0.3994, train_acc: 0.8614 test_loss: 0.9424, test_acc: 0.7591, best: 0.7636, time: 0:00:41
 Epoch: 167, lr: 1.0e-02, train_loss: 0.4090, train_acc: 0.8576 test_loss: 1.0503, test_acc: 0.7415, best: 0.7636, time: 0:00:41
 Epoch: 168, lr: 1.0e-02, train_loss: 0.4146, train_acc: 0.8606 test_loss: 0.9973, test_acc: 0.7472, best: 0.7636, time: 0:00:42
 Epoch: 169, lr: 1.0e-02, train_loss: 0.4039, train_acc: 0.8628 test_loss: 0.9489, test_acc: 0.7628, best: 0.7636, time: 0:00:41
 Epoch: 170, lr: 1.0e-02, train_loss: 0.3897, train_acc: 0.8646 test_loss: 0.9418, test_acc: 0.7599, best: 0.7636, time: 0:00:41
 Epoch: 171, lr: 1.0e-02, train_loss: 0.3865, train_acc: 0.8592 test_loss: 0.9967, test_acc: 0.7514, best: 0.7636, time: 0:00:41
 Epoch: 172, lr: 1.0e-02, train_loss: 0.3842, train_acc: 0.8678 test_loss: 0.9553, test_acc: 0.7529, best: 0.7636, time: 0:00:41
 Epoch: 173, lr: 1.0e-02, train_loss: 0.3738, train_acc: 0.8722 test_loss: 0.9864, test_acc: 0.7564, best: 0.7636, time: 0:00:41
 Epoch: 174, lr: 1.0e-02, train_loss: 0.3906, train_acc: 0.8642 test_loss: 1.0105, test_acc: 0.7592, best: 0.7636, time: 0:00:41
 Epoch: 175, lr: 1.0e-02, train_loss: 0.3866, train_acc: 0.8686 test_loss: 1.0065, test_acc: 0.7606, best: 0.7636, time: 0:00:41
 Epoch: 176, lr: 1.0e-02, train_loss: 0.3534, train_acc: 0.8796 test_loss: 1.0914, test_acc: 0.7514, best: 0.7636, time: 0:00:41
 Epoch: 177, lr: 1.0e-02, train_loss: 0.3625, train_acc: 0.8740 test_loss: 1.0952, test_acc: 0.7490, best: 0.7636, time: 0:00:41
 Epoch: 178, lr: 1.0e-02, train_loss: 0.4008, train_acc: 0.8632 test_loss: 0.9947, test_acc: 0.7461, best: 0.7636, time: 0:00:41
 Epoch: 179, lr: 1.0e-02, train_loss: 0.3927, train_acc: 0.8644 test_loss: 1.0498, test_acc: 0.7491, best: 0.7636, time: 0:00:41
 Epoch: 180, lr: 2.0e-03, train_loss: 0.3235, train_acc: 0.8896 test_loss: 0.9559, test_acc: 0.7678, best: 0.7678, time: 0:00:41
 Epoch: 181, lr: 2.0e-03, train_loss: 0.2930, train_acc: 0.8972 test_loss: 0.9560, test_acc: 0.7688, best: 0.7688, time: 0:00:41
 Epoch: 182, lr: 2.0e-03, train_loss: 0.3170, train_acc: 0.8896 test_loss: 0.9474, test_acc: 0.7750, best: 0.7750, time: 0:00:41
 Epoch: 183, lr: 2.0e-03, train_loss: 0.2951, train_acc: 0.9000 test_loss: 0.9456, test_acc: 0.7759, best: 0.7759, time: 0:00:42
 Epoch: 184, lr: 2.0e-03, train_loss: 0.2736, train_acc: 0.9038 test_loss: 1.0186, test_acc: 0.7686, best: 0.7759, time: 0:00:41
 Epoch: 185, lr: 2.0e-03, train_loss: 0.2998, train_acc: 0.8992 test_loss: 0.9503, test_acc: 0.7726, best: 0.7759, time: 0:00:41
 Epoch: 186, lr: 2.0e-03, train_loss: 0.2681, train_acc: 0.9074 test_loss: 0.9553, test_acc: 0.7736, best: 0.7759, time: 0:00:42
 Epoch: 187, lr: 2.0e-03, train_loss: 0.2745, train_acc: 0.9074 test_loss: 0.9378, test_acc: 0.7776, best: 0.7776, time: 0:00:42
 Epoch: 188, lr: 2.0e-03, train_loss: 0.2841, train_acc: 0.9012 test_loss: 0.9553, test_acc: 0.7746, best: 0.7776, time: 0:00:43
 Epoch: 189, lr: 2.0e-03, train_loss: 0.2641, train_acc: 0.9068 test_loss: 0.9135, test_acc: 0.7755, best: 0.7776, time: 0:00:41
 Epoch: 190, lr: 2.0e-03, train_loss: 0.2711, train_acc: 0.9050 test_loss: 0.9642, test_acc: 0.7785, best: 0.7785, time: 0:00:43
 Epoch: 191, lr: 2.0e-03, train_loss: 0.2733, train_acc: 0.9072 test_loss: 0.9548, test_acc: 0.7799, best: 0.7799, time: 0:00:42
 Epoch: 192, lr: 2.0e-03, train_loss: 0.2708, train_acc: 0.9064 test_loss: 0.9636, test_acc: 0.7785, best: 0.7799, time: 0:00:41
 Epoch: 193, lr: 2.0e-03, train_loss: 0.2687, train_acc: 0.9054 test_loss: 0.9715, test_acc: 0.7771, best: 0.7799, time: 0:00:41
 Epoch: 194, lr: 2.0e-03, train_loss: 0.2457, train_acc: 0.9146 test_loss: 0.9748, test_acc: 0.7756, best: 0.7799, time: 0:00:41
 Epoch: 195, lr: 2.0e-03, train_loss: 0.2609, train_acc: 0.9110 test_loss: 0.9389, test_acc: 0.7780, best: 0.7799, time: 0:00:41
 Epoch: 196, lr: 2.0e-03, train_loss: 0.2734, train_acc: 0.9012 test_loss: 0.9848, test_acc: 0.7756, best: 0.7799, time: 0:00:41
 Epoch: 197, lr: 2.0e-03, train_loss: 0.2768, train_acc: 0.9038 test_loss: 1.0233, test_acc: 0.7762, best: 0.7799, time: 0:00:41
 Epoch: 198, lr: 2.0e-03, train_loss: 0.2601, train_acc: 0.9116 test_loss: 0.9515, test_acc: 0.7790, best: 0.7799, time: 0:00:41
 Epoch: 199, lr: 2.0e-03, train_loss: 0.2606, train_acc: 0.9102 test_loss: 0.9746, test_acc: 0.7775, best: 0.7799, time: 0:00:41
 Epoch: 200, lr: 2.0e-03, train_loss: 0.2562, train_acc: 0.9148 test_loss: 0.9910, test_acc: 0.7761, best: 0.7799, time: 0:00:41
 Epoch: 201, lr: 2.0e-03, train_loss: 0.2609, train_acc: 0.9128 test_loss: 0.9955, test_acc: 0.7791, best: 0.7799, time: 0:00:41
 Epoch: 202, lr: 2.0e-03, train_loss: 0.2551, train_acc: 0.9134 test_loss: 1.0153, test_acc: 0.7746, best: 0.7799, time: 0:00:41
 Epoch: 203, lr: 2.0e-03, train_loss: 0.2407, train_acc: 0.9156 test_loss: 0.9892, test_acc: 0.7731, best: 0.7799, time: 0:00:41
 Epoch: 204, lr: 2.0e-03, train_loss: 0.2558, train_acc: 0.9102 test_loss: 0.9973, test_acc: 0.7720, best: 0.7799, time: 0:00:41
 Epoch: 205, lr: 2.0e-03, train_loss: 0.2623, train_acc: 0.9122 test_loss: 0.9753, test_acc: 0.7778, best: 0.7799, time: 0:00:41
 Epoch: 206, lr: 2.0e-03, train_loss: 0.2558, train_acc: 0.9108 test_loss: 0.9925, test_acc: 0.7781, best: 0.7799, time: 0:00:42
 Epoch: 207, lr: 2.0e-03, train_loss: 0.2545, train_acc: 0.9128 test_loss: 0.9781, test_acc: 0.7760, best: 0.7799, time: 0:00:41
 Epoch: 208, lr: 2.0e-03, train_loss: 0.2537, train_acc: 0.9130 test_loss: 0.9740, test_acc: 0.7772, best: 0.7799, time: 0:00:41
 Epoch: 209, lr: 2.0e-03, train_loss: 0.2523, train_acc: 0.9140 test_loss: 1.0277, test_acc: 0.7709, best: 0.7799, time: 0:00:41
 Epoch: 210, lr: 2.0e-03, train_loss: 0.2477, train_acc: 0.9126 test_loss: 0.9577, test_acc: 0.7760, best: 0.7799, time: 0:00:41
 Epoch: 211, lr: 2.0e-03, train_loss: 0.2572, train_acc: 0.9106 test_loss: 0.9652, test_acc: 0.7809, best: 0.7809, time: 0:00:41
 Epoch: 212, lr: 2.0e-03, train_loss: 0.2529, train_acc: 0.9106 test_loss: 0.9848, test_acc: 0.7771, best: 0.7809, time: 0:00:41
 Epoch: 213, lr: 2.0e-03, train_loss: 0.2543, train_acc: 0.9156 test_loss: 0.9791, test_acc: 0.7788, best: 0.7809, time: 0:00:41
 Epoch: 214, lr: 2.0e-03, train_loss: 0.2652, train_acc: 0.9080 test_loss: 0.9998, test_acc: 0.7755, best: 0.7809, time: 0:00:41
 Epoch: 215, lr: 2.0e-03, train_loss: 0.2594, train_acc: 0.9104 test_loss: 1.0025, test_acc: 0.7766, best: 0.7809, time: 0:00:42
 Epoch: 216, lr: 2.0e-03, train_loss: 0.2337, train_acc: 0.9194 test_loss: 0.9926, test_acc: 0.7769, best: 0.7809, time: 0:00:41
 Epoch: 217, lr: 2.0e-03, train_loss: 0.2299, train_acc: 0.9184 test_loss: 0.9781, test_acc: 0.7778, best: 0.7809, time: 0:00:41
 Epoch: 218, lr: 2.0e-03, train_loss: 0.2368, train_acc: 0.9168 test_loss: 1.0122, test_acc: 0.7740, best: 0.7809, time: 0:00:41
 Epoch: 219, lr: 2.0e-03, train_loss: 0.2641, train_acc: 0.9030 test_loss: 0.9922, test_acc: 0.7734, best: 0.7809, time: 0:00:41
 Epoch: 220, lr: 2.0e-03, train_loss: 0.2535, train_acc: 0.9152 test_loss: 1.0348, test_acc: 0.7745, best: 0.7809, time: 0:00:41
 Epoch: 221, lr: 2.0e-03, train_loss: 0.2371, train_acc: 0.9186 test_loss: 0.9870, test_acc: 0.7788, best: 0.7809, time: 0:00:41
 Epoch: 222, lr: 2.0e-03, train_loss: 0.2385, train_acc: 0.9214 test_loss: 1.0227, test_acc: 0.7755, best: 0.7809, time: 0:00:41
 Epoch: 223, lr: 2.0e-03, train_loss: 0.2317, train_acc: 0.9166 test_loss: 1.0247, test_acc: 0.7768, best: 0.7809, time: 0:00:41
 Epoch: 224, lr: 2.0e-03, train_loss: 0.2540, train_acc: 0.9084 test_loss: 1.0298, test_acc: 0.7740, best: 0.7809, time: 0:00:41
 Epoch: 225, lr: 2.0e-03, train_loss: 0.2455, train_acc: 0.9146 test_loss: 0.9989, test_acc: 0.7735, best: 0.7809, time: 0:00:41
 Epoch: 226, lr: 2.0e-03, train_loss: 0.2105, train_acc: 0.9300 test_loss: 0.9837, test_acc: 0.7784, best: 0.7809, time: 0:00:41
 Epoch: 227, lr: 2.0e-03, train_loss: 0.2259, train_acc: 0.9216 test_loss: 1.0021, test_acc: 0.7774, best: 0.7809, time: 0:00:41
 Epoch: 228, lr: 2.0e-03, train_loss: 0.2434, train_acc: 0.9158 test_loss: 0.9807, test_acc: 0.7791, best: 0.7809, time: 0:00:41
 Epoch: 229, lr: 2.0e-03, train_loss: 0.2386, train_acc: 0.9152 test_loss: 1.0063, test_acc: 0.7755, best: 0.7809, time: 0:00:41
 Epoch: 230, lr: 2.0e-03, train_loss: 0.2450, train_acc: 0.9172 test_loss: 1.0435, test_acc: 0.7714, best: 0.7809, time: 0:00:41
 Epoch: 231, lr: 2.0e-03, train_loss: 0.2356, train_acc: 0.9204 test_loss: 1.0238, test_acc: 0.7714, best: 0.7809, time: 0:00:41
 Epoch: 232, lr: 2.0e-03, train_loss: 0.2431, train_acc: 0.9138 test_loss: 1.0110, test_acc: 0.7756, best: 0.7809, time: 0:00:41
 Epoch: 233, lr: 2.0e-03, train_loss: 0.2362, train_acc: 0.9186 test_loss: 1.0370, test_acc: 0.7720, best: 0.7809, time: 0:00:41
 Epoch: 234, lr: 2.0e-03, train_loss: 0.2429, train_acc: 0.9126 test_loss: 1.0124, test_acc: 0.7756, best: 0.7809, time: 0:00:41
 Epoch: 235, lr: 2.0e-03, train_loss: 0.2420, train_acc: 0.9178 test_loss: 1.0388, test_acc: 0.7754, best: 0.7809, time: 0:00:41
 Epoch: 236, lr: 2.0e-03, train_loss: 0.2389, train_acc: 0.9154 test_loss: 0.9849, test_acc: 0.7834, best: 0.7834, time: 0:00:41
 Epoch: 237, lr: 2.0e-03, train_loss: 0.2328, train_acc: 0.9176 test_loss: 1.0143, test_acc: 0.7774, best: 0.7834, time: 0:00:41
 Epoch: 238, lr: 2.0e-03, train_loss: 0.2389, train_acc: 0.9136 test_loss: 1.0409, test_acc: 0.7720, best: 0.7834, time: 0:00:41
 Epoch: 239, lr: 2.0e-03, train_loss: 0.2404, train_acc: 0.9184 test_loss: 0.9936, test_acc: 0.7801, best: 0.7834, time: 0:00:41
 Epoch: 240, lr: 4.0e-04, train_loss: 0.2371, train_acc: 0.9176 test_loss: 1.0116, test_acc: 0.7790, best: 0.7834, time: 0:00:41
 Epoch: 241, lr: 4.0e-04, train_loss: 0.2083, train_acc: 0.9306 test_loss: 1.0094, test_acc: 0.7809, best: 0.7834, time: 0:00:41
 Epoch: 242, lr: 4.0e-04, train_loss: 0.2193, train_acc: 0.9248 test_loss: 1.0368, test_acc: 0.7800, best: 0.7834, time: 0:00:41
 Epoch: 243, lr: 4.0e-04, train_loss: 0.2245, train_acc: 0.9226 test_loss: 0.9928, test_acc: 0.7855, best: 0.7855, time: 0:00:41
 Epoch: 244, lr: 4.0e-04, train_loss: 0.2282, train_acc: 0.9164 test_loss: 1.0020, test_acc: 0.7800, best: 0.7855, time: 0:00:41
 Epoch: 245, lr: 4.0e-04, train_loss: 0.2231, train_acc: 0.9284 test_loss: 1.0036, test_acc: 0.7811, best: 0.7855, time: 0:00:41
 Epoch: 246, lr: 4.0e-04, train_loss: 0.2217, train_acc: 0.9288 test_loss: 0.9886, test_acc: 0.7814, best: 0.7855, time: 0:00:41
 Epoch: 247, lr: 4.0e-04, train_loss: 0.2176, train_acc: 0.9272 test_loss: 1.0365, test_acc: 0.7796, best: 0.7855, time: 0:00:41
 Epoch: 248, lr: 4.0e-04, train_loss: 0.2129, train_acc: 0.9264 test_loss: 1.0206, test_acc: 0.7791, best: 0.7855, time: 0:00:41
 Epoch: 249, lr: 4.0e-04, train_loss: 0.2209, train_acc: 0.9226 test_loss: 0.9877, test_acc: 0.7812, best: 0.7855, time: 0:00:41
 Epoch: 250, lr: 4.0e-04, train_loss: 0.2196, train_acc: 0.9218 test_loss: 0.9944, test_acc: 0.7843, best: 0.7855, time: 0:00:41
 Epoch: 251, lr: 4.0e-04, train_loss: 0.2174, train_acc: 0.9264 test_loss: 1.0179, test_acc: 0.7819, best: 0.7855, time: 0:00:41
 Epoch: 252, lr: 4.0e-04, train_loss: 0.2319, train_acc: 0.9222 test_loss: 0.9946, test_acc: 0.7829, best: 0.7855, time: 0:00:41
 Epoch: 253, lr: 4.0e-04, train_loss: 0.2095, train_acc: 0.9276 test_loss: 0.9666, test_acc: 0.7851, best: 0.7855, time: 0:00:41
 Epoch: 254, lr: 4.0e-04, train_loss: 0.2280, train_acc: 0.9230 test_loss: 0.9901, test_acc: 0.7834, best: 0.7855, time: 0:00:41
 Epoch: 255, lr: 4.0e-04, train_loss: 0.2120, train_acc: 0.9282 test_loss: 0.9758, test_acc: 0.7811, best: 0.7855, time: 0:00:41
 Epoch: 256, lr: 4.0e-04, train_loss: 0.2140, train_acc: 0.9244 test_loss: 0.9819, test_acc: 0.7846, best: 0.7855, time: 0:00:41
 Epoch: 257, lr: 4.0e-04, train_loss: 0.2340, train_acc: 0.9190 test_loss: 0.9898, test_acc: 0.7800, best: 0.7855, time: 0:00:41
 Epoch: 258, lr: 4.0e-04, train_loss: 0.2234, train_acc: 0.9214 test_loss: 1.0001, test_acc: 0.7833, best: 0.7855, time: 0:00:41
 Epoch: 259, lr: 4.0e-04, train_loss: 0.2274, train_acc: 0.9170 test_loss: 0.9919, test_acc: 0.7809, best: 0.7855, time: 0:00:41
 Epoch: 260, lr: 4.0e-04, train_loss: 0.2209, train_acc: 0.9230 test_loss: 1.0150, test_acc: 0.7791, best: 0.7855, time: 0:00:41
 Epoch: 261, lr: 4.0e-04, train_loss: 0.2209, train_acc: 0.9262 test_loss: 0.9909, test_acc: 0.7825, best: 0.7855, time: 0:00:41
 Epoch: 262, lr: 4.0e-04, train_loss: 0.2252, train_acc: 0.9238 test_loss: 0.9694, test_acc: 0.7821, best: 0.7855, time: 0:00:41
 Epoch: 263, lr: 4.0e-04, train_loss: 0.2159, train_acc: 0.9256 test_loss: 0.9851, test_acc: 0.7810, best: 0.7855, time: 0:00:41
 Epoch: 264, lr: 4.0e-04, train_loss: 0.2077, train_acc: 0.9234 test_loss: 1.0066, test_acc: 0.7826, best: 0.7855, time: 0:00:41
 Epoch: 265, lr: 4.0e-04, train_loss: 0.2003, train_acc: 0.9290 test_loss: 0.9935, test_acc: 0.7831, best: 0.7855, time: 0:00:41
 Epoch: 266, lr: 4.0e-04, train_loss: 0.2142, train_acc: 0.9242 test_loss: 0.9939, test_acc: 0.7820, best: 0.7855, time: 0:00:41
 Epoch: 267, lr: 4.0e-04, train_loss: 0.2109, train_acc: 0.9274 test_loss: 0.9908, test_acc: 0.7827, best: 0.7855, time: 0:00:41
 Epoch: 268, lr: 4.0e-04, train_loss: 0.2192, train_acc: 0.9256 test_loss: 1.0225, test_acc: 0.7800, best: 0.7855, time: 0:00:41
 Epoch: 269, lr: 4.0e-04, train_loss: 0.2385, train_acc: 0.9176 test_loss: 1.0071, test_acc: 0.7771, best: 0.7855, time: 0:00:41
 Epoch: 270, lr: 8.0e-05, train_loss: 0.2136, train_acc: 0.9222 test_loss: 0.9813, test_acc: 0.7788, best: 0.7855, time: 0:00:41
 Epoch: 271, lr: 8.0e-05, train_loss: 0.2089, train_acc: 0.9256 test_loss: 1.0098, test_acc: 0.7784, best: 0.7855, time: 0:00:41
 Epoch: 272, lr: 8.0e-05, train_loss: 0.2110, train_acc: 0.9276 test_loss: 0.9933, test_acc: 0.7825, best: 0.7855, time: 0:00:41
 Epoch: 273, lr: 8.0e-05, train_loss: 0.2207, train_acc: 0.9216 test_loss: 0.9863, test_acc: 0.7808, best: 0.7855, time: 0:00:41
 Epoch: 274, lr: 8.0e-05, train_loss: 0.2262, train_acc: 0.9230 test_loss: 1.0379, test_acc: 0.7771, best: 0.7855, time: 0:00:41
 Epoch: 275, lr: 8.0e-05, train_loss: 0.2123, train_acc: 0.9252 test_loss: 0.9485, test_acc: 0.7823, best: 0.7855, time: 0:00:41
 Epoch: 276, lr: 8.0e-05, train_loss: 0.2100, train_acc: 0.9280 test_loss: 0.9957, test_acc: 0.7796, best: 0.7855, time: 0:00:41
 Epoch: 277, lr: 8.0e-05, train_loss: 0.2074, train_acc: 0.9264 test_loss: 0.9834, test_acc: 0.7801, best: 0.7855, time: 0:00:41
 Epoch: 278, lr: 8.0e-05, train_loss: 0.2070, train_acc: 0.9276 test_loss: 1.0116, test_acc: 0.7820, best: 0.7855, time: 0:00:41
 Epoch: 279, lr: 8.0e-05, train_loss: 0.2122, train_acc: 0.9280 test_loss: 0.9885, test_acc: 0.7816, best: 0.7855, time: 0:00:41
 Epoch: 280, lr: 8.0e-05, train_loss: 0.2098, train_acc: 0.9276 test_loss: 1.0029, test_acc: 0.7809, best: 0.7855, time: 0:00:41
 Epoch: 281, lr: 8.0e-05, train_loss: 0.2076, train_acc: 0.9300 test_loss: 1.0114, test_acc: 0.7795, best: 0.7855, time: 0:00:41
 Epoch: 282, lr: 8.0e-05, train_loss: 0.2237, train_acc: 0.9254 test_loss: 0.9967, test_acc: 0.7800, best: 0.7855, time: 0:00:41
 Epoch: 283, lr: 8.0e-05, train_loss: 0.2072, train_acc: 0.9294 test_loss: 0.9895, test_acc: 0.7824, best: 0.7855, time: 0:00:41
 Epoch: 284, lr: 8.0e-05, train_loss: 0.2291, train_acc: 0.9216 test_loss: 0.9986, test_acc: 0.7794, best: 0.7855, time: 0:00:41
 Epoch: 285, lr: 8.0e-05, train_loss: 0.2059, train_acc: 0.9332 test_loss: 0.9775, test_acc: 0.7806, best: 0.7855, time: 0:00:41
 Epoch: 286, lr: 8.0e-05, train_loss: 0.2027, train_acc: 0.9302 test_loss: 0.9981, test_acc: 0.7812, best: 0.7855, time: 0:00:41
 Epoch: 287, lr: 8.0e-05, train_loss: 0.2257, train_acc: 0.9206 test_loss: 0.9954, test_acc: 0.7790, best: 0.7855, time: 0:00:41
 Epoch: 288, lr: 8.0e-05, train_loss: 0.1977, train_acc: 0.9330 test_loss: 1.0062, test_acc: 0.7802, best: 0.7855, time: 0:00:41
 Epoch: 289, lr: 8.0e-05, train_loss: 0.2073, train_acc: 0.9312 test_loss: 0.9911, test_acc: 0.7781, best: 0.7855, time: 0:00:41
 Epoch: 290, lr: 8.0e-05, train_loss: 0.2098, train_acc: 0.9272 test_loss: 0.9979, test_acc: 0.7815, best: 0.7855, time: 0:00:41
 Epoch: 291, lr: 8.0e-05, train_loss: 0.2116, train_acc: 0.9248 test_loss: 1.0060, test_acc: 0.7798, best: 0.7855, time: 0:00:41
 Epoch: 292, lr: 8.0e-05, train_loss: 0.2128, train_acc: 0.9268 test_loss: 0.9766, test_acc: 0.7795, best: 0.7855, time: 0:00:41
 Epoch: 293, lr: 8.0e-05, train_loss: 0.2202, train_acc: 0.9204 test_loss: 0.9761, test_acc: 0.7826, best: 0.7855, time: 0:00:41
 Epoch: 294, lr: 8.0e-05, train_loss: 0.2110, train_acc: 0.9272 test_loss: 0.9914, test_acc: 0.7790, best: 0.7855, time: 0:00:41
 Epoch: 295, lr: 8.0e-05, train_loss: 0.2204, train_acc: 0.9244 test_loss: 1.0130, test_acc: 0.7781, best: 0.7855, time: 0:00:41
 Epoch: 296, lr: 8.0e-05, train_loss: 0.2043, train_acc: 0.9272 test_loss: 0.9755, test_acc: 0.7814, best: 0.7855, time: 0:00:41
 Epoch: 297, lr: 8.0e-05, train_loss: 0.2107, train_acc: 0.9296 test_loss: 0.9987, test_acc: 0.7778, best: 0.7855, time: 0:00:41
 Epoch: 298, lr: 8.0e-05, train_loss: 0.2162, train_acc: 0.9254 test_loss: 0.9784, test_acc: 0.7804, best: 0.7855, time: 0:00:41
 Epoch: 299, lr: 8.0e-05, train_loss: 0.2090, train_acc: 0.9292 test_loss: 1.0002, test_acc: 0.7780, best: 0.7855, time: 0:00:41
 Highest accuracy: 0.7855