
 Run on time: 2022-07-01 02:31:22.919465

 Architecture: resnet18-nlp_headfix2-1222

 Pool Config: {
    "arch": "resnet18",
    "conv1": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 2,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "pool": {
        "_conv2d": null,
        "pool_cfg": {
            "_ptype": "maxp",
            "_stride": 2,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "layer1": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 1,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": 2,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "layer2": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    },
    "layer3": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    },
    "layer4": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    }
}

 Arguments:
	 gpu                  : True
	 log                  : True
	 seed                 : 0
	 momentum             : 0.9
	 amsgrad              : True
	 dataset              : STL10
	 batch_size           : 8
	 architecture         : RESNET18-NLP_HEADFIX2-1222
	 im_size              : 128
	 relu_threshold       : 4.0
	 learning_rate        : 0.01
	 pretrained_backbone  : 
	 pretrained_ann       : 
	 weight_decay         : 0.0
	 test_only            : False
	 epochs               : 300
	 lr_interval          : [180, 240, 270]
	 lr_reduce            : 5
	 optimizer            : SGD
	 dropout              : 0.2
	 kernel_size          : 3
	 dont_save            : False
	 visualize            : False
	 devices              : 0
 DataParallel(
  (module): Network(
    (net): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
              (pos_embed): PositionEmbeddingLearned(
                (row_embed): Embedding(256, 64)
                (col_embed): Embedding(256, 64)
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer3): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
              (pos_embed): PositionEmbeddingLearned(
                (row_embed): Embedding(256, 128)
                (col_embed): Embedding(256, 128)
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer4): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
              (pos_embed): PositionEmbeddingLearned(
                (row_embed): Embedding(256, 256)
                (col_embed): Embedding(256, 256)
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=512, out_features=10, bias=True)
    )
  )
)
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0
)
 Epoch: 1, lr: 1.0e-02, train_loss: 2.2178, train_acc: 0.2126 test_loss: 1.7939, test_acc: 0.3050, best: 0.3050, time: 0:01:51
 Epoch: 2, lr: 1.0e-02, train_loss: 1.9240, train_acc: 0.2452 test_loss: 2.1347, test_acc: 0.2639, best: 0.3050, time: 0:01:52
 Epoch: 3, lr: 1.0e-02, train_loss: 1.8231, train_acc: 0.3000 test_loss: 1.7309, test_acc: 0.3404, best: 0.3404, time: 0:01:48
 Epoch: 4, lr: 1.0e-02, train_loss: 1.7792, train_acc: 0.3162 test_loss: 1.7889, test_acc: 0.3314, best: 0.3404, time: 0:01:47
 Epoch: 5, lr: 1.0e-02, train_loss: 1.7047, train_acc: 0.3554 test_loss: 1.5519, test_acc: 0.4125, best: 0.4125, time: 0:01:50
 Epoch: 6, lr: 1.0e-02, train_loss: 1.6471, train_acc: 0.3884 test_loss: 1.4959, test_acc: 0.4465, best: 0.4465, time: 0:01:51
 Epoch: 7, lr: 1.0e-02, train_loss: 1.5643, train_acc: 0.4154 test_loss: 1.4335, test_acc: 0.4540, best: 0.4540, time: 0:01:52
 Epoch: 8, lr: 1.0e-02, train_loss: 1.5183, train_acc: 0.4354 test_loss: 1.4318, test_acc: 0.4723, best: 0.4723, time: 0:01:53
 Epoch: 9, lr: 1.0e-02, train_loss: 1.4923, train_acc: 0.4484 test_loss: 1.2864, test_acc: 0.5175, best: 0.5175, time: 0:01:50
 Epoch: 10, lr: 1.0e-02, train_loss: 1.4578, train_acc: 0.4600 test_loss: 1.2630, test_acc: 0.5353, best: 0.5353, time: 0:01:53
 Epoch: 11, lr: 1.0e-02, train_loss: 1.3963, train_acc: 0.4854 test_loss: 1.4069, test_acc: 0.4836, best: 0.5353, time: 0:01:50
 Epoch: 12, lr: 1.0e-02, train_loss: 1.3743, train_acc: 0.4918 test_loss: 1.1943, test_acc: 0.5704, best: 0.5704, time: 0:01:51
 Epoch: 13, lr: 1.0e-02, train_loss: 1.3440, train_acc: 0.5062 test_loss: 1.2392, test_acc: 0.5474, best: 0.5704, time: 0:01:51
 Epoch: 14, lr: 1.0e-02, train_loss: 1.3131, train_acc: 0.5164 test_loss: 1.1759, test_acc: 0.5724, best: 0.5724, time: 0:01:54
 Epoch: 15, lr: 1.0e-02, train_loss: 1.2752, train_acc: 0.5344 test_loss: 1.2000, test_acc: 0.5667, best: 0.5724, time: 0:01:49
 Epoch: 16, lr: 1.0e-02, train_loss: 1.2488, train_acc: 0.5472 test_loss: 1.1437, test_acc: 0.5857, best: 0.5857, time: 0:01:52
 Epoch: 17, lr: 1.0e-02, train_loss: 1.2205, train_acc: 0.5500 test_loss: 1.0590, test_acc: 0.6178, best: 0.6178, time: 0:01:51
 Epoch: 18, lr: 1.0e-02, train_loss: 1.2076, train_acc: 0.5648 test_loss: 1.1727, test_acc: 0.5766, best: 0.6178, time: 0:01:49
 Epoch: 19, lr: 1.0e-02, train_loss: 1.1922, train_acc: 0.5724 test_loss: 1.0999, test_acc: 0.6090, best: 0.6178, time: 0:01:53
 Epoch: 20, lr: 1.0e-02, train_loss: 1.1653, train_acc: 0.5744 test_loss: 1.1122, test_acc: 0.5954, best: 0.6178, time: 0:01:48
 Epoch: 21, lr: 1.0e-02, train_loss: 1.1279, train_acc: 0.5856 test_loss: 1.4543, test_acc: 0.5296, best: 0.6178, time: 0:01:49
 Epoch: 22, lr: 1.0e-02, train_loss: 1.1344, train_acc: 0.5966 test_loss: 1.0620, test_acc: 0.6345, best: 0.6345, time: 0:01:51
 Epoch: 23, lr: 1.0e-02, train_loss: 1.1030, train_acc: 0.5998 test_loss: 1.0831, test_acc: 0.6174, best: 0.6345, time: 0:01:49
 Epoch: 24, lr: 1.0e-02, train_loss: 1.0782, train_acc: 0.6112 test_loss: 0.9867, test_acc: 0.6509, best: 0.6509, time: 0:01:51
 Epoch: 25, lr: 1.0e-02, train_loss: 1.0605, train_acc: 0.6162 test_loss: 1.0178, test_acc: 0.6441, best: 0.6509, time: 0:01:50
 Epoch: 26, lr: 1.0e-02, train_loss: 1.0483, train_acc: 0.6206 test_loss: 0.9027, test_acc: 0.6764, best: 0.6764, time: 0:01:52
 Epoch: 27, lr: 1.0e-02, train_loss: 1.0235, train_acc: 0.6262 test_loss: 0.9892, test_acc: 0.6484, best: 0.6764, time: 0:01:48
 Epoch: 28, lr: 1.0e-02, train_loss: 1.0134, train_acc: 0.6344 test_loss: 1.2021, test_acc: 0.6248, best: 0.6764, time: 0:01:49
 Epoch: 29, lr: 1.0e-02, train_loss: 0.9965, train_acc: 0.6410 test_loss: 0.9789, test_acc: 0.6555, best: 0.6764, time: 0:01:50
 Epoch: 30, lr: 1.0e-02, train_loss: 0.9677, train_acc: 0.6490 test_loss: 0.9823, test_acc: 0.6609, best: 0.6764, time: 0:01:49
 Epoch: 31, lr: 1.0e-02, train_loss: 0.9726, train_acc: 0.6420 test_loss: 0.9646, test_acc: 0.6694, best: 0.6764, time: 0:01:49
 Epoch: 32, lr: 1.0e-02, train_loss: 0.9578, train_acc: 0.6604 test_loss: 0.9257, test_acc: 0.6793, best: 0.6793, time: 0:01:51
 Epoch: 33, lr: 1.0e-02, train_loss: 0.9217, train_acc: 0.6684 test_loss: 0.9632, test_acc: 0.6759, best: 0.6793, time: 0:01:54
 Epoch: 34, lr: 1.0e-02, train_loss: 0.9137, train_acc: 0.6716 test_loss: 0.9213, test_acc: 0.6719, best: 0.6793, time: 0:01:51
 Epoch: 35, lr: 1.0e-02, train_loss: 0.9052, train_acc: 0.6786 test_loss: 0.8615, test_acc: 0.7050, best: 0.7050, time: 0:01:51
 Epoch: 36, lr: 1.0e-02, train_loss: 0.8838, train_acc: 0.6780 test_loss: 0.9236, test_acc: 0.6875, best: 0.7050, time: 0:01:50
 Epoch: 37, lr: 1.0e-02, train_loss: 0.8567, train_acc: 0.6880 test_loss: 0.9599, test_acc: 0.6840, best: 0.7050, time: 0:01:53
 Epoch: 38, lr: 1.0e-02, train_loss: 0.8644, train_acc: 0.6914 test_loss: 1.0848, test_acc: 0.6552, best: 0.7050, time: 0:01:51
 Epoch: 39, lr: 1.0e-02, train_loss: 0.8429, train_acc: 0.7014 test_loss: 0.8673, test_acc: 0.6965, best: 0.7050, time: 0:01:49
 Epoch: 40, lr: 1.0e-02, train_loss: 0.8344, train_acc: 0.7012 test_loss: 1.0424, test_acc: 0.6609, best: 0.7050, time: 0:01:49
 Epoch: 41, lr: 1.0e-02, train_loss: 0.8130, train_acc: 0.7062 test_loss: 0.9194, test_acc: 0.6915, best: 0.7050, time: 0:01:50
 Epoch: 42, lr: 1.0e-02, train_loss: 0.7923, train_acc: 0.7202 test_loss: 0.8698, test_acc: 0.7031, best: 0.7050, time: 0:01:51
 Epoch: 43, lr: 1.0e-02, train_loss: 0.7945, train_acc: 0.7158 test_loss: 0.8634, test_acc: 0.7081, best: 0.7081, time: 0:01:50
 Epoch: 44, lr: 1.0e-02, train_loss: 0.7614, train_acc: 0.7256 test_loss: 0.8916, test_acc: 0.7241, best: 0.7241, time: 0:01:52
 Epoch: 45, lr: 1.0e-02, train_loss: 0.7509, train_acc: 0.7330 test_loss: 0.9679, test_acc: 0.6896, best: 0.7241, time: 0:01:50
 Epoch: 46, lr: 1.0e-02, train_loss: 0.7304, train_acc: 0.7426 test_loss: 0.9951, test_acc: 0.6956, best: 0.7241, time: 0:01:50
 Epoch: 47, lr: 1.0e-02, train_loss: 0.7323, train_acc: 0.7418 test_loss: 0.8044, test_acc: 0.7334, best: 0.7334, time: 0:01:50
 Epoch: 48, lr: 1.0e-02, train_loss: 0.7024, train_acc: 0.7496 test_loss: 0.9262, test_acc: 0.7189, best: 0.7334, time: 0:01:49
 Epoch: 49, lr: 1.0e-02, train_loss: 0.7302, train_acc: 0.7338 test_loss: 0.9312, test_acc: 0.7036, best: 0.7334, time: 0:01:51
 Epoch: 50, lr: 1.0e-02, train_loss: 0.6940, train_acc: 0.7442 test_loss: 1.0407, test_acc: 0.6739, best: 0.7334, time: 0:01:49
 Epoch: 51, lr: 1.0e-02, train_loss: 0.6912, train_acc: 0.7586 test_loss: 0.8141, test_acc: 0.7295, best: 0.7334, time: 0:01:50
 Epoch: 52, lr: 1.0e-02, train_loss: 0.6976, train_acc: 0.7520 test_loss: 0.8208, test_acc: 0.7300, best: 0.7334, time: 0:01:49
 Epoch: 53, lr: 1.0e-02, train_loss: 0.6650, train_acc: 0.7690 test_loss: 0.8656, test_acc: 0.7280, best: 0.7334, time: 0:01:49
 Epoch: 54, lr: 1.0e-02, train_loss: 0.6659, train_acc: 0.7610 test_loss: 0.8162, test_acc: 0.7325, best: 0.7334, time: 0:01:53
 Epoch: 55, lr: 1.0e-02, train_loss: 0.6527, train_acc: 0.7624 test_loss: 0.9382, test_acc: 0.7156, best: 0.7334, time: 0:01:50
 Epoch: 56, lr: 1.0e-02, train_loss: 0.6553, train_acc: 0.7636 test_loss: 0.8357, test_acc: 0.7285, best: 0.7334, time: 0:01:51
 Epoch: 57, lr: 1.0e-02, train_loss: 0.6319, train_acc: 0.7760 test_loss: 0.7501, test_acc: 0.7514, best: 0.7514, time: 0:01:52
 Epoch: 58, lr: 1.0e-02, train_loss: 0.6455, train_acc: 0.7786 test_loss: 0.8162, test_acc: 0.7411, best: 0.7514, time: 0:01:49
 Epoch: 59, lr: 1.0e-02, train_loss: 0.5978, train_acc: 0.7836 test_loss: 0.8930, test_acc: 0.7282, best: 0.7514, time: 0:01:51
 Epoch: 60, lr: 1.0e-02, train_loss: 0.6026, train_acc: 0.7878 test_loss: 0.8979, test_acc: 0.7183, best: 0.7514, time: 0:01:52
 Epoch: 61, lr: 1.0e-02, train_loss: 0.5991, train_acc: 0.7882 test_loss: 0.7571, test_acc: 0.7429, best: 0.7514, time: 0:01:50
 Epoch: 62, lr: 1.0e-02, train_loss: 0.5943, train_acc: 0.7888 test_loss: 0.7859, test_acc: 0.7506, best: 0.7514, time: 0:01:49
 Epoch: 63, lr: 1.0e-02, train_loss: 0.5904, train_acc: 0.7944 test_loss: 0.7284, test_acc: 0.7650, best: 0.7650, time: 0:01:51
 Epoch: 64, lr: 1.0e-02, train_loss: 0.5731, train_acc: 0.7986 test_loss: 0.8028, test_acc: 0.7520, best: 0.7650, time: 0:01:49
 Epoch: 65, lr: 1.0e-02, train_loss: 0.5468, train_acc: 0.8070 test_loss: 0.8753, test_acc: 0.7428, best: 0.7650, time: 0:01:56
 Epoch: 66, lr: 1.0e-02, train_loss: 0.5400, train_acc: 0.8090 test_loss: 0.9678, test_acc: 0.7294, best: 0.7650, time: 0:01:49
 Epoch: 67, lr: 1.0e-02, train_loss: 0.5588, train_acc: 0.8054 test_loss: 0.8048, test_acc: 0.7524, best: 0.7650, time: 0:01:49
 Epoch: 68, lr: 1.0e-02, train_loss: 0.5409, train_acc: 0.8070 test_loss: 0.7519, test_acc: 0.7681, best: 0.7681, time: 0:01:51
 Epoch: 69, lr: 1.0e-02, train_loss: 0.5402, train_acc: 0.8064 test_loss: 1.0164, test_acc: 0.6984, best: 0.7681, time: 0:01:50
 Epoch: 70, lr: 1.0e-02, train_loss: 0.5147, train_acc: 0.8172 test_loss: 0.7585, test_acc: 0.7721, best: 0.7721, time: 0:01:50
 Epoch: 71, lr: 1.0e-02, train_loss: 0.5020, train_acc: 0.8204 test_loss: 0.8426, test_acc: 0.7622, best: 0.7721, time: 0:01:50
 Epoch: 72, lr: 1.0e-02, train_loss: 0.5030, train_acc: 0.8166 test_loss: 0.7816, test_acc: 0.7741, best: 0.7741, time: 0:01:51
 Epoch: 73, lr: 1.0e-02, train_loss: 0.4945, train_acc: 0.8242 test_loss: 0.8038, test_acc: 0.7699, best: 0.7741, time: 0:01:53
 Epoch: 74, lr: 1.0e-02, train_loss: 0.5125, train_acc: 0.8216 test_loss: 0.7683, test_acc: 0.7739, best: 0.7741, time: 0:01:49
 Epoch: 75, lr: 1.0e-02, train_loss: 0.4833, train_acc: 0.8354 test_loss: 0.8116, test_acc: 0.7535, best: 0.7741, time: 0:01:51
 Epoch: 76, lr: 1.0e-02, train_loss: 0.4827, train_acc: 0.8276 test_loss: 0.8403, test_acc: 0.7580, best: 0.7741, time: 0:01:50
 Epoch: 77, lr: 1.0e-02, train_loss: 0.4830, train_acc: 0.8326 test_loss: 0.7823, test_acc: 0.7634, best: 0.7741, time: 0:01:51
 Epoch: 78, lr: 1.0e-02, train_loss: 0.4487, train_acc: 0.8456 test_loss: 0.9307, test_acc: 0.7415, best: 0.7741, time: 0:01:49
 Epoch: 79, lr: 1.0e-02, train_loss: 0.4580, train_acc: 0.8420 test_loss: 0.8932, test_acc: 0.7584, best: 0.7741, time: 0:01:50
 Epoch: 80, lr: 1.0e-02, train_loss: 0.4431, train_acc: 0.8458 test_loss: 0.7514, test_acc: 0.7748, best: 0.7748, time: 0:01:50
 Epoch: 81, lr: 1.0e-02, train_loss: 0.4560, train_acc: 0.8378 test_loss: 0.8699, test_acc: 0.7504, best: 0.7748, time: 0:01:51
 Epoch: 82, lr: 1.0e-02, train_loss: 0.4386, train_acc: 0.8460 test_loss: 0.8219, test_acc: 0.7606, best: 0.7748, time: 0:01:48
 Epoch: 83, lr: 1.0e-02, train_loss: 0.4357, train_acc: 0.8472 test_loss: 0.8819, test_acc: 0.7679, best: 0.7748, time: 0:01:51
 Epoch: 84, lr: 1.0e-02, train_loss: 0.4549, train_acc: 0.8404 test_loss: 0.8845, test_acc: 0.7545, best: 0.7748, time: 0:01:50
 Epoch: 85, lr: 1.0e-02, train_loss: 0.4630, train_acc: 0.8354 test_loss: 0.8179, test_acc: 0.7672, best: 0.7748, time: 0:01:49
 Epoch: 86, lr: 1.0e-02, train_loss: 0.4083, train_acc: 0.8610 test_loss: 0.8851, test_acc: 0.7598, best: 0.7748, time: 0:01:49
 Epoch: 87, lr: 1.0e-02, train_loss: 0.4178, train_acc: 0.8512 test_loss: 0.8650, test_acc: 0.7644, best: 0.7748, time: 0:01:50
 Epoch: 88, lr: 1.0e-02, train_loss: 0.4123, train_acc: 0.8564 test_loss: 0.8487, test_acc: 0.7666, best: 0.7748, time: 0:01:49
 Epoch: 89, lr: 1.0e-02, train_loss: 0.3920, train_acc: 0.8618 test_loss: 0.8767, test_acc: 0.7638, best: 0.7748, time: 0:01:51
 Epoch: 90, lr: 1.0e-02, train_loss: 0.4063, train_acc: 0.8546 test_loss: 0.9422, test_acc: 0.7570, best: 0.7748, time: 0:01:48
 Epoch: 91, lr: 1.0e-02, train_loss: 0.4077, train_acc: 0.8560 test_loss: 0.7840, test_acc: 0.7729, best: 0.7748, time: 0:01:50
 Epoch: 92, lr: 1.0e-02, train_loss: 0.3862, train_acc: 0.8588 test_loss: 0.7962, test_acc: 0.7724, best: 0.7748, time: 0:01:49
 Epoch: 93, lr: 1.0e-02, train_loss: 0.4015, train_acc: 0.8610 test_loss: 0.8729, test_acc: 0.7455, best: 0.7748, time: 0:01:52
 Epoch: 94, lr: 1.0e-02, train_loss: 0.4044, train_acc: 0.8620 test_loss: 0.9857, test_acc: 0.7502, best: 0.7748, time: 0:01:52
 Epoch: 95, lr: 1.0e-02, train_loss: 0.3855, train_acc: 0.8596 test_loss: 0.8939, test_acc: 0.7561, best: 0.7748, time: 0:01:52
 Epoch: 96, lr: 1.0e-02, train_loss: 0.3709, train_acc: 0.8750 test_loss: 0.8507, test_acc: 0.7586, best: 0.7748, time: 0:01:51
 Epoch: 97, lr: 1.0e-02, train_loss: 0.3611, train_acc: 0.8718 test_loss: 0.8867, test_acc: 0.7659, best: 0.7748, time: 0:01:49
 Epoch: 98, lr: 1.0e-02, train_loss: 0.3798, train_acc: 0.8654 test_loss: 0.7601, test_acc: 0.7839, best: 0.7839, time: 0:01:50
 Epoch: 99, lr: 1.0e-02, train_loss: 0.3464, train_acc: 0.8816 test_loss: 0.8506, test_acc: 0.7756, best: 0.7839, time: 0:01:51
 Epoch: 100, lr: 1.0e-02, train_loss: 0.3707, train_acc: 0.8712 test_loss: 0.7624, test_acc: 0.7766, best: 0.7839, time: 0:01:49
 Epoch: 101, lr: 1.0e-02, train_loss: 0.3534, train_acc: 0.8778 test_loss: 0.8792, test_acc: 0.7716, best: 0.7839, time: 0:01:50
 Epoch: 102, lr: 1.0e-02, train_loss: 0.3668, train_acc: 0.8714 test_loss: 0.9626, test_acc: 0.7572, best: 0.7839, time: 0:01:49
 Epoch: 103, lr: 1.0e-02, train_loss: 0.3514, train_acc: 0.8738 test_loss: 0.8819, test_acc: 0.7670, best: 0.7839, time: 0:01:53
 Epoch: 104, lr: 1.0e-02, train_loss: 0.3383, train_acc: 0.8842 test_loss: 0.8780, test_acc: 0.7644, best: 0.7839, time: 0:01:51
 Epoch: 105, lr: 1.0e-02, train_loss: 0.3625, train_acc: 0.8720 test_loss: 0.8875, test_acc: 0.7674, best: 0.7839, time: 0:01:51
 Epoch: 106, lr: 1.0e-02, train_loss: 0.3486, train_acc: 0.8786 test_loss: 0.8613, test_acc: 0.7649, best: 0.7839, time: 0:01:51
 Epoch: 107, lr: 1.0e-02, train_loss: 0.3240, train_acc: 0.8910 test_loss: 0.8560, test_acc: 0.7578, best: 0.7839, time: 0:01:49
 Epoch: 108, lr: 1.0e-02, train_loss: 0.3288, train_acc: 0.8856 test_loss: 0.9270, test_acc: 0.7694, best: 0.7839, time: 0:01:52
 Epoch: 109, lr: 1.0e-02, train_loss: 0.3347, train_acc: 0.8834 test_loss: 0.8969, test_acc: 0.7649, best: 0.7839, time: 0:01:51
 Epoch: 110, lr: 1.0e-02, train_loss: 0.3305, train_acc: 0.8896 test_loss: 0.8062, test_acc: 0.7890, best: 0.7890, time: 0:01:51
 Epoch: 111, lr: 1.0e-02, train_loss: 0.3272, train_acc: 0.8912 test_loss: 0.8061, test_acc: 0.7889, best: 0.7890, time: 0:01:50
 Epoch: 112, lr: 1.0e-02, train_loss: 0.3261, train_acc: 0.8870 test_loss: 0.7768, test_acc: 0.7900, best: 0.7900, time: 0:01:49
 Epoch: 113, lr: 1.0e-02, train_loss: 0.3292, train_acc: 0.8872 test_loss: 0.8911, test_acc: 0.7719, best: 0.7900, time: 0:01:50
 Epoch: 114, lr: 1.0e-02, train_loss: 0.3093, train_acc: 0.8928 test_loss: 0.7838, test_acc: 0.7806, best: 0.7900, time: 0:01:54
 Epoch: 115, lr: 1.0e-02, train_loss: 0.3143, train_acc: 0.8884 test_loss: 0.8420, test_acc: 0.7744, best: 0.7900, time: 0:01:50
 Epoch: 116, lr: 1.0e-02, train_loss: 0.3274, train_acc: 0.8868 test_loss: 0.8808, test_acc: 0.7798, best: 0.7900, time: 0:01:50
 Epoch: 117, lr: 1.0e-02, train_loss: 0.3129, train_acc: 0.8922 test_loss: 0.8494, test_acc: 0.7814, best: 0.7900, time: 0:01:51
 Epoch: 118, lr: 1.0e-02, train_loss: 0.3117, train_acc: 0.8924 test_loss: 0.7863, test_acc: 0.7926, best: 0.7926, time: 0:01:52
 Epoch: 119, lr: 1.0e-02, train_loss: 0.3045, train_acc: 0.8926 test_loss: 0.8312, test_acc: 0.7762, best: 0.7926, time: 0:01:49
 Epoch: 120, lr: 1.0e-02, train_loss: 0.3001, train_acc: 0.8908 test_loss: 0.8864, test_acc: 0.7765, best: 0.7926, time: 0:01:48
 Epoch: 121, lr: 1.0e-02, train_loss: 0.2879, train_acc: 0.9044 test_loss: 0.9504, test_acc: 0.7615, best: 0.7926, time: 0:01:50
 Epoch: 122, lr: 1.0e-02, train_loss: 0.3030, train_acc: 0.8926 test_loss: 0.8445, test_acc: 0.7790, best: 0.7926, time: 0:01:49
 Epoch: 123, lr: 1.0e-02, train_loss: 0.3115, train_acc: 0.8936 test_loss: 0.9459, test_acc: 0.7640, best: 0.7926, time: 0:01:50
 Epoch: 124, lr: 1.0e-02, train_loss: 0.2856, train_acc: 0.9010 test_loss: 0.9757, test_acc: 0.7678, best: 0.7926, time: 0:01:49
 Epoch: 125, lr: 1.0e-02, train_loss: 0.3142, train_acc: 0.8918 test_loss: 0.9361, test_acc: 0.7682, best: 0.7926, time: 0:01:49
 Epoch: 126, lr: 1.0e-02, train_loss: 0.2921, train_acc: 0.9024 test_loss: 1.0628, test_acc: 0.7425, best: 0.7926, time: 0:01:50
 Epoch: 127, lr: 1.0e-02, train_loss: 0.2911, train_acc: 0.9010 test_loss: 0.8306, test_acc: 0.7849, best: 0.7926, time: 0:01:51
 Epoch: 128, lr: 1.0e-02, train_loss: 0.2834, train_acc: 0.9042 test_loss: 0.8938, test_acc: 0.7812, best: 0.7926, time: 0:01:52
 Epoch: 129, lr: 1.0e-02, train_loss: 0.2878, train_acc: 0.9026 test_loss: 0.9546, test_acc: 0.7594, best: 0.7926, time: 0:01:50
 Epoch: 130, lr: 1.0e-02, train_loss: 0.2808, train_acc: 0.9050 test_loss: 0.8326, test_acc: 0.7861, best: 0.7926, time: 0:02:00
 Epoch: 131, lr: 1.0e-02, train_loss: 0.2809, train_acc: 0.9056 test_loss: 0.8001, test_acc: 0.7947, best: 0.7947, time: 0:01:49
 Epoch: 132, lr: 1.0e-02, train_loss: 0.2639, train_acc: 0.9060 test_loss: 0.8731, test_acc: 0.7829, best: 0.7947, time: 0:01:50
 Epoch: 133, lr: 1.0e-02, train_loss: 0.2610, train_acc: 0.9076 test_loss: 0.9260, test_acc: 0.7740, best: 0.7947, time: 0:01:50
 Epoch: 134, lr: 1.0e-02, train_loss: 0.2769, train_acc: 0.9036 test_loss: 0.9481, test_acc: 0.7619, best: 0.7947, time: 0:01:50
 Epoch: 135, lr: 1.0e-02, train_loss: 0.2672, train_acc: 0.9084 test_loss: 0.8267, test_acc: 0.7903, best: 0.7947, time: 0:01:50
 Epoch: 136, lr: 1.0e-02, train_loss: 0.2743, train_acc: 0.9038 test_loss: 0.8928, test_acc: 0.7861, best: 0.7947, time: 0:01:51
 Epoch: 137, lr: 1.0e-02, train_loss: 0.2803, train_acc: 0.9052 test_loss: 0.8768, test_acc: 0.7886, best: 0.7947, time: 0:01:49
 Epoch: 138, lr: 1.0e-02, train_loss: 0.2516, train_acc: 0.9154 test_loss: 0.9386, test_acc: 0.7628, best: 0.7947, time: 0:01:49
 Epoch: 139, lr: 1.0e-02, train_loss: 0.2584, train_acc: 0.9084 test_loss: 0.8434, test_acc: 0.7854, best: 0.7947, time: 0:01:52
 Epoch: 140, lr: 1.0e-02, train_loss: 0.2435, train_acc: 0.9170 test_loss: 1.1230, test_acc: 0.7382, best: 0.7947, time: 0:01:52
 Epoch: 141, lr: 1.0e-02, train_loss: 0.2427, train_acc: 0.9152 test_loss: 0.9726, test_acc: 0.7560, best: 0.7947, time: 0:01:53
 Epoch: 142, lr: 1.0e-02, train_loss: 0.2544, train_acc: 0.9124 test_loss: 0.8900, test_acc: 0.7682, best: 0.7947, time: 0:01:50
 Epoch: 143, lr: 1.0e-02, train_loss: 0.2523, train_acc: 0.9098 test_loss: 1.0990, test_acc: 0.7574, best: 0.7947, time: 0:01:49
 Epoch: 144, lr: 1.0e-02, train_loss: 0.2588, train_acc: 0.9132 test_loss: 0.8243, test_acc: 0.7894, best: 0.7947, time: 0:01:53
 Epoch: 145, lr: 1.0e-02, train_loss: 0.2469, train_acc: 0.9140 test_loss: 0.8309, test_acc: 0.7881, best: 0.7947, time: 0:01:50
 Epoch: 146, lr: 1.0e-02, train_loss: 0.2515, train_acc: 0.9138 test_loss: 0.9271, test_acc: 0.7761, best: 0.7947, time: 0:01:53
 Epoch: 147, lr: 1.0e-02, train_loss: 0.2569, train_acc: 0.9130 test_loss: 1.0240, test_acc: 0.7571, best: 0.7947, time: 0:01:50
 Epoch: 148, lr: 1.0e-02, train_loss: 0.2365, train_acc: 0.9194 test_loss: 0.9023, test_acc: 0.7808, best: 0.7947, time: 0:01:49
 Epoch: 149, lr: 1.0e-02, train_loss: 0.2400, train_acc: 0.9194 test_loss: 0.9429, test_acc: 0.7849, best: 0.7947, time: 0:01:47
 Epoch: 150, lr: 1.0e-02, train_loss: 0.2311, train_acc: 0.9226 test_loss: 0.9565, test_acc: 0.7776, best: 0.7947, time: 0:01:49
 Epoch: 151, lr: 1.0e-02, train_loss: 0.2563, train_acc: 0.9096 test_loss: 1.0087, test_acc: 0.7724, best: 0.7947, time: 0:01:50
 Epoch: 152, lr: 1.0e-02, train_loss: 0.2414, train_acc: 0.9194 test_loss: 0.9244, test_acc: 0.7900, best: 0.7947, time: 0:01:50
 Epoch: 153, lr: 1.0e-02, train_loss: 0.2441, train_acc: 0.9098 test_loss: 0.9009, test_acc: 0.7827, best: 0.7947, time: 0:01:49
 Epoch: 154, lr: 1.0e-02, train_loss: 0.2376, train_acc: 0.9186 test_loss: 0.8801, test_acc: 0.7874, best: 0.7947, time: 0:01:50
 Epoch: 155, lr: 1.0e-02, train_loss: 0.2499, train_acc: 0.9142 test_loss: 0.9464, test_acc: 0.7681, best: 0.7947, time: 0:01:50
 Epoch: 156, lr: 1.0e-02, train_loss: 0.2308, train_acc: 0.9242 test_loss: 0.9291, test_acc: 0.7758, best: 0.7947, time: 0:01:50
 Epoch: 157, lr: 1.0e-02, train_loss: 0.2211, train_acc: 0.9240 test_loss: 0.8990, test_acc: 0.7839, best: 0.7947, time: 0:01:51
 Epoch: 158, lr: 1.0e-02, train_loss: 0.2319, train_acc: 0.9238 test_loss: 0.9738, test_acc: 0.7770, best: 0.7947, time: 0:01:50
 Epoch: 159, lr: 1.0e-02, train_loss: 0.2360, train_acc: 0.9210 test_loss: 1.0258, test_acc: 0.7605, best: 0.7947, time: 0:01:50
 Epoch: 160, lr: 1.0e-02, train_loss: 0.2233, train_acc: 0.9246 test_loss: 0.9006, test_acc: 0.7785, best: 0.7947, time: 0:01:52
 Epoch: 161, lr: 1.0e-02, train_loss: 0.2321, train_acc: 0.9154 test_loss: 0.9400, test_acc: 0.7830, best: 0.7947, time: 0:01:51
 Epoch: 162, lr: 1.0e-02, train_loss: 0.2408, train_acc: 0.9190 test_loss: 0.9026, test_acc: 0.7854, best: 0.7947, time: 0:01:51
 Epoch: 163, lr: 1.0e-02, train_loss: 0.2381, train_acc: 0.9206 test_loss: 1.0647, test_acc: 0.7661, best: 0.7947, time: 0:01:50
 Epoch: 164, lr: 1.0e-02, train_loss: 0.2196, train_acc: 0.9260 test_loss: 1.0724, test_acc: 0.7632, best: 0.7947, time: 0:01:50
 Epoch: 165, lr: 1.0e-02, train_loss: 0.2378, train_acc: 0.9200 test_loss: 1.0067, test_acc: 0.7720, best: 0.7947, time: 0:01:50
 Epoch: 166, lr: 1.0e-02, train_loss: 0.2213, train_acc: 0.9256 test_loss: 0.9198, test_acc: 0.7934, best: 0.7947, time: 0:01:51
 Epoch: 167, lr: 1.0e-02, train_loss: 0.2327, train_acc: 0.9176 test_loss: 0.8971, test_acc: 0.7860, best: 0.7947, time: 0:01:50
 Epoch: 168, lr: 1.0e-02, train_loss: 0.2224, train_acc: 0.9260 test_loss: 0.8713, test_acc: 0.7860, best: 0.7947, time: 0:01:50
 Epoch: 169, lr: 1.0e-02, train_loss: 0.2223, train_acc: 0.9224 test_loss: 0.9667, test_acc: 0.7749, best: 0.7947, time: 0:01:50
 Epoch: 170, lr: 1.0e-02, train_loss: 0.2367, train_acc: 0.9198 test_loss: 0.9850, test_acc: 0.7761, best: 0.7947, time: 0:01:50
 Epoch: 171, lr: 1.0e-02, train_loss: 0.2247, train_acc: 0.9226 test_loss: 0.8840, test_acc: 0.7903, best: 0.7947, time: 0:01:50
 Epoch: 172, lr: 1.0e-02, train_loss: 0.2125, train_acc: 0.9294 test_loss: 0.8689, test_acc: 0.7920, best: 0.7947, time: 0:01:50
 Epoch: 173, lr: 1.0e-02, train_loss: 0.2085, train_acc: 0.9310 test_loss: 0.9416, test_acc: 0.7839, best: 0.7947, time: 0:01:49
 Epoch: 174, lr: 1.0e-02, train_loss: 0.2213, train_acc: 0.9290 test_loss: 0.9622, test_acc: 0.7837, best: 0.7947, time: 0:01:48
 Epoch: 175, lr: 1.0e-02, train_loss: 0.2223, train_acc: 0.9236 test_loss: 0.9018, test_acc: 0.7874, best: 0.7947, time: 0:01:48
 Epoch: 176, lr: 1.0e-02, train_loss: 0.2111, train_acc: 0.9268 test_loss: 0.8452, test_acc: 0.7963, best: 0.7963, time: 0:01:54
 Epoch: 177, lr: 1.0e-02, train_loss: 0.2105, train_acc: 0.9254 test_loss: 0.8962, test_acc: 0.7802, best: 0.7963, time: 0:01:48
 Epoch: 178, lr: 1.0e-02, train_loss: 0.2253, train_acc: 0.9224 test_loss: 0.8917, test_acc: 0.7785, best: 0.7963, time: 0:01:53
 Epoch: 179, lr: 1.0e-02, train_loss: 0.2229, train_acc: 0.9242 test_loss: 0.8618, test_acc: 0.7891, best: 0.7963, time: 0:01:51
 Epoch: 180, lr: 2.0e-03, train_loss: 0.2029, train_acc: 0.9314 test_loss: 0.8391, test_acc: 0.8009, best: 0.8009, time: 0:01:50
 Epoch: 181, lr: 2.0e-03, train_loss: 0.1553, train_acc: 0.9468 test_loss: 0.7974, test_acc: 0.8084, best: 0.8084, time: 0:01:50
 Epoch: 182, lr: 2.0e-03, train_loss: 0.1546, train_acc: 0.9458 test_loss: 0.8067, test_acc: 0.8104, best: 0.8104, time: 0:01:51
 Epoch: 183, lr: 2.0e-03, train_loss: 0.1484, train_acc: 0.9520 test_loss: 0.8217, test_acc: 0.8107, best: 0.8107, time: 0:01:49
 Epoch: 184, lr: 2.0e-03, train_loss: 0.1427, train_acc: 0.9528 test_loss: 0.8202, test_acc: 0.8113, best: 0.8113, time: 0:01:49
 Epoch: 185, lr: 2.0e-03, train_loss: 0.1555, train_acc: 0.9442 test_loss: 0.8607, test_acc: 0.8085, best: 0.8113, time: 0:01:51
 Epoch: 186, lr: 2.0e-03, train_loss: 0.1518, train_acc: 0.9490 test_loss: 0.8491, test_acc: 0.8085, best: 0.8113, time: 0:01:50
 Epoch: 187, lr: 2.0e-03, train_loss: 0.1505, train_acc: 0.9526 test_loss: 0.8483, test_acc: 0.8105, best: 0.8113, time: 0:01:49
 Epoch: 188, lr: 2.0e-03, train_loss: 0.1462, train_acc: 0.9504 test_loss: 0.8301, test_acc: 0.8090, best: 0.8113, time: 0:01:50
 Epoch: 189, lr: 2.0e-03, train_loss: 0.1499, train_acc: 0.9502 test_loss: 0.8454, test_acc: 0.8075, best: 0.8113, time: 0:01:49
 Epoch: 190, lr: 2.0e-03, train_loss: 0.1309, train_acc: 0.9556 test_loss: 0.8211, test_acc: 0.8091, best: 0.8113, time: 0:01:48
 Epoch: 191, lr: 2.0e-03, train_loss: 0.1470, train_acc: 0.9492 test_loss: 0.8321, test_acc: 0.8064, best: 0.8113, time: 0:01:48
 Epoch: 192, lr: 2.0e-03, train_loss: 0.1384, train_acc: 0.9552 test_loss: 0.8525, test_acc: 0.8057, best: 0.8113, time: 0:01:49
 Epoch: 193, lr: 2.0e-03, train_loss: 0.1345, train_acc: 0.9536 test_loss: 0.8522, test_acc: 0.8034, best: 0.8113, time: 0:01:51
 Epoch: 194, lr: 2.0e-03, train_loss: 0.1383, train_acc: 0.9550 test_loss: 0.8276, test_acc: 0.8110, best: 0.8113, time: 0:01:48
 Epoch: 195, lr: 2.0e-03, train_loss: 0.1454, train_acc: 0.9478 test_loss: 0.8579, test_acc: 0.8026, best: 0.8113, time: 0:01:50
 Epoch: 196, lr: 2.0e-03, train_loss: 0.1375, train_acc: 0.9520 test_loss: 0.8087, test_acc: 0.8035, best: 0.8113, time: 0:01:50
 Epoch: 197, lr: 2.0e-03, train_loss: 0.1407, train_acc: 0.9522 test_loss: 0.8569, test_acc: 0.8024, best: 0.8113, time: 0:01:49
 Epoch: 198, lr: 2.0e-03, train_loss: 0.1394, train_acc: 0.9524 test_loss: 0.8469, test_acc: 0.8026, best: 0.8113, time: 0:01:50
 Epoch: 199, lr: 2.0e-03, train_loss: 0.1360, train_acc: 0.9528 test_loss: 0.8357, test_acc: 0.8055, best: 0.8113, time: 0:01:49
 Epoch: 200, lr: 2.0e-03, train_loss: 0.1409, train_acc: 0.9554 test_loss: 0.8251, test_acc: 0.8047, best: 0.8113, time: 0:01:49
 Epoch: 201, lr: 2.0e-03, train_loss: 0.1310, train_acc: 0.9544 test_loss: 0.8323, test_acc: 0.8043, best: 0.8113, time: 0:01:50
 Epoch: 202, lr: 2.0e-03, train_loss: 0.1351, train_acc: 0.9538 test_loss: 0.8304, test_acc: 0.8084, best: 0.8113, time: 0:01:46
 Epoch: 203, lr: 2.0e-03, train_loss: 0.1393, train_acc: 0.9538 test_loss: 0.8319, test_acc: 0.8081, best: 0.8113, time: 0:01:48
 Epoch: 204, lr: 2.0e-03, train_loss: 0.1341, train_acc: 0.9564 test_loss: 0.8554, test_acc: 0.8031, best: 0.8113, time: 0:01:47
 Epoch: 205, lr: 2.0e-03, train_loss: 0.1416, train_acc: 0.9526 test_loss: 0.8540, test_acc: 0.8050, best: 0.8113, time: 0:01:47
 Epoch: 206, lr: 2.0e-03, train_loss: 0.1349, train_acc: 0.9530 test_loss: 0.8793, test_acc: 0.7987, best: 0.8113, time: 0:01:44
 Epoch: 207, lr: 2.0e-03, train_loss: 0.1224, train_acc: 0.9582 test_loss: 0.8921, test_acc: 0.8024, best: 0.8113, time: 0:01:48
 Epoch: 208, lr: 2.0e-03, train_loss: 0.1451, train_acc: 0.9486 test_loss: 0.8454, test_acc: 0.8034, best: 0.8113, time: 0:01:44
 Epoch: 209, lr: 2.0e-03, train_loss: 0.1511, train_acc: 0.9512 test_loss: 0.8602, test_acc: 0.7997, best: 0.8113, time: 0:01:44
 Epoch: 210, lr: 2.0e-03, train_loss: 0.1221, train_acc: 0.9578 test_loss: 0.8491, test_acc: 0.8043, best: 0.8113, time: 0:01:46
 Epoch: 211, lr: 2.0e-03, train_loss: 0.1371, train_acc: 0.9504 test_loss: 0.8062, test_acc: 0.8039, best: 0.8113, time: 0:01:44
 Epoch: 212, lr: 2.0e-03, train_loss: 0.1266, train_acc: 0.9566 test_loss: 0.8271, test_acc: 0.8085, best: 0.8113, time: 0:01:54
 Epoch: 213, lr: 2.0e-03, train_loss: 0.1192, train_acc: 0.9616 test_loss: 0.8716, test_acc: 0.7984, best: 0.8113, time: 0:01:49
 Epoch: 214, lr: 2.0e-03, train_loss: 0.1278, train_acc: 0.9584 test_loss: 0.8252, test_acc: 0.8077, best: 0.8113, time: 0:01:47
 Epoch: 215, lr: 2.0e-03, train_loss: 0.1308, train_acc: 0.9588 test_loss: 0.8456, test_acc: 0.8016, best: 0.8113, time: 0:01:48
 Epoch: 216, lr: 2.0e-03, train_loss: 0.1332, train_acc: 0.9538 test_loss: 0.8443, test_acc: 0.8054, best: 0.8113, time: 0:01:48
 Epoch: 217, lr: 2.0e-03, train_loss: 0.1325, train_acc: 0.9544 test_loss: 0.8101, test_acc: 0.8053, best: 0.8113, time: 0:01:49
 Epoch: 218, lr: 2.0e-03, train_loss: 0.1201, train_acc: 0.9580 test_loss: 0.8255, test_acc: 0.8010, best: 0.8113, time: 0:01:50
 Epoch: 219, lr: 2.0e-03, train_loss: 0.1191, train_acc: 0.9582 test_loss: 0.7984, test_acc: 0.8054, best: 0.8113, time: 0:01:48
 Epoch: 220, lr: 2.0e-03, train_loss: 0.1214, train_acc: 0.9566 test_loss: 0.8464, test_acc: 0.7997, best: 0.8113, time: 0:01:46
 Epoch: 221, lr: 2.0e-03, train_loss: 0.1255, train_acc: 0.9540 test_loss: 0.8155, test_acc: 0.8081, best: 0.8113, time: 0:01:52
 Epoch: 222, lr: 2.0e-03, train_loss: 0.1303, train_acc: 0.9538 test_loss: 0.8312, test_acc: 0.8031, best: 0.8113, time: 0:01:50
 Epoch: 223, lr: 2.0e-03, train_loss: 0.1244, train_acc: 0.9602 test_loss: 0.7974, test_acc: 0.8100, best: 0.8113, time: 0:01:48
 Epoch: 224, lr: 2.0e-03, train_loss: 0.1220, train_acc: 0.9566 test_loss: 0.8239, test_acc: 0.8091, best: 0.8113, time: 0:01:49
 Epoch: 225, lr: 2.0e-03, train_loss: 0.1263, train_acc: 0.9552 test_loss: 0.8399, test_acc: 0.8026, best: 0.8113, time: 0:01:49
 Epoch: 226, lr: 2.0e-03, train_loss: 0.1229, train_acc: 0.9570 test_loss: 0.8222, test_acc: 0.8076, best: 0.8113, time: 0:01:56
 Epoch: 227, lr: 2.0e-03, train_loss: 0.1076, train_acc: 0.9638 test_loss: 0.8141, test_acc: 0.8096, best: 0.8113, time: 0:01:50
 Epoch: 228, lr: 2.0e-03, train_loss: 0.1214, train_acc: 0.9588 test_loss: 0.8219, test_acc: 0.8106, best: 0.8113, time: 0:01:50
 Epoch: 229, lr: 2.0e-03, train_loss: 0.1192, train_acc: 0.9614 test_loss: 0.8300, test_acc: 0.8086, best: 0.8113, time: 0:01:57
 Epoch: 230, lr: 2.0e-03, train_loss: 0.1273, train_acc: 0.9582 test_loss: 0.8440, test_acc: 0.8061, best: 0.8113, time: 0:01:48
 Epoch: 231, lr: 2.0e-03, train_loss: 0.1161, train_acc: 0.9596 test_loss: 0.8348, test_acc: 0.8119, best: 0.8119, time: 0:01:51
 Epoch: 232, lr: 2.0e-03, train_loss: 0.1178, train_acc: 0.9588 test_loss: 0.8429, test_acc: 0.8031, best: 0.8119, time: 0:01:52
 Epoch: 233, lr: 2.0e-03, train_loss: 0.1188, train_acc: 0.9594 test_loss: 0.8083, test_acc: 0.8071, best: 0.8119, time: 0:01:48
 Epoch: 234, lr: 2.0e-03, train_loss: 0.1176, train_acc: 0.9610 test_loss: 0.8790, test_acc: 0.8026, best: 0.8119, time: 0:01:50
 Epoch: 235, lr: 2.0e-03, train_loss: 0.1389, train_acc: 0.9516 test_loss: 0.8480, test_acc: 0.8024, best: 0.8119, time: 0:01:51
 Epoch: 236, lr: 2.0e-03, train_loss: 0.1226, train_acc: 0.9592 test_loss: 0.8667, test_acc: 0.8027, best: 0.8119, time: 0:01:49
 Epoch: 237, lr: 2.0e-03, train_loss: 0.1106, train_acc: 0.9614 test_loss: 0.8844, test_acc: 0.8010, best: 0.8119, time: 0:01:51
 Epoch: 238, lr: 2.0e-03, train_loss: 0.1247, train_acc: 0.9574 test_loss: 0.8501, test_acc: 0.8074, best: 0.8119, time: 0:01:50
 Epoch: 239, lr: 2.0e-03, train_loss: 0.1301, train_acc: 0.9556 test_loss: 0.8414, test_acc: 0.8033, best: 0.8119, time: 0:01:51
 Epoch: 240, lr: 4.0e-04, train_loss: 0.1109, train_acc: 0.9612 test_loss: 0.8861, test_acc: 0.7971, best: 0.8119, time: 0:01:51
 Epoch: 241, lr: 4.0e-04, train_loss: 0.1276, train_acc: 0.9546 test_loss: 0.8738, test_acc: 0.8013, best: 0.8119, time: 0:01:48
 Epoch: 242, lr: 4.0e-04, train_loss: 0.1147, train_acc: 0.9610 test_loss: 0.8681, test_acc: 0.8011, best: 0.8119, time: 0:01:49
 Epoch: 243, lr: 4.0e-04, train_loss: 0.1099, train_acc: 0.9624 test_loss: 0.8546, test_acc: 0.8039, best: 0.8119, time: 0:01:49
 Epoch: 244, lr: 4.0e-04, train_loss: 0.1183, train_acc: 0.9604 test_loss: 0.8454, test_acc: 0.8050, best: 0.8119, time: 0:01:48
 Epoch: 245, lr: 4.0e-04, train_loss: 0.1240, train_acc: 0.9588 test_loss: 0.8389, test_acc: 0.8054, best: 0.8119, time: 0:01:53
 Epoch: 246, lr: 4.0e-04, train_loss: 0.1156, train_acc: 0.9608 test_loss: 0.8587, test_acc: 0.8031, best: 0.8119, time: 0:01:49
 Epoch: 247, lr: 4.0e-04, train_loss: 0.1099, train_acc: 0.9628 test_loss: 0.8244, test_acc: 0.8070, best: 0.8119, time: 0:01:50
 Epoch: 248, lr: 4.0e-04, train_loss: 0.1194, train_acc: 0.9580 test_loss: 0.8514, test_acc: 0.8014, best: 0.8119, time: 0:01:46
 Epoch: 249, lr: 4.0e-04, train_loss: 0.1045, train_acc: 0.9616 test_loss: 0.8328, test_acc: 0.8047, best: 0.8119, time: 0:01:48
 Epoch: 250, lr: 4.0e-04, train_loss: 0.1109, train_acc: 0.9624 test_loss: 0.8558, test_acc: 0.8035, best: 0.8119, time: 0:01:47
 Epoch: 251, lr: 4.0e-04, train_loss: 0.1141, train_acc: 0.9610 test_loss: 0.8743, test_acc: 0.8020, best: 0.8119, time: 0:01:45
 Epoch: 252, lr: 4.0e-04, train_loss: 0.1045, train_acc: 0.9646 test_loss: 0.8271, test_acc: 0.8063, best: 0.8119, time: 0:01:44
 Epoch: 253, lr: 4.0e-04, train_loss: 0.1059, train_acc: 0.9646 test_loss: 0.8339, test_acc: 0.8053, best: 0.8119, time: 0:01:47
 Epoch: 254, lr: 4.0e-04, train_loss: 0.1055, train_acc: 0.9648 test_loss: 0.8293, test_acc: 0.8060, best: 0.8119, time: 0:01:46
 Epoch: 255, lr: 4.0e-04, train_loss: 0.1165, train_acc: 0.9592 test_loss: 0.8219, test_acc: 0.8093, best: 0.8119, time: 0:01:49
 Epoch: 256, lr: 4.0e-04, train_loss: 0.1155, train_acc: 0.9582 test_loss: 0.8492, test_acc: 0.8056, best: 0.8119, time: 0:01:50
 Epoch: 257, lr: 4.0e-04, train_loss: 0.1149, train_acc: 0.9616 test_loss: 0.8252, test_acc: 0.8071, best: 0.8119, time: 0:01:50
 Epoch: 258, lr: 4.0e-04, train_loss: 0.1088, train_acc: 0.9648 test_loss: 0.8401, test_acc: 0.8069, best: 0.8119, time: 0:01:45
 Epoch: 259, lr: 4.0e-04, train_loss: 0.1113, train_acc: 0.9634 test_loss: 0.8369, test_acc: 0.8066, best: 0.8119, time: 0:01:45
 Epoch: 260, lr: 4.0e-04, train_loss: 0.1048, train_acc: 0.9648 test_loss: 0.8385, test_acc: 0.8061, best: 0.8119, time: 0:01:49
 Epoch: 261, lr: 4.0e-04, train_loss: 0.1062, train_acc: 0.9640 test_loss: 0.8283, test_acc: 0.8107, best: 0.8119, time: 0:01:49
 Epoch: 262, lr: 4.0e-04, train_loss: 0.1045, train_acc: 0.9654 test_loss: 0.8180, test_acc: 0.8100, best: 0.8119, time: 0:01:56
 Epoch: 263, lr: 4.0e-04, train_loss: 0.1095, train_acc: 0.9636 test_loss: 0.8375, test_acc: 0.8076, best: 0.8119, time: 0:01:44
 Epoch: 264, lr: 4.0e-04, train_loss: 0.1158, train_acc: 0.9612 test_loss: 0.8783, test_acc: 0.7986, best: 0.8119, time: 0:01:50
 Epoch: 265, lr: 4.0e-04, train_loss: 0.1123, train_acc: 0.9606 test_loss: 0.8450, test_acc: 0.8040, best: 0.8119, time: 0:01:47
 Epoch: 266, lr: 4.0e-04, train_loss: 0.0943, train_acc: 0.9686 test_loss: 0.8641, test_acc: 0.8056, best: 0.8119, time: 0:01:47
 Epoch: 267, lr: 4.0e-04, train_loss: 0.1046, train_acc: 0.9628 test_loss: 0.8645, test_acc: 0.8009, best: 0.8119, time: 0:01:54
 Epoch: 268, lr: 4.0e-04, train_loss: 0.1077, train_acc: 0.9648 test_loss: 0.8207, test_acc: 0.8076, best: 0.8119, time: 0:01:52
 Epoch: 269, lr: 4.0e-04, train_loss: 0.0981, train_acc: 0.9690 test_loss: 0.8676, test_acc: 0.7976, best: 0.8119, time: 0:01:49
 Epoch: 270, lr: 8.0e-05, train_loss: 0.1078, train_acc: 0.9642 test_loss: 0.8436, test_acc: 0.8035, best: 0.8119, time: 0:01:50
 Epoch: 271, lr: 8.0e-05, train_loss: 0.0998, train_acc: 0.9654 test_loss: 0.8566, test_acc: 0.8046, best: 0.8119, time: 0:01:48
 Epoch: 272, lr: 8.0e-05, train_loss: 0.0917, train_acc: 0.9700 test_loss: 0.8771, test_acc: 0.7979, best: 0.8119, time: 0:01:50
 Epoch: 273, lr: 8.0e-05, train_loss: 0.1011, train_acc: 0.9678 test_loss: 0.8463, test_acc: 0.8033, best: 0.8119, time: 0:01:52
 Epoch: 274, lr: 8.0e-05, train_loss: 0.1030, train_acc: 0.9656 test_loss: 0.8331, test_acc: 0.8069, best: 0.8119, time: 0:01:49
 Epoch: 275, lr: 8.0e-05, train_loss: 0.1028, train_acc: 0.9618 test_loss: 0.8352, test_acc: 0.8054, best: 0.8119, time: 0:01:49
 Epoch: 276, lr: 8.0e-05, train_loss: 0.1015, train_acc: 0.9640 test_loss: 0.8521, test_acc: 0.8019, best: 0.8119, time: 0:01:49
 Epoch: 277, lr: 8.0e-05, train_loss: 0.1106, train_acc: 0.9626 test_loss: 0.8458, test_acc: 0.8059, best: 0.8119, time: 0:01:48
 Epoch: 278, lr: 8.0e-05, train_loss: 0.1183, train_acc: 0.9592 test_loss: 0.8225, test_acc: 0.8069, best: 0.8119, time: 0:01:53
 Epoch: 279, lr: 8.0e-05, train_loss: 0.0951, train_acc: 0.9664 test_loss: 0.8368, test_acc: 0.8031, best: 0.8119, time: 0:01:48
 Epoch: 280, lr: 8.0e-05, train_loss: 0.1226, train_acc: 0.9592 test_loss: 0.8281, test_acc: 0.8071, best: 0.8119, time: 0:01:50
 Epoch: 281, lr: 8.0e-05, train_loss: 0.1057, train_acc: 0.9632 test_loss: 0.8779, test_acc: 0.8016, best: 0.8119, time: 0:01:50
 Epoch: 282, lr: 8.0e-05, train_loss: 0.1125, train_acc: 0.9622 test_loss: 0.8217, test_acc: 0.8070, best: 0.8119, time: 0:01:49
 Epoch: 283, lr: 8.0e-05, train_loss: 0.1008, train_acc: 0.9666 test_loss: 0.8359, test_acc: 0.8047, best: 0.8119, time: 0:01:50
 Epoch: 284, lr: 8.0e-05, train_loss: 0.1055, train_acc: 0.9650 test_loss: 0.8220, test_acc: 0.8073, best: 0.8119, time: 0:01:50
 Epoch: 285, lr: 8.0e-05, train_loss: 0.0995, train_acc: 0.9670 test_loss: 0.8459, test_acc: 0.8077, best: 0.8119, time: 0:01:49
 Epoch: 286, lr: 8.0e-05, train_loss: 0.1071, train_acc: 0.9626 test_loss: 0.8340, test_acc: 0.8039, best: 0.8119, time: 0:01:47
 Epoch: 287, lr: 8.0e-05, train_loss: 0.1092, train_acc: 0.9620 test_loss: 0.8442, test_acc: 0.8065, best: 0.8119, time: 0:01:49
 Epoch: 288, lr: 8.0e-05, train_loss: 0.0967, train_acc: 0.9690 test_loss: 0.8273, test_acc: 0.8050, best: 0.8119, time: 0:01:49
 Epoch: 289, lr: 8.0e-05, train_loss: 0.1184, train_acc: 0.9594 test_loss: 0.8601, test_acc: 0.8005, best: 0.8119, time: 0:01:48
 Epoch: 290, lr: 8.0e-05, train_loss: 0.1074, train_acc: 0.9640 test_loss: 0.8592, test_acc: 0.8021, best: 0.8119, time: 0:01:48
 Epoch: 291, lr: 8.0e-05, train_loss: 0.1179, train_acc: 0.9596 test_loss: 0.8368, test_acc: 0.8045, best: 0.8119, time: 0:01:50
 Epoch: 292, lr: 8.0e-05, train_loss: 0.1022, train_acc: 0.9656 test_loss: 0.8485, test_acc: 0.8061, best: 0.8119, time: 0:01:48
 Epoch: 293, lr: 8.0e-05, train_loss: 0.1055, train_acc: 0.9620 test_loss: 0.8631, test_acc: 0.8029, best: 0.8119, time: 0:01:47
 Epoch: 294, lr: 8.0e-05, train_loss: 0.1000, train_acc: 0.9660 test_loss: 0.8435, test_acc: 0.8071, best: 0.8119, time: 0:01:50
 Epoch: 295, lr: 8.0e-05, train_loss: 0.1102, train_acc: 0.9652 test_loss: 0.8193, test_acc: 0.8100, best: 0.8119, time: 0:01:55
 Epoch: 296, lr: 8.0e-05, train_loss: 0.1136, train_acc: 0.9624 test_loss: 0.8266, test_acc: 0.8064, best: 0.8119, time: 0:01:49
 Epoch: 297, lr: 8.0e-05, train_loss: 0.1127, train_acc: 0.9606 test_loss: 0.8294, test_acc: 0.8089, best: 0.8119, time: 0:01:49
 Epoch: 298, lr: 8.0e-05, train_loss: 0.0988, train_acc: 0.9648 test_loss: 0.8249, test_acc: 0.8076, best: 0.8119, time: 0:01:51
 Epoch: 299, lr: 8.0e-05, train_loss: 0.1021, train_acc: 0.9660 test_loss: 0.8356, test_acc: 0.8083, best: 0.8119, time: 0:01:49
 Highest accuracy: 0.8119