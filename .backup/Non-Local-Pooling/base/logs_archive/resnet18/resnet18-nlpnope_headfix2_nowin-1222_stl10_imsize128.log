
 Run on time: 2022-07-13 00:08:32.358668

 Architecture: resnet18-nlpnope_headfix2_nowin-1222

 Pool Config: {
    "arch": "resnet18",
    "conv1": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 2,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "pool": {
        "_conv2d": null,
        "pool_cfg": {
            "_ptype": "maxp",
            "_stride": 2,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "layer1": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 1,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": 2,
            "_conv2d": null,
            "_win_norm": false
        }
    },
    "layer2": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlpnope",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": false
        }
    },
    "layer3": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlpnope",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": false
        }
    },
    "layer4": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlpnope",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": false
        }
    }
}

 Arguments:
	 gpu                  : True
	 log                  : True
	 seed                 : 0
	 momentum             : 0.9
	 amsgrad              : True
	 dataset              : STL10
	 batch_size           : 8
	 architecture         : resnet18-nlpnope_headfix2_nowin-1222
	 im_size              : 128
	 relu_threshold       : 4.0
	 learning_rate        : 0.01
	 pretrained_backbone  : 
	 pretrained_ann       : 
	 weight_decay         : 0.0
	 test_only            : False
	 epochs               : 300
	 lr_interval          : [180, 240, 270]
	 lr_reduce            : 5
	 optimizer            : SGD
	 dropout              : 0.2
	 kernel_size          : 3
	 dont_save            : False
	 visualize            : False
	 devices              : 0
 DataParallel(
  (module): Network(
    (net): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer3): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (layer4): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (pool): Pool2d(
          (logit): Sequential(
            (pool_weight): NLP_BASE(
              (downsample): Sequential(
                (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
              )
              (multihead_attn): MultiheadAttention(
                (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
              )
              (restore): Sequential(
                (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): Sigmoid()
              )
            )
          )
          (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=512, out_features=10, bias=True)
    )
  )
)
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0
)
 Epoch: 1, lr: 1.0e-02, train_loss: 2.3997, train_acc: 0.1874 test_loss: 2.3008, test_acc: 0.2442, best: 0.2442, time: 0:01:18
 Epoch: 2, lr: 1.0e-02, train_loss: 1.9743, train_acc: 0.2414 test_loss: 1.9180, test_acc: 0.2490, best: 0.2490, time: 0:01:18
 Epoch: 3, lr: 1.0e-02, train_loss: 1.8920, train_acc: 0.2578 test_loss: 1.6698, test_acc: 0.3257, best: 0.3257, time: 0:01:17
 Epoch: 4, lr: 1.0e-02, train_loss: 1.8566, train_acc: 0.2878 test_loss: 1.6262, test_acc: 0.3431, best: 0.3431, time: 0:01:18
 Epoch: 5, lr: 1.0e-02, train_loss: 1.7668, train_acc: 0.3246 test_loss: 1.5807, test_acc: 0.4050, best: 0.4050, time: 0:01:18
 Epoch: 6, lr: 1.0e-02, train_loss: 1.7003, train_acc: 0.3572 test_loss: 1.6183, test_acc: 0.4005, best: 0.4050, time: 0:01:18
 Epoch: 7, lr: 1.0e-02, train_loss: 1.6499, train_acc: 0.3790 test_loss: 1.4285, test_acc: 0.4610, best: 0.4610, time: 0:01:18
 Epoch: 8, lr: 1.0e-02, train_loss: 1.5644, train_acc: 0.4096 test_loss: 1.3733, test_acc: 0.4918, best: 0.4918, time: 0:01:18
 Epoch: 9, lr: 1.0e-02, train_loss: 1.5255, train_acc: 0.4280 test_loss: 1.3480, test_acc: 0.4980, best: 0.4980, time: 0:01:19
 Epoch: 10, lr: 1.0e-02, train_loss: 1.4633, train_acc: 0.4608 test_loss: 1.2986, test_acc: 0.5175, best: 0.5175, time: 0:01:18
 Epoch: 11, lr: 1.0e-02, train_loss: 1.4291, train_acc: 0.4698 test_loss: 1.2147, test_acc: 0.5551, best: 0.5551, time: 0:01:18
 Epoch: 12, lr: 1.0e-02, train_loss: 1.3933, train_acc: 0.4856 test_loss: 1.2319, test_acc: 0.5416, best: 0.5551, time: 0:01:18
 Epoch: 13, lr: 1.0e-02, train_loss: 1.3437, train_acc: 0.5006 test_loss: 1.1709, test_acc: 0.5743, best: 0.5743, time: 0:01:18
 Epoch: 14, lr: 1.0e-02, train_loss: 1.3237, train_acc: 0.5186 test_loss: 1.2212, test_acc: 0.5481, best: 0.5743, time: 0:01:18
 Epoch: 15, lr: 1.0e-02, train_loss: 1.2672, train_acc: 0.5372 test_loss: 1.0979, test_acc: 0.6021, best: 0.6021, time: 0:01:18
 Epoch: 16, lr: 1.0e-02, train_loss: 1.2375, train_acc: 0.5590 test_loss: 1.1301, test_acc: 0.5927, best: 0.6021, time: 0:01:18
 Epoch: 17, lr: 1.0e-02, train_loss: 1.2198, train_acc: 0.5600 test_loss: 1.2185, test_acc: 0.5684, best: 0.6021, time: 0:01:19
 Epoch: 18, lr: 1.0e-02, train_loss: 1.1901, train_acc: 0.5646 test_loss: 1.0996, test_acc: 0.6052, best: 0.6052, time: 0:01:18
 Epoch: 19, lr: 1.0e-02, train_loss: 1.1664, train_acc: 0.5812 test_loss: 1.0414, test_acc: 0.6220, best: 0.6220, time: 0:01:18
 Epoch: 20, lr: 1.0e-02, train_loss: 1.1371, train_acc: 0.5914 test_loss: 1.1317, test_acc: 0.5982, best: 0.6220, time: 0:01:18
 Epoch: 21, lr: 1.0e-02, train_loss: 1.1143, train_acc: 0.5990 test_loss: 1.0570, test_acc: 0.6184, best: 0.6220, time: 0:01:18
 Epoch: 22, lr: 1.0e-02, train_loss: 1.0838, train_acc: 0.6086 test_loss: 1.0369, test_acc: 0.6240, best: 0.6240, time: 0:01:18
 Epoch: 23, lr: 1.0e-02, train_loss: 1.0609, train_acc: 0.6214 test_loss: 1.0726, test_acc: 0.6211, best: 0.6240, time: 0:01:18
 Epoch: 24, lr: 1.0e-02, train_loss: 1.0372, train_acc: 0.6286 test_loss: 0.9824, test_acc: 0.6492, best: 0.6492, time: 0:01:18
 Epoch: 25, lr: 1.0e-02, train_loss: 1.0438, train_acc: 0.6234