
 Run on time: 2022-07-01 02:47:38.705821

 Architecture: resnet18_v2-nlp_headfix2-4222

 Pool Config: {
    "arch": "resnet18_v2",
    "conv1": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "skip",
            "_stride": 2,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "pool": {
        "_conv2d": null,
        "pool_cfg": {
            "_ptype": "maxp",
            "_stride": 2,
            "_psize": null,
            "_dim_reduced_ratio": null,
            "_num_heads": null,
            "_conv2d": null,
            "_win_norm": null
        }
    },
    "layer1": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 4,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    },
    "layer2": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    },
    "layer3": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    },
    "layer4": {
        "_conv2d": "norm",
        "pool_cfg": {
            "_ptype": "nlp",
            "_stride": 2,
            "_psize": 1,
            "_dim_reduced_ratio": 1,
            "_num_heads": 2,
            "_conv2d": "norm",
            "_win_norm": true
        }
    }
}

 Arguments:
	 gpu                  : True
	 log                  : True
	 seed                 : 0
	 momentum             : 0.9
	 amsgrad              : True
	 dataset              : STL10
	 batch_size           : 8
	 architecture         : RESNET18_V2-NLP_HEADFIX2-4222
	 im_size              : 128
	 relu_threshold       : 4.0
	 learning_rate        : 0.01
	 pretrained_backbone  : 
	 pretrained_ann       : 
	 weight_decay         : 0.0
	 test_only            : False
	 epochs               : 300
	 lr_interval          : [180, 240, 270]
	 lr_reduce            : 5
	 optimizer            : SGD
	 dropout              : 0.2
	 kernel_size          : 3
	 dont_save            : False
	 visualize            : False
	 devices              : 0
 DataParallel(
  (module): Network(
    (net): ResNet_v2(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): BasicBlock(
          (pooling): Pool2d(
            (logit): Sequential(
              (pool_weight): NLP_BASE(
                (downsample): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (multihead_attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                )
                (restore): Sequential(
                  (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                  (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (2): Sigmoid()
                )
                (pos_embed): PositionEmbeddingLearned(
                  (row_embed): Embedding(256, 32)
                  (col_embed): Embedding(256, 32)
                )
              )
            )
            (pool): AvgPool2d(kernel_size=4, stride=4, padding=0)
          )
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2): Sequential(
        (0): BasicBlock(
          (pooling): Pool2d(
            (logit): Sequential(
              (pool_weight): NLP_BASE(
                (downsample): Sequential(
                  (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                  (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (multihead_attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)
                )
                (restore): Sequential(
                  (0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
                  (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (2): Sigmoid()
                )
                (pos_embed): PositionEmbeddingLearned(
                  (row_embed): Embedding(256, 64)
                  (col_embed): Embedding(256, 64)
                )
              )
            )
            (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          )
          (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer3): Sequential(
        (0): BasicBlock(
          (pooling): Pool2d(
            (logit): Sequential(
              (pool_weight): NLP_BASE(
                (downsample): Sequential(
                  (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                  (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (multihead_attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (restore): Sequential(
                  (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
                  (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (2): Sigmoid()
                )
                (pos_embed): PositionEmbeddingLearned(
                  (row_embed): Embedding(256, 128)
                  (col_embed): Embedding(256, 128)
                )
              )
            )
            (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          )
          (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer4): Sequential(
        (0): BasicBlock(
          (pooling): Pool2d(
            (logit): Sequential(
              (pool_weight): NLP_BASE(
                (downsample): Sequential(
                  (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                  (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (2): ReLU(inplace=True)
                )
                (multihead_attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
                )
                (restore): Sequential(
                  (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
                  (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                  (2): Sigmoid()
                )
                (pos_embed): PositionEmbeddingLearned(
                  (row_embed): Embedding(256, 256)
                  (col_embed): Embedding(256, 256)
                )
              )
            )
            (pool): AvgPool2d(kernel_size=2, stride=2, padding=0)
          )
          (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=512, out_features=10, bias=True)
    )
  )
)
 SGD (
Parameter Group 0
    dampening: 0
    lr: 0.01
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0
)
 Epoch: 1, lr: 1.0e-02, train_loss: 2.8535, train_acc: 0.1644 test_loss: 2.4925, test_acc: 0.2231, best: 0.2231, time: 0:00:57
 Epoch: 2, lr: 1.0e-02, train_loss: 2.2341, train_acc: 0.1970 test_loss: 2.3095, test_acc: 0.2609, best: 0.2609, time: 0:00:57
 Epoch: 3, lr: 1.0e-02, train_loss: 2.0651, train_acc: 0.2192 test_loss: 1.8651, test_acc: 0.3034, best: 0.3034, time: 0:00:58
 Epoch: 4, lr: 1.0e-02, train_loss: 1.9768, train_acc: 0.2490 test_loss: 2.2302, test_acc: 0.3118, best: 0.3118, time: 0:00:58
 Epoch: 5, lr: 1.0e-02, train_loss: 1.9285, train_acc: 0.2654 test_loss: 1.7795, test_acc: 0.3476, best: 0.3476, time: 0:00:58
 Epoch: 6, lr: 1.0e-02, train_loss: 1.8805, train_acc: 0.2970 test_loss: 1.6925, test_acc: 0.3536, best: 0.3536, time: 0:00:58
 Epoch: 7, lr: 1.0e-02, train_loss: 1.8496, train_acc: 0.3032 test_loss: 1.7438, test_acc: 0.3621, best: 0.3621, time: 0:00:58
 Epoch: 8, lr: 1.0e-02, train_loss: 1.8102, train_acc: 0.3118 test_loss: 1.6106, test_acc: 0.4005, best: 0.4005, time: 0:00:58
 Epoch: 9, lr: 1.0e-02, train_loss: 1.7764, train_acc: 0.3296 test_loss: 1.7555, test_acc: 0.3969, best: 0.4005, time: 0:00:57
 Epoch: 10, lr: 1.0e-02, train_loss: 1.7508, train_acc: 0.3426 test_loss: 1.6242, test_acc: 0.4098, best: 0.4098, time: 0:00:58
 Epoch: 11, lr: 1.0e-02, train_loss: 1.7193, train_acc: 0.3580 test_loss: 1.5339, test_acc: 0.4300, best: 0.4300, time: 0:00:58
 Epoch: 12, lr: 1.0e-02, train_loss: 1.7004, train_acc: 0.3760 test_loss: 1.6499, test_acc: 0.4025, best: 0.4300, time: 0:00:58
 Epoch: 13, lr: 1.0e-02, train_loss: 1.6686, train_acc: 0.3858 test_loss: 2.2171, test_acc: 0.4071, best: 0.4300, time: 0:00:57
 Epoch: 14, lr: 1.0e-02, train_loss: 1.6473, train_acc: 0.3888 test_loss: 1.5629, test_acc: 0.4436, best: 0.4436, time: 0:00:58
 Epoch: 15, lr: 1.0e-02, train_loss: 1.6271, train_acc: 0.4012 test_loss: 1.4381, test_acc: 0.4711, best: 0.4711, time: 0:00:58
 Epoch: 16, lr: 1.0e-02, train_loss: 1.5702, train_acc: 0.4196 test_loss: 1.6507, test_acc: 0.4889, best: 0.4889, time: 0:00:58
 Epoch: 17, lr: 1.0e-02, train_loss: 1.5494, train_acc: 0.4244 test_loss: 1.4490, test_acc: 0.4605, best: 0.4889, time: 0:00:57
 Epoch: 18, lr: 1.0e-02, train_loss: 1.5037, train_acc: 0.4462 test_loss: 2.6991, test_acc: 0.4150, best: 0.4889, time: 0:00:57
 Epoch: 19, lr: 1.0e-02, train_loss: 1.5056, train_acc: 0.4386 test_loss: 1.4437, test_acc: 0.4734, best: 0.4889, time: 0:00:57
 Epoch: 20, lr: 1.0e-02, train_loss: 1.5035, train_acc: 0.4490 test_loss: 1.5826, test_acc: 0.4733, best: 0.4889, time: 0:00:58
 Epoch: 21, lr: 1.0e-02, train_loss: 1.4636, train_acc: 0.4674 test_loss: 1.4087, test_acc: 0.4889, best: 0.4889, time: 0:00:57
 Epoch: 22, lr: 1.0e-02, train_loss: 1.4217, train_acc: 0.4820 test_loss: 1.8246, test_acc: 0.4710, best: 0.4889, time: 0:00:57
 Epoch: 23, lr: 1.0e-02, train_loss: 1.4090, train_acc: 0.4850 test_loss: 1.3353, test_acc: 0.5212, best: 0.5212, time: 0:00:58
 Epoch: 24, lr: 1.0e-02, train_loss: 1.3722, train_acc: 0.5022 test_loss: 1.5835, test_acc: 0.5030, best: 0.5212, time: 0:00:57
 Epoch: 25, lr: 1.0e-02, train_loss: 1.3849, train_acc: 0.4952 test_loss: 1.2618, test_acc: 0.5421, best: 0.5421, time: 0:00:58
 Epoch: 26, lr: 1.0e-02, train_loss: 1.3628, train_acc: 0.4968 test_loss: 1.3690, test_acc: 0.5509, best: 0.5509, time: 0:00:58
 Epoch: 27, lr: 1.0e-02, train_loss: 1.3297, train_acc: 0.5162 test_loss: 1.2403, test_acc: 0.5637, best: 0.5637, time: 0:00:58
 Epoch: 28, lr: 1.0e-02, train_loss: 1.3320, train_acc: 0.5174 test_loss: 1.3820, test_acc: 0.5561, best: 0.5637, time: 0:00:58
 Epoch: 29, lr: 1.0e-02, train_loss: 1.3185, train_acc: 0.5200 test_loss: 1.6573, test_acc: 0.5373, best: 0.5637, time: 0:00:58
 Epoch: 30, lr: 1.0e-02, train_loss: 1.2795, train_acc: 0.5318 test_loss: 1.2030, test_acc: 0.5609, best: 0.5637, time: 0:00:57
 Epoch: 31, lr: 1.0e-02, train_loss: 1.2766, train_acc: 0.5294 test_loss: 1.3024, test_acc: 0.5704, best: 0.5704, time: 0:00:58
 Epoch: 32, lr: 1.0e-02, train_loss: 1.2671, train_acc: 0.5364 test_loss: 1.2585, test_acc: 0.5601, best: 0.5704, time: 0:00:58
 Epoch: 33, lr: 1.0e-02, train_loss: 1.2388, train_acc: 0.5488 test_loss: 1.1079, test_acc: 0.5971, best: 0.5971, time: 0:00:58
 Epoch: 34, lr: 1.0e-02, train_loss: 1.2245, train_acc: 0.5562 test_loss: 1.5299, test_acc: 0.5524, best: 0.5971, time: 0:00:57
 Epoch: 35, lr: 1.0e-02, train_loss: 1.2155, train_acc: 0.5576 test_loss: 1.1526, test_acc: 0.5960, best: 0.5971, time: 0:00:57
 Epoch: 36, lr: 1.0e-02, train_loss: 1.2068, train_acc: 0.5594 test_loss: 1.2635, test_acc: 0.5851, best: 0.5971, time: 0:00:57
 Epoch: 37, lr: 1.0e-02, train_loss: 1.1975, train_acc: 0.5674 test_loss: 1.3850, test_acc: 0.5345, best: 0.5971, time: 0:00:58
 Epoch: 38, lr: 1.0e-02, train_loss: 1.1844, train_acc: 0.5764 test_loss: 1.2213, test_acc: 0.5990, best: 0.5990, time: 0:00:58
 Epoch: 39, lr: 1.0e-02, train_loss: 1.1758, train_acc: 0.5816 test_loss: 1.3745, test_acc: 0.5761, best: 0.5990, time: 0:00:57
 Epoch: 40, lr: 1.0e-02, train_loss: 1.1726, train_acc: 0.5744 test_loss: 1.1881, test_acc: 0.5889, best: 0.5990, time: 0:00:58
 Epoch: 41, lr: 1.0e-02, train_loss: 1.1178, train_acc: 0.5936 test_loss: 1.2141, test_acc: 0.5825, best: 0.5990, time: 0:00:58
 Epoch: 42, lr: 1.0e-02, train_loss: 1.1228, train_acc: 0.5952 test_loss: 1.0646, test_acc: 0.6251, best: 0.6251, time: 0:00:58
 Epoch: 43, lr: 1.0e-02, train_loss: 1.1305, train_acc: 0.5836 test_loss: 1.2010, test_acc: 0.5879, best: 0.6251, time: 0:00:57
 Epoch: 44, lr: 1.0e-02, train_loss: 1.0995, train_acc: 0.5994 test_loss: 1.2411, test_acc: 0.5867, best: 0.6251, time: 0:00:58
 Epoch: 45, lr: 1.0e-02, train_loss: 1.1129, train_acc: 0.5978 test_loss: 1.1857, test_acc: 0.6028, best: 0.6251, time: 0:00:57
 Epoch: 46, lr: 1.0e-02, train_loss: 1.0878, train_acc: 0.6110 test_loss: 1.2275, test_acc: 0.6064, best: 0.6251, time: 0:00:58
 Epoch: 47, lr: 1.0e-02, train_loss: 1.0907, train_acc: 0.6092 test_loss: 1.0435, test_acc: 0.6452, best: 0.6452, time: 0:00:58
 Epoch: 48, lr: 1.0e-02, train_loss: 1.0524, train_acc: 0.6260 test_loss: 1.1038, test_acc: 0.6324, best: 0.6452, time: 0:00:58
 Epoch: 49, lr: 1.0e-02, train_loss: 1.0708, train_acc: 0.6130 test_loss: 1.1309, test_acc: 0.6336, best: 0.6452, time: 0:00:57
 Epoch: 50, lr: 1.0e-02, train_loss: 1.0504, train_acc: 0.6208 test_loss: 1.2771, test_acc: 0.6084, best: 0.6452, time: 0:00:57
 Epoch: 51, lr: 1.0e-02, train_loss: 1.0247, train_acc: 0.6290 test_loss: 1.0654, test_acc: 0.6384, best: 0.6452, time: 0:00:57
 Epoch: 52, lr: 1.0e-02, train_loss: 1.0397, train_acc: 0.6274 test_loss: 1.0767, test_acc: 0.6362, best: 0.6452, time: 0:00:57
 Epoch: 53, lr: 1.0e-02, train_loss: 1.0536, train_acc: 0.6226 test_loss: 1.1102, test_acc: 0.6365, best: 0.6452, time: 0:00:57
 Epoch: 54, lr: 1.0e-02, train_loss: 1.0402, train_acc: 0.6218 test_loss: 1.1256, test_acc: 0.6315, best: 0.6452, time: 0:00:57
 Epoch: 55, lr: 1.0e-02, train_loss: 1.0190, train_acc: 0.6360 test_loss: 1.0857, test_acc: 0.6272, best: 0.6452, time: 0:00:57
 Epoch: 56, lr: 1.0e-02, train_loss: 0.9955, train_acc: 0.6400 test_loss: 1.2585, test_acc: 0.6272, best: 0.6452, time: 0:00:57
 Epoch: 57, lr: 1.0e-02, train_loss: 1.0104, train_acc: 0.6334 test_loss: 1.0042, test_acc: 0.6554, best: 0.6554, time: 0:00:57
 Epoch: 58, lr: 1.0e-02, train_loss: 1.0133, train_acc: 0.6394 test_loss: 0.9349, test_acc: 0.6725, best: 0.6725, time: 0:00:57
 Epoch: 59, lr: 1.0e-02, train_loss: 0.9848, train_acc: 0.6446 test_loss: 1.1963, test_acc: 0.6180, best: 0.6725, time: 0:00:57
 Epoch: 60, lr: 1.0e-02, train_loss: 0.9833, train_acc: 0.6486 test_loss: 1.1422, test_acc: 0.6389, best: 0.6725, time: 0:00:57
 Epoch: 61, lr: 1.0e-02, train_loss: 0.9571, train_acc: 0.6566 test_loss: 1.0490, test_acc: 0.6458, best: 0.6725, time: 0:00:57
 Epoch: 62, lr: 1.0e-02, train_loss: 0.9783, train_acc: 0.6492 test_loss: 1.0949, test_acc: 0.6471, best: 0.6725, time: 0:00:57
 Epoch: 63, lr: 1.0e-02, train_loss: 0.9545, train_acc: 0.6508 test_loss: 0.9756, test_acc: 0.6590, best: 0.6725, time: 0:00:57
 Epoch: 64, lr: 1.0e-02, train_loss: 0.9389, train_acc: 0.6636 test_loss: 0.9989, test_acc: 0.6654, best: 0.6725, time: 0:00:57
 Epoch: 65, lr: 1.0e-02, train_loss: 0.9399, train_acc: 0.6648 test_loss: 1.0178, test_acc: 0.6689, best: 0.6725, time: 0:00:57
 Epoch: 66, lr: 1.0e-02, train_loss: 0.9251, train_acc: 0.6680 test_loss: 1.3785, test_acc: 0.6224, best: 0.6725, time: 0:00:57
 Epoch: 67, lr: 1.0e-02, train_loss: 0.9234, train_acc: 0.6630 test_loss: 1.1867, test_acc: 0.6368, best: 0.6725, time: 0:00:57
 Epoch: 68, lr: 1.0e-02, train_loss: 0.9256, train_acc: 0.6620 test_loss: 1.7037, test_acc: 0.5833, best: 0.6725, time: 0:00:57
 Epoch: 69, lr: 1.0e-02, train_loss: 0.9047, train_acc: 0.6718 test_loss: 1.0054, test_acc: 0.6679, best: 0.6725, time: 0:00:57
 Epoch: 70, lr: 1.0e-02, train_loss: 0.8994, train_acc: 0.6782 test_loss: 1.1587, test_acc: 0.6440, best: 0.6725, time: 0:00:57
 Epoch: 71, lr: 1.0e-02, train_loss: 0.9092, train_acc: 0.6672 test_loss: 1.0597, test_acc: 0.6671, best: 0.6725, time: 0:00:57
 Epoch: 72, lr: 1.0e-02, train_loss: 0.9186, train_acc: 0.6766 test_loss: 1.1579, test_acc: 0.6170, best: 0.6725, time: 0:00:57
 Epoch: 73, lr: 1.0e-02, train_loss: 0.8937, train_acc: 0.6742 test_loss: 1.0533, test_acc: 0.6689, best: 0.6725, time: 0:00:57
 Epoch: 74, lr: 1.0e-02, train_loss: 0.8945, train_acc: 0.6768 test_loss: 1.1945, test_acc: 0.6475, best: 0.6725, time: 0:00:57
 Epoch: 75, lr: 1.0e-02, train_loss: 0.8651, train_acc: 0.6908 test_loss: 1.4394, test_acc: 0.6215, best: 0.6725, time: 0:00:57
 Epoch: 76, lr: 1.0e-02, train_loss: 0.8571, train_acc: 0.6946 test_loss: 1.1801, test_acc: 0.6564, best: 0.6725, time: 0:00:57
 Epoch: 77, lr: 1.0e-02, train_loss: 0.8563, train_acc: 0.6918 test_loss: 1.1830, test_acc: 0.6468, best: 0.6725, time: 0:00:57
 Epoch: 78, lr: 1.0e-02, train_loss: 0.8625, train_acc: 0.6944 test_loss: 1.0334, test_acc: 0.6734, best: 0.6734, time: 0:00:57
 Epoch: 79, lr: 1.0e-02, train_loss: 0.8251, train_acc: 0.7106 test_loss: 1.1649, test_acc: 0.6400, best: 0.6734, time: 0:00:57
 Epoch: 80, lr: 1.0e-02, train_loss: 0.8331, train_acc: 0.7042 test_loss: 1.0352, test_acc: 0.6614, best: 0.6734, time: 0:00:57
 Epoch: 81, lr: 1.0e-02, train_loss: 0.8506, train_acc: 0.6972 test_loss: 1.1285, test_acc: 0.6479, best: 0.6734, time: 0:00:56
 Epoch: 82, lr: 1.0e-02, train_loss: 0.8479, train_acc: 0.6984 test_loss: 0.9200, test_acc: 0.6934, best: 0.6934, time: 0:00:57
 Epoch: 83, lr: 1.0e-02, train_loss: 0.8177, train_acc: 0.7074 test_loss: 1.0629, test_acc: 0.6670, best: 0.6934, time: 0:00:57
 Epoch: 84, lr: 1.0e-02, train_loss: 0.8365, train_acc: 0.6990 test_loss: 1.1753, test_acc: 0.6494, best: 0.6934, time: 0:00:57
 Epoch: 85, lr: 1.0e-02, train_loss: 0.7986, train_acc: 0.7146 test_loss: 1.0456, test_acc: 0.6705, best: 0.6934, time: 0:00:56
 Epoch: 86, lr: 1.0e-02, train_loss: 0.7888, train_acc: 0.7186 test_loss: 0.9623, test_acc: 0.6954, best: 0.6954, time: 0:00:57
 Epoch: 87, lr: 1.0e-02, train_loss: 0.8160, train_acc: 0.7080 test_loss: 1.1306, test_acc: 0.6586, best: 0.6954, time: 0:00:57
 Epoch: 88, lr: 1.0e-02, train_loss: 0.7951, train_acc: 0.7108 test_loss: 1.0891, test_acc: 0.6661, best: 0.6954, time: 0:00:57
 Epoch: 89, lr: 1.0e-02, train_loss: 0.7689, train_acc: 0.7284 test_loss: 0.9726, test_acc: 0.6869, best: 0.6954, time: 0:00:56
 Epoch: 90, lr: 1.0e-02, train_loss: 0.7992, train_acc: 0.7148 test_loss: 1.0098, test_acc: 0.6864, best: 0.6954, time: 0:00:56
 Epoch: 91, lr: 1.0e-02, train_loss: 0.8063, train_acc: 0.7146 test_loss: 0.9632, test_acc: 0.6854, best: 0.6954, time: 0:00:56
 Epoch: 92, lr: 1.0e-02, train_loss: 0.7756, train_acc: 0.7176 test_loss: 1.0133, test_acc: 0.6747, best: 0.6954, time: 0:00:57
 Epoch: 93, lr: 1.0e-02, train_loss: 0.7693, train_acc: 0.7282 test_loss: 1.1571, test_acc: 0.6681, best: 0.6954, time: 0:00:56
 Epoch: 94, lr: 1.0e-02, train_loss: 0.7755, train_acc: 0.7224 test_loss: 1.0051, test_acc: 0.6780, best: 0.6954, time: 0:00:56
 Epoch: 95, lr: 1.0e-02, train_loss: 0.7573, train_acc: 0.7348 test_loss: 1.0662, test_acc: 0.6783, best: 0.6954, time: 0:00:57
 Epoch: 96, lr: 1.0e-02, train_loss: 0.7495, train_acc: 0.7266 test_loss: 1.2622, test_acc: 0.6478, best: 0.6954, time: 0:00:56
 Epoch: 97, lr: 1.0e-02, train_loss: 0.7578, train_acc: 0.7262 test_loss: 1.0392, test_acc: 0.6884, best: 0.6954, time: 0:00:56
 Epoch: 98, lr: 1.0e-02, train_loss: 0.7332, train_acc: 0.7388 test_loss: 1.7771, test_acc: 0.5971, best: 0.6954, time: 0:00:57
 Epoch: 99, lr: 1.0e-02, train_loss: 0.7613, train_acc: 0.7248 test_loss: 1.0431, test_acc: 0.6806, best: 0.6954, time: 0:00:56
 Epoch: 100, lr: 1.0e-02, train_loss: 0.7462, train_acc: 0.7380 test_loss: 1.0743, test_acc: 0.6823, best: 0.6954, time: 0:00:57
 Epoch: 101, lr: 1.0e-02, train_loss: 0.7225, train_acc: 0.7398 test_loss: 1.5000, test_acc: 0.6364, best: 0.6954, time: 0:00:56
 Epoch: 102, lr: 1.0e-02, train_loss: 0.7050, train_acc: 0.7488 test_loss: 1.0712, test_acc: 0.6721, best: 0.6954, time: 0:00:56
 Epoch: 103, lr: 1.0e-02, train_loss: 0.7392, train_acc: 0.7392 test_loss: 1.0442, test_acc: 0.6796, best: 0.6954, time: 0:00:56
 Epoch: 104, lr: 1.0e-02, train_loss: 0.7165, train_acc: 0.7456 test_loss: 1.0129, test_acc: 0.6863, best: 0.6954, time: 0:00:56
 Epoch: 105, lr: 1.0e-02, train_loss: 0.7013, train_acc: 0.7582 test_loss: 1.1254, test_acc: 0.6741, best: 0.6954, time: 0:00:56
 Epoch: 106, lr: 1.0e-02, train_loss: 0.7140, train_acc: 0.7472 test_loss: 1.0021, test_acc: 0.6936, best: 0.6954, time: 0:00:56
 Epoch: 107, lr: 1.0e-02, train_loss: 0.7021, train_acc: 0.7494 test_loss: 0.9373, test_acc: 0.7061, best: 0.7061, time: 0:00:57
 Epoch: 108, lr: 1.0e-02, train_loss: 0.6772, train_acc: 0.7612 test_loss: 1.0275, test_acc: 0.6907, best: 0.7061, time: 0:00:57
 Epoch: 109, lr: 1.0e-02, train_loss: 0.6941, train_acc: 0.7598 test_loss: 0.9957, test_acc: 0.6953, best: 0.7061, time: 0:00:56
 Epoch: 110, lr: 1.0e-02, train_loss: 0.7107, train_acc: 0.7430 test_loss: 0.9137, test_acc: 0.7119, best: 0.7119, time: 0:00:57
 Epoch: 111, lr: 1.0e-02, train_loss: 0.7094, train_acc: 0.7412 test_loss: 1.1472, test_acc: 0.6677, best: 0.7119, time: 0:00:57
 Epoch: 112, lr: 1.0e-02, train_loss: 0.6767, train_acc: 0.7612 test_loss: 1.0995, test_acc: 0.6937, best: 0.7119, time: 0:00:57
 Epoch: 113, lr: 1.0e-02, train_loss: 0.6920, train_acc: 0.7496 test_loss: 1.0284, test_acc: 0.6959, best: 0.7119, time: 0:00:57
 Epoch: 114, lr: 1.0e-02, train_loss: 0.6674, train_acc: 0.7594 test_loss: 1.2608, test_acc: 0.6743, best: 0.7119, time: 0:00:57
 Epoch: 115, lr: 1.0e-02, train_loss: 0.6757, train_acc: 0.7534 test_loss: 1.0877, test_acc: 0.6806, best: 0.7119, time: 0:00:56
 Epoch: 116, lr: 1.0e-02, train_loss: 0.6633, train_acc: 0.7618 test_loss: 0.9976, test_acc: 0.7020, best: 0.7119, time: 0:00:57
 Epoch: 117, lr: 1.0e-02, train_loss: 0.6488, train_acc: 0.7686 test_loss: 0.9966, test_acc: 0.7021, best: 0.7119, time: 0:00:56
 Epoch: 118, lr: 1.0e-02, train_loss: 0.6579, train_acc: 0.7686 test_loss: 1.4144, test_acc: 0.6485, best: 0.7119, time: 0:00:56
 Epoch: 119, lr: 1.0e-02, train_loss: 0.6582, train_acc: 0.7666 test_loss: 1.0765, test_acc: 0.6839, best: 0.7119, time: 0:00:56
 Epoch: 120, lr: 1.0e-02, train_loss: 0.6651, train_acc: 0.7632 test_loss: 1.0705, test_acc: 0.6874, best: 0.7119, time: 0:00:56
 Epoch: 121, lr: 1.0e-02, train_loss: 0.6626, train_acc: 0.7710 test_loss: 1.1377, test_acc: 0.6796, best: 0.7119, time: 0:00:56
 Epoch: 122, lr: 1.0e-02, train_loss: 0.6493, train_acc: 0.7660 test_loss: 1.1966, test_acc: 0.6824, best: 0.7119, time: 0:00:57
 Epoch: 123, lr: 1.0e-02, train_loss: 0.6608, train_acc: 0.7664 test_loss: 0.9846, test_acc: 0.6970, best: 0.7119, time: 0:00:57
 Epoch: 124, lr: 1.0e-02, train_loss: 0.6249, train_acc: 0.7786 test_loss: 1.1091, test_acc: 0.6819, best: 0.7119, time: 0:00:57
 Epoch: 125, lr: 1.0e-02, train_loss: 0.6640, train_acc: 0.7632 test_loss: 1.0995, test_acc: 0.6820, best: 0.7119, time: 0:00:56
 Epoch: 126, lr: 1.0e-02, train_loss: 0.6231, train_acc: 0.7804 test_loss: 1.0495, test_acc: 0.7014, best: 0.7119, time: 0:00:56
 Epoch: 127, lr: 1.0e-02, train_loss: 0.6213, train_acc: 0.7828 test_loss: 1.0856, test_acc: 0.6945, best: 0.7119, time: 0:00:56
 Epoch: 128, lr: 1.0e-02, train_loss: 0.6278, train_acc: 0.7734 test_loss: 1.1287, test_acc: 0.6804, best: 0.7119, time: 0:00:57
 Epoch: 129, lr: 1.0e-02, train_loss: 0.6312, train_acc: 0.7762 test_loss: 1.1329, test_acc: 0.6957, best: 0.7119, time: 0:00:57
 Epoch: 130, lr: 1.0e-02, train_loss: 0.6052, train_acc: 0.7890 test_loss: 1.1160, test_acc: 0.6963, best: 0.7119, time: 0:00:57
 Epoch: 131, lr: 1.0e-02, train_loss: 0.6151, train_acc: 0.7872 test_loss: 1.0031, test_acc: 0.6996, best: 0.7119, time: 0:00:57
 Epoch: 132, lr: 1.0e-02, train_loss: 0.6023, train_acc: 0.7856 test_loss: 1.1081, test_acc: 0.6875, best: 0.7119, time: 0:00:57
 Epoch: 133, lr: 1.0e-02, train_loss: 0.6135, train_acc: 0.7802 test_loss: 1.1490, test_acc: 0.6889, best: 0.7119, time: 0:00:56
 Epoch: 134, lr: 1.0e-02, train_loss: 0.6102, train_acc: 0.7842 test_loss: 1.0294, test_acc: 0.7010, best: 0.7119, time: 0:00:56
 Epoch: 135, lr: 1.0e-02, train_loss: 0.6252, train_acc: 0.7786 test_loss: 1.0519, test_acc: 0.7061, best: 0.7119, time: 0:00:56
 Epoch: 136, lr: 1.0e-02, train_loss: 0.5848, train_acc: 0.7938 test_loss: 1.1156, test_acc: 0.6926, best: 0.7119, time: 0:00:56
 Epoch: 137, lr: 1.0e-02, train_loss: 0.5992, train_acc: 0.7904 test_loss: 0.9570, test_acc: 0.7195, best: 0.7195, time: 0:00:57
 Epoch: 138, lr: 1.0e-02, train_loss: 0.5837, train_acc: 0.7982 test_loss: 1.0510, test_acc: 0.7036, best: 0.7195, time: 0:00:56
 Epoch: 139, lr: 1.0e-02, train_loss: 0.5768, train_acc: 0.7978 test_loss: 1.5787, test_acc: 0.6328, best: 0.7195, time: 0:00:57
 Epoch: 140, lr: 1.0e-02, train_loss: 0.5910, train_acc: 0.7960 test_loss: 1.0669, test_acc: 0.6974, best: 0.7195, time: 0:00:57
 Epoch: 141, lr: 1.0e-02, train_loss: 0.5635, train_acc: 0.8044 test_loss: 1.2635, test_acc: 0.6889, best: 0.7195, time: 0:00:57
 Epoch: 142, lr: 1.0e-02, train_loss: 0.5822, train_acc: 0.7958 test_loss: 1.3245, test_acc: 0.6655, best: 0.7195, time: 0:00:57
 Epoch: 143, lr: 1.0e-02, train_loss: 0.5660, train_acc: 0.8030 test_loss: 1.3771, test_acc: 0.6720, best: 0.7195, time: 0:00:57
 Epoch: 144, lr: 1.0e-02, train_loss: 0.5883, train_acc: 0.7946 test_loss: 1.1803, test_acc: 0.6929, best: 0.7195, time: 0:00:56
 Epoch: 145, lr: 1.0e-02, train_loss: 0.5864, train_acc: 0.7968 test_loss: 1.1873, test_acc: 0.6919, best: 0.7195, time: 0:00:56
 Epoch: 146, lr: 1.0e-02, train_loss: 0.5497, train_acc: 0.8084 test_loss: 1.2911, test_acc: 0.6870, best: 0.7195, time: 0:00:56
 Epoch: 147, lr: 1.0e-02, train_loss: 0.5758, train_acc: 0.7954 test_loss: 1.1832, test_acc: 0.6846, best: 0.7195, time: 0:00:56
 Epoch: 148, lr: 1.0e-02, train_loss: 0.5629, train_acc: 0.8014 test_loss: 1.0941, test_acc: 0.6899, best: 0.7195, time: 0:00:57
 Epoch: 149, lr: 1.0e-02, train_loss: 0.5612, train_acc: 0.8038 test_loss: 1.1226, test_acc: 0.6891, best: 0.7195, time: 0:00:56
 Epoch: 150, lr: 1.0e-02, train_loss: 0.5497, train_acc: 0.8080 test_loss: 1.2426, test_acc: 0.6770, best: 0.7195, time: 0:00:56
 Epoch: 151, lr: 1.0e-02, train_loss: 0.5426, train_acc: 0.8098 test_loss: 1.0440, test_acc: 0.7173, best: 0.7195, time: 0:00:56
 Epoch: 152, lr: 1.0e-02, train_loss: 0.5493, train_acc: 0.8056 test_loss: 1.0933, test_acc: 0.7110, best: 0.7195, time: 0:00:57
 Epoch: 153, lr: 1.0e-02, train_loss: 0.5408, train_acc: 0.8090 test_loss: 1.6160, test_acc: 0.6481, best: 0.7195, time: 0:00:56
 Epoch: 154, lr: 1.0e-02, train_loss: 0.5593, train_acc: 0.8044 test_loss: 1.1237, test_acc: 0.6964, best: 0.7195, time: 0:00:56
 Epoch: 155, lr: 1.0e-02, train_loss: 0.5493, train_acc: 0.8076 test_loss: 1.1857, test_acc: 0.6926, best: 0.7195, time: 0:00:57
 Epoch: 156, lr: 1.0e-02, train_loss: 0.5674, train_acc: 0.8024 test_loss: 1.2097, test_acc: 0.6926, best: 0.7195, time: 0:00:57
 Epoch: 157, lr: 1.0e-02, train_loss: 0.5656, train_acc: 0.7974 test_loss: 1.1318, test_acc: 0.6963, best: 0.7195, time: 0:00:57
 Epoch: 158, lr: 1.0e-02, train_loss: 0.5419, train_acc: 0.8142 test_loss: 1.1460, test_acc: 0.6981, best: 0.7195, time: 0:00:57
 Epoch: 159, lr: 1.0e-02, train_loss: 0.5189, train_acc: 0.8232 test_loss: 1.1144, test_acc: 0.7051, best: 0.7195, time: 0:00:56
 Epoch: 160, lr: 1.0e-02, train_loss: 0.5376, train_acc: 0.8074 test_loss: 1.0702, test_acc: 0.7076, best: 0.7195, time: 0:00:57
 Epoch: 161, lr: 1.0e-02, train_loss: 0.5301, train_acc: 0.8188 test_loss: 1.2445, test_acc: 0.6844, best: 0.7195, time: 0:00:57
 Epoch: 162, lr: 1.0e-02, train_loss: 0.5266, train_acc: 0.8208 test_loss: 1.3108, test_acc: 0.6846, best: 0.7195, time: 0:00:57
 Epoch: 163, lr: 1.0e-02, train_loss: 0.5134, train_acc: 0.8178 test_loss: 1.0096, test_acc: 0.7226, best: 0.7226, time: 0:00:57
 Epoch: 164, lr: 1.0e-02, train_loss: 0.5403, train_acc: 0.8122 test_loss: 1.0063, test_acc: 0.7136, best: 0.7226, time: 0:00:57
 Epoch: 165, lr: 1.0e-02, train_loss: 0.5001, train_acc: 0.8212 test_loss: 1.2055, test_acc: 0.7036, best: 0.7226, time: 0:00:57
 Epoch: 166, lr: 1.0e-02, train_loss: 0.5232, train_acc: 0.8176 test_loss: 1.1026, test_acc: 0.7120, best: 0.7226, time: 0:00:57
 Epoch: 167, lr: 1.0e-02, train_loss: 0.5278, train_acc: 0.8106 test_loss: 1.1317, test_acc: 0.7070, best: 0.7226, time: 0:00:57
 Epoch: 168, lr: 1.0e-02, train_loss: 0.5353, train_acc: 0.8132 test_loss: 1.1136, test_acc: 0.7220, best: 0.7226, time: 0:00:57
 Epoch: 169, lr: 1.0e-02, train_loss: 0.5106, train_acc: 0.8298 test_loss: 1.0409, test_acc: 0.7190, best: 0.7226, time: 0:00:57
 Epoch: 170, lr: 1.0e-02, train_loss: 0.5126, train_acc: 0.8204 test_loss: 1.1405, test_acc: 0.7081, best: 0.7226, time: 0:00:57
 Epoch: 171, lr: 1.0e-02, train_loss: 0.5034, train_acc: 0.8188 test_loss: 1.1586, test_acc: 0.7044, best: 0.7226, time: 0:00:57
 Epoch: 172, lr: 1.0e-02, train_loss: 0.4865, train_acc: 0.8328 test_loss: 1.1421, test_acc: 0.7252, best: 0.7252, time: 0:00:57
 Epoch: 173, lr: 1.0e-02, train_loss: 0.5084, train_acc: 0.8226 test_loss: 1.1968, test_acc: 0.6987, best: 0.7252, time: 0:00:57
 Epoch: 174, lr: 1.0e-02, train_loss: 0.5100, train_acc: 0.8176 test_loss: 1.1151, test_acc: 0.7149, best: 0.7252, time: 0:00:57
 Epoch: 175, lr: 1.0e-02, train_loss: 0.5179, train_acc: 0.8198 test_loss: 1.1135, test_acc: 0.7090, best: 0.7252, time: 0:00:57
 Epoch: 176, lr: 1.0e-02, train_loss: 0.5054, train_acc: 0.8244 test_loss: 1.1369, test_acc: 0.7046, best: 0.7252, time: 0:00:57
 Epoch: 177, lr: 1.0e-02, train_loss: 0.5108, train_acc: 0.8218 test_loss: 1.0748, test_acc: 0.7214, best: 0.7252, time: 0:00:56
 Epoch: 178, lr: 1.0e-02, train_loss: 0.4951, train_acc: 0.8226 test_loss: 1.1433, test_acc: 0.7023, best: 0.7252, time: 0:00:56
 Epoch: 179, lr: 1.0e-02, train_loss: 0.5158, train_acc: 0.8218 test_loss: 1.1661, test_acc: 0.7037, best: 0.7252, time: 0:00:57
 Epoch: 180, lr: 2.0e-03, train_loss: 0.4107, train_acc: 0.8556 test_loss: 1.0561, test_acc: 0.7280, best: 0.7280, time: 0:00:57
 Epoch: 181, lr: 2.0e-03, train_loss: 0.3877, train_acc: 0.8640 test_loss: 1.0408, test_acc: 0.7342, best: 0.7342, time: 0:00:57
 Epoch: 182, lr: 2.0e-03, train_loss: 0.3995, train_acc: 0.8618 test_loss: 1.0935, test_acc: 0.7296, best: 0.7342, time: 0:00:56
 Epoch: 183, lr: 2.0e-03, train_loss: 0.3953, train_acc: 0.8628 test_loss: 1.0663, test_acc: 0.7339, best: 0.7342, time: 0:00:57
 Epoch: 184, lr: 2.0e-03, train_loss: 0.3988, train_acc: 0.8562 test_loss: 1.0020, test_acc: 0.7356, best: 0.7356, time: 0:00:57
 Epoch: 185, lr: 2.0e-03, train_loss: 0.3650, train_acc: 0.8710 test_loss: 1.0290, test_acc: 0.7408, best: 0.7408, time: 0:00:57
 Epoch: 186, lr: 2.0e-03, train_loss: 0.3776, train_acc: 0.8772 test_loss: 1.0883, test_acc: 0.7290, best: 0.7408, time: 0:00:57
 Epoch: 187, lr: 2.0e-03, train_loss: 0.3564, train_acc: 0.8738 test_loss: 1.0948, test_acc: 0.7356, best: 0.7408, time: 0:00:57
 Epoch: 188, lr: 2.0e-03, train_loss: 0.3649, train_acc: 0.8742 test_loss: 1.0814, test_acc: 0.7382, best: 0.7408, time: 0:00:57
 Epoch: 189, lr: 2.0e-03, train_loss: 0.3620, train_acc: 0.8756 test_loss: 1.0468, test_acc: 0.7352, best: 0.7408, time: 0:00:57
 Epoch: 190, lr: 2.0e-03, train_loss: 0.3419, train_acc: 0.8802 test_loss: 1.0392, test_acc: 0.7471, best: 0.7471, time: 0:00:57
 Epoch: 191, lr: 2.0e-03, train_loss: 0.3548, train_acc: 0.8770 test_loss: 1.0568, test_acc: 0.7421, best: 0.7471, time: 0:00:57
 Epoch: 192, lr: 2.0e-03, train_loss: 0.3474, train_acc: 0.8832 test_loss: 1.0849, test_acc: 0.7425, best: 0.7471, time: 0:00:57
 Epoch: 193, lr: 2.0e-03, train_loss: 0.3402, train_acc: 0.8876 test_loss: 1.0418, test_acc: 0.7492, best: 0.7492, time: 0:00:57
 Epoch: 194, lr: 2.0e-03, train_loss: 0.3380, train_acc: 0.8816 test_loss: 1.0686, test_acc: 0.7461, best: 0.7492, time: 0:00:57
 Epoch: 195, lr: 2.0e-03, train_loss: 0.3483, train_acc: 0.8780 test_loss: 1.1048, test_acc: 0.7432, best: 0.7492, time: 0:00:57
 Epoch: 196, lr: 2.0e-03, train_loss: 0.3573, train_acc: 0.8728 test_loss: 1.0849, test_acc: 0.7401, best: 0.7492, time: 0:00:57
 Epoch: 197, lr: 2.0e-03, train_loss: 0.3397, train_acc: 0.8804 test_loss: 1.1139, test_acc: 0.7431, best: 0.7492, time: 0:00:56
 Epoch: 198, lr: 2.0e-03, train_loss: 0.3361, train_acc: 0.8806 test_loss: 1.0665, test_acc: 0.7449, best: 0.7492, time: 0:00:56
 Epoch: 199, lr: 2.0e-03, train_loss: 0.3414, train_acc: 0.8868 test_loss: 1.0635, test_acc: 0.7485, best: 0.7492, time: 0:00:57
 Epoch: 200, lr: 2.0e-03, train_loss: 0.3569, train_acc: 0.8796 test_loss: 1.1721, test_acc: 0.7372, best: 0.7492, time: 0:00:57
 Epoch: 201, lr: 2.0e-03, train_loss: 0.3324, train_acc: 0.8866 test_loss: 1.1887, test_acc: 0.7260, best: 0.7492, time: 0:00:56
 Epoch: 202, lr: 2.0e-03, train_loss: 0.3417, train_acc: 0.8820 test_loss: 1.1450, test_acc: 0.7332, best: 0.7492, time: 0:00:57
 Epoch: 203, lr: 2.0e-03, train_loss: 0.3496, train_acc: 0.8832 test_loss: 1.1499, test_acc: 0.7346, best: 0.7492, time: 0:00:57
 Epoch: 204, lr: 2.0e-03, train_loss: 0.3352, train_acc: 0.8840 test_loss: 1.0859, test_acc: 0.7366, best: 0.7492, time: 0:00:57
 Epoch: 205, lr: 2.0e-03, train_loss: 0.3342, train_acc: 0.8846 test_loss: 1.1183, test_acc: 0.7354, best: 0.7492, time: 0:00:56
 Epoch: 206, lr: 2.0e-03, train_loss: 0.3239, train_acc: 0.8852 test_loss: 1.0615, test_acc: 0.7444, best: 0.7492, time: 0:00:56
 Epoch: 207, lr: 2.0e-03, train_loss: 0.3314, train_acc: 0.8796 test_loss: 1.0716, test_acc: 0.7450, best: 0.7492, time: 0:00:56
 Epoch: 208, lr: 2.0e-03, train_loss: 0.3293, train_acc: 0.8864 test_loss: 1.0978, test_acc: 0.7475, best: 0.7492, time: 0:00:56
 Epoch: 209, lr: 2.0e-03, train_loss: 0.3111, train_acc: 0.8932 test_loss: 1.1449, test_acc: 0.7374, best: 0.7492, time: 0:00:55
 Epoch: 210, lr: 2.0e-03, train_loss: 0.3480, train_acc: 0.8844 test_loss: 1.1123, test_acc: 0.7389, best: 0.7492, time: 0:00:56
 Epoch: 211, lr: 2.0e-03, train_loss: 0.3337, train_acc: 0.8868 test_loss: 1.1217, test_acc: 0.7418, best: 0.7492, time: 0:00:56
 Epoch: 212, lr: 2.0e-03, train_loss: 0.3288, train_acc: 0.8860 test_loss: 1.0424, test_acc: 0.7535, best: 0.7535, time: 0:00:56
 Epoch: 213, lr: 2.0e-03, train_loss: 0.3160, train_acc: 0.8940 test_loss: 1.1486, test_acc: 0.7369, best: 0.7535, time: 0:00:55
 Epoch: 214, lr: 2.0e-03, train_loss: 0.3138, train_acc: 0.8882 test_loss: 1.1709, test_acc: 0.7359, best: 0.7535, time: 0:00:55
 Epoch: 215, lr: 2.0e-03, train_loss: 0.3109, train_acc: 0.8898 test_loss: 1.1266, test_acc: 0.7490, best: 0.7535, time: 0:00:56
 Epoch: 216, lr: 2.0e-03, train_loss: 0.3306, train_acc: 0.8864 test_loss: 1.0808, test_acc: 0.7492, best: 0.7535, time: 0:00:56
 Epoch: 217, lr: 2.0e-03, train_loss: 0.3281, train_acc: 0.8846 test_loss: 1.1324, test_acc: 0.7425, best: 0.7535, time: 0:00:56
 Epoch: 218, lr: 2.0e-03, train_loss: 0.3234, train_acc: 0.8882 test_loss: 1.0929, test_acc: 0.7512, best: 0.7535, time: 0:00:54
 Epoch: 219, lr: 2.0e-03, train_loss: 0.3268, train_acc: 0.8916 test_loss: 1.1330, test_acc: 0.7384, best: 0.7535, time: 0:00:54
 Epoch: 220, lr: 2.0e-03, train_loss: 0.3246, train_acc: 0.8896 test_loss: 1.0910, test_acc: 0.7398, best: 0.7535, time: 0:00:54
 Epoch: 221, lr: 2.0e-03, train_loss: 0.2931, train_acc: 0.9042 test_loss: 1.1319, test_acc: 0.7332, best: 0.7535, time: 0:00:54
 Epoch: 222, lr: 2.0e-03, train_loss: 0.2976, train_acc: 0.8970 test_loss: 1.1772, test_acc: 0.7356, best: 0.7535, time: 0:00:54
 Epoch: 223, lr: 2.0e-03, train_loss: 0.3282, train_acc: 0.8854 test_loss: 1.1020, test_acc: 0.7524, best: 0.7535, time: 0:00:54
 Epoch: 224, lr: 2.0e-03, train_loss: 0.3207, train_acc: 0.8870 test_loss: 1.2029, test_acc: 0.7315, best: 0.7535, time: 0:00:54
 Epoch: 225, lr: 2.0e-03, train_loss: 0.3147, train_acc: 0.8866 test_loss: 1.0873, test_acc: 0.7479, best: 0.7535, time: 0:00:54
 Epoch: 226, lr: 2.0e-03, train_loss: 0.3244, train_acc: 0.8848 test_loss: 1.0762, test_acc: 0.7460, best: 0.7535, time: 0:00:54
 Epoch: 227, lr: 2.0e-03, train_loss: 0.3155, train_acc: 0.8910 test_loss: 1.1110, test_acc: 0.7454, best: 0.7535, time: 0:00:54
 Epoch: 228, lr: 2.0e-03, train_loss: 0.3169, train_acc: 0.8902 test_loss: 1.1268, test_acc: 0.7380, best: 0.7535, time: 0:00:54
 Epoch: 229, lr: 2.0e-03, train_loss: 0.3130, train_acc: 0.8914 test_loss: 1.0808, test_acc: 0.7458, best: 0.7535, time: 0:00:54
 Epoch: 230, lr: 2.0e-03, train_loss: 0.3172, train_acc: 0.8910 test_loss: 1.0806, test_acc: 0.7466, best: 0.7535, time: 0:00:54
 Epoch: 231, lr: 2.0e-03, train_loss: 0.2976, train_acc: 0.8968 test_loss: 1.0891, test_acc: 0.7474, best: 0.7535, time: 0:00:54
 Epoch: 232, lr: 2.0e-03, train_loss: 0.3149, train_acc: 0.8910 test_loss: 1.0972, test_acc: 0.7468, best: 0.7535, time: 0:00:54
 Epoch: 233, lr: 2.0e-03, train_loss: 0.2877, train_acc: 0.9036 test_loss: 1.1089, test_acc: 0.7449, best: 0.7535, time: 0:00:54
 Epoch: 234, lr: 2.0e-03, train_loss: 0.3163, train_acc: 0.8902 test_loss: 1.1081, test_acc: 0.7458, best: 0.7535, time: 0:00:54
 Epoch: 235, lr: 2.0e-03, train_loss: 0.3175, train_acc: 0.8916 test_loss: 1.0672, test_acc: 0.7486, best: 0.7535, time: 0:00:53
 Epoch: 236, lr: 2.0e-03, train_loss: 0.2952, train_acc: 0.8996 test_loss: 1.1344, test_acc: 0.7448, best: 0.7535, time: 0:00:54
 Epoch: 237, lr: 2.0e-03, train_loss: 0.3121, train_acc: 0.8898 test_loss: 1.0958, test_acc: 0.7459, best: 0.7535, time: 0:00:54
 Epoch: 238, lr: 2.0e-03, train_loss: 0.3131, train_acc: 0.8876 test_loss: 1.1019, test_acc: 0.7462, best: 0.7535, time: 0:00:53
 Epoch: 239, lr: 2.0e-03, train_loss: 0.3053, train_acc: 0.8948 test_loss: 1.1852, test_acc: 0.7376, best: 0.7535, time: 0:00:54
 Epoch: 240, lr: 4.0e-04, train_loss: 0.2953, train_acc: 0.8964 test_loss: 1.1242, test_acc: 0.7472, best: 0.7535, time: 0:00:54
 Epoch: 241, lr: 4.0e-04, train_loss: 0.3006, train_acc: 0.9004 test_loss: 1.1004, test_acc: 0.7486, best: 0.7535, time: 0:00:54
 Epoch: 242, lr: 4.0e-04, train_loss: 0.3005, train_acc: 0.8982 test_loss: 1.0945, test_acc: 0.7471, best: 0.7535, time: 0:00:54
 Epoch: 243, lr: 4.0e-04, train_loss: 0.3033, train_acc: 0.8906 test_loss: 1.1072, test_acc: 0.7485, best: 0.7535, time: 0:00:54
 Epoch: 244, lr: 4.0e-04, train_loss: 0.2946, train_acc: 0.8996 test_loss: 1.0933, test_acc: 0.7531, best: 0.7535, time: 0:00:54
 Epoch: 245, lr: 4.0e-04, train_loss: 0.2814, train_acc: 0.8996 test_loss: 1.0560, test_acc: 0.7530, best: 0.7535, time: 0:00:54
 Epoch: 246, lr: 4.0e-04, train_loss: 0.2939, train_acc: 0.9044 test_loss: 1.1242, test_acc: 0.7410, best: 0.7535, time: 0:00:54
 Epoch: 247, lr: 4.0e-04, train_loss: 0.2959, train_acc: 0.8994 test_loss: 1.0687, test_acc: 0.7540, best: 0.7540, time: 0:00:54
 Epoch: 248, lr: 4.0e-04, train_loss: 0.2929, train_acc: 0.9022 test_loss: 1.1388, test_acc: 0.7432, best: 0.7540, time: 0:00:54
 Epoch: 249, lr: 4.0e-04, train_loss: 0.2911, train_acc: 0.8988 test_loss: 1.2307, test_acc: 0.7324, best: 0.7540, time: 0:00:54
 Epoch: 250, lr: 4.0e-04, train_loss: 0.2685, train_acc: 0.9046 test_loss: 1.1013, test_acc: 0.7484, best: 0.7540, time: 0:00:54
 Epoch: 251, lr: 4.0e-04, train_loss: 0.2703, train_acc: 0.9046 test_loss: 1.1177, test_acc: 0.7516, best: 0.7540, time: 0:00:54
 Epoch: 252, lr: 4.0e-04, train_loss: 0.2801, train_acc: 0.9066 test_loss: 1.0833, test_acc: 0.7540, best: 0.7540, time: 0:00:54
 Epoch: 253, lr: 4.0e-04, train_loss: 0.2787, train_acc: 0.9020 test_loss: 1.0945, test_acc: 0.7486, best: 0.7540, time: 0:00:54
 Epoch: 254, lr: 4.0e-04, train_loss: 0.2888, train_acc: 0.9024 test_loss: 1.0638, test_acc: 0.7519, best: 0.7540, time: 0:00:54
 Epoch: 255, lr: 4.0e-04, train_loss: 0.2943, train_acc: 0.8986 test_loss: 1.1057, test_acc: 0.7532, best: 0.7540, time: 0:00:54
 Epoch: 256, lr: 4.0e-04, train_loss: 0.2913, train_acc: 0.9012 test_loss: 1.1076, test_acc: 0.7511, best: 0.7540, time: 0:00:54
 Epoch: 257, lr: 4.0e-04, train_loss: 0.2693, train_acc: 0.9092 test_loss: 1.1267, test_acc: 0.7411, best: 0.7540, time: 0:00:54
 Epoch: 258, lr: 4.0e-04, train_loss: 0.2844, train_acc: 0.9016 test_loss: 1.1001, test_acc: 0.7519, best: 0.7540, time: 0:00:54
 Epoch: 259, lr: 4.0e-04, train_loss: 0.2736, train_acc: 0.9054 test_loss: 1.0807, test_acc: 0.7521, best: 0.7540, time: 0:00:54
 Epoch: 260, lr: 4.0e-04, train_loss: 0.2779, train_acc: 0.9078 test_loss: 1.0548, test_acc: 0.7568, best: 0.7568, time: 0:00:54
 Epoch: 261, lr: 4.0e-04, train_loss: 0.2824, train_acc: 0.8994 test_loss: 1.0956, test_acc: 0.7515, best: 0.7568, time: 0:00:54
 Epoch: 262, lr: 4.0e-04, train_loss: 0.2700, train_acc: 0.9044 test_loss: 1.1208, test_acc: 0.7484, best: 0.7568, time: 0:00:54
 Epoch: 263, lr: 4.0e-04, train_loss: 0.2719, train_acc: 0.9046 test_loss: 1.1263, test_acc: 0.7439, best: 0.7568, time: 0:00:54
 Epoch: 264, lr: 4.0e-04, train_loss: 0.2942, train_acc: 0.9012 test_loss: 1.1086, test_acc: 0.7531, best: 0.7568, time: 0:00:54
 Epoch: 265, lr: 4.0e-04, train_loss: 0.2819, train_acc: 0.9008 test_loss: 1.1125, test_acc: 0.7509, best: 0.7568, time: 0:00:54
 Epoch: 266, lr: 4.0e-04, train_loss: 0.2834, train_acc: 0.9044 test_loss: 1.0804, test_acc: 0.7569, best: 0.7569, time: 0:00:54
 Epoch: 267, lr: 4.0e-04, train_loss: 0.2818, train_acc: 0.9018 test_loss: 1.1798, test_acc: 0.7425, best: 0.7569, time: 0:00:54
 Epoch: 268, lr: 4.0e-04, train_loss: 0.2595, train_acc: 0.9070 test_loss: 1.0771, test_acc: 0.7476, best: 0.7569, time: 0:00:54
 Epoch: 269, lr: 4.0e-04, train_loss: 0.2757, train_acc: 0.9042 test_loss: 1.1231, test_acc: 0.7479, best: 0.7569, time: 0:00:54
 Epoch: 270, lr: 8.0e-05, train_loss: 0.2723, train_acc: 0.9080 test_loss: 1.1482, test_acc: 0.7424, best: 0.7569, time: 0:00:54
 Epoch: 271, lr: 8.0e-05, train_loss: 0.2928, train_acc: 0.8996 test_loss: 1.1222, test_acc: 0.7472, best: 0.7569, time: 0:00:54
 Epoch: 272, lr: 8.0e-05, train_loss: 0.2710, train_acc: 0.9074 test_loss: 1.0921, test_acc: 0.7532, best: 0.7569, time: 0:00:54
 Epoch: 273, lr: 8.0e-05, train_loss: 0.2678, train_acc: 0.9106 test_loss: 1.1242, test_acc: 0.7462, best: 0.7569, time: 0:00:54
 Epoch: 274, lr: 8.0e-05, train_loss: 0.2806, train_acc: 0.9028 test_loss: 1.0934, test_acc: 0.7519, best: 0.7569, time: 0:00:54
 Epoch: 275, lr: 8.0e-05, train_loss: 0.2816, train_acc: 0.9014 test_loss: 1.0911, test_acc: 0.7504, best: 0.7569, time: 0:00:54
 Epoch: 276, lr: 8.0e-05, train_loss: 0.2878, train_acc: 0.9024 test_loss: 1.1529, test_acc: 0.7464, best: 0.7569, time: 0:00:54
 Epoch: 277, lr: 8.0e-05, train_loss: 0.2966, train_acc: 0.8974 test_loss: 1.0960, test_acc: 0.7514, best: 0.7569, time: 0:00:54
 Epoch: 278, lr: 8.0e-05, train_loss: 0.2793, train_acc: 0.9028 test_loss: 1.0797, test_acc: 0.7508, best: 0.7569, time: 0:00:54
 Epoch: 279, lr: 8.0e-05, train_loss: 0.2965, train_acc: 0.8970 test_loss: 1.0713, test_acc: 0.7529, best: 0.7569, time: 0:00:54
 Epoch: 280, lr: 8.0e-05, train_loss: 0.2758, train_acc: 0.9044 test_loss: 1.1246, test_acc: 0.7426, best: 0.7569, time: 0:00:54
 Epoch: 281, lr: 8.0e-05, train_loss: 0.2756, train_acc: 0.9054 test_loss: 1.1287, test_acc: 0.7470, best: 0.7569, time: 0:00:54
 Epoch: 282, lr: 8.0e-05, train_loss: 0.2743, train_acc: 0.9076 test_loss: 1.0942, test_acc: 0.7470, best: 0.7569, time: 0:00:54
 Epoch: 283, lr: 8.0e-05, train_loss: 0.2687, train_acc: 0.9082 test_loss: 1.1437, test_acc: 0.7436, best: 0.7569, time: 0:00:54
 Epoch: 284, lr: 8.0e-05, train_loss: 0.2674, train_acc: 0.9094 test_loss: 1.1287, test_acc: 0.7386, best: 0.7569, time: 0:00:54
 Epoch: 285, lr: 8.0e-05, train_loss: 0.2959, train_acc: 0.8956 test_loss: 1.0711, test_acc: 0.7544, best: 0.7569, time: 0:00:54
 Epoch: 286, lr: 8.0e-05, train_loss: 0.2956, train_acc: 0.9016 test_loss: 1.1155, test_acc: 0.7471, best: 0.7569, time: 0:00:54
 Epoch: 287, lr: 8.0e-05, train_loss: 0.2666, train_acc: 0.9072 test_loss: 1.1774, test_acc: 0.7405, best: 0.7569, time: 0:00:54
 Epoch: 288, lr: 8.0e-05, train_loss: 0.2617, train_acc: 0.9140 test_loss: 1.0988, test_acc: 0.7540, best: 0.7569, time: 0:00:54
 Epoch: 289, lr: 8.0e-05, train_loss: 0.2751, train_acc: 0.9072 test_loss: 1.1002, test_acc: 0.7510, best: 0.7569, time: 0:00:54
 Epoch: 290, lr: 8.0e-05, train_loss: 0.2634, train_acc: 0.9082 test_loss: 1.1051, test_acc: 0.7455, best: 0.7569, time: 0:00:54
 Epoch: 291, lr: 8.0e-05, train_loss: 0.2885, train_acc: 0.9032 test_loss: 1.0638, test_acc: 0.7545, best: 0.7569, time: 0:00:54
 Epoch: 292, lr: 8.0e-05, train_loss: 0.2776, train_acc: 0.9006 test_loss: 1.0696, test_acc: 0.7515, best: 0.7569, time: 0:00:54
 Epoch: 293, lr: 8.0e-05, train_loss: 0.2749, train_acc: 0.9082 test_loss: 1.1030, test_acc: 0.7480, best: 0.7569, time: 0:00:54
 Epoch: 294, lr: 8.0e-05, train_loss: 0.2755, train_acc: 0.9104 test_loss: 1.0903, test_acc: 0.7521, best: 0.7569, time: 0:00:54
 Epoch: 295, lr: 8.0e-05, train_loss: 0.2752, train_acc: 0.9062 test_loss: 1.0845, test_acc: 0.7531, best: 0.7569, time: 0:00:54
 Epoch: 296, lr: 8.0e-05, train_loss: 0.2696, train_acc: 0.9062 test_loss: 1.0675, test_acc: 0.7531, best: 0.7569, time: 0:00:54
 Epoch: 297, lr: 8.0e-05, train_loss: 0.2643, train_acc: 0.9082 test_loss: 1.1763, test_acc: 0.7371, best: 0.7569, time: 0:00:54
 Epoch: 298, lr: 8.0e-05, train_loss: 0.2790, train_acc: 0.9048 test_loss: 1.0982, test_acc: 0.7489, best: 0.7569, time: 0:00:54
 Epoch: 299, lr: 8.0e-05, train_loss: 0.2737, train_acc: 0.9046 test_loss: 1.1318, test_acc: 0.7458, best: 0.7569, time: 0:00:54
 Highest accuracy: 0.7569